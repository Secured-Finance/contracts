{
  "address": "0x391d4c86f0bB346c6eee10CfB9211983fDc7902C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_resolver",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidProxyContract",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newImplementationAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldImplementationAddress",
          "type": "address"
        }
      ],
      "name": "ProxyUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "destinations",
          "type": "address[]"
        }
      ],
      "name": "changeProxyAdmins",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddressResolverAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImpl",
          "type": "address"
        }
      ],
      "name": "setAddressResolverImpl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImpl",
          "type": "address"
        }
      ],
      "name": "setBeaconProxyControllerImpl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImpl",
          "type": "address"
        }
      ],
      "name": "setCurrencyControllerImpl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImpl",
          "type": "address"
        }
      ],
      "name": "setGenesisValueVaultImpl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImpl",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "marketBasePeriod",
          "type": "uint256"
        }
      ],
      "name": "setLendingMarketControllerImpl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImpl",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nativeToken",
          "type": "address"
        }
      ],
      "name": "setReserveFundImpl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImpl",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidationThresholdRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidationProtocolFeeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidatorFeeRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "nativeToken",
          "type": "address"
        }
      ],
      "name": "setTokenVaultImpl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdfb7773eaa73c8967b7e19708611dbba43ff46614d59a69d23d9e334d48ea034",
  "receipt": {
    "to": null,
    "from": "0xDBA767F3DFF3835BEf5dE1eDEe91A9901402AB21",
    "contractAddress": "0x391d4c86f0bB346c6eee10CfB9211983fDc7902C",
    "transactionIndex": 67,
    "gasUsed": "1714950",
    "logsBloom": "0x
    "blockHash": "0x7e09072f127e7a51231dfd12e0618dc0b943a5fdf3f3dc2245d546972fd2f2bc",
    "transactionHash": "0xdfb7773eaa73c8967b7e19708611dbba43ff46614d59a69d23d9e334d48ea034",
    "logs": [
      {
        "transactionIndex": 67,
        "blockNumber": 4869484,
        "transactionHash": "0xdfb7773eaa73c8967b7e19708611dbba43ff46614d59a69d23d9e334d48ea034",
        "address": "0x391d4c86f0bB346c6eee10CfB9211983fDc7902C",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000dba767f3dff3835bef5de1edee91a9901402ab21"
        ],
        "data": "0x",
        "logIndex": 66,
        "blockHash": "0x7e09072f127e7a51231dfd12e0618dc0b943a5fdf3f3dc2245d546972fd2f2bc"
      }
    ],
    "blockNumber": 4869484,
    "cumulativeGasUsed": "7206918",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0000000000000000000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "ff616d87686c17fd85cdb91a0fbca87a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidProxyContract\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementationAddress\",\"type\":\"address\"}],\"name\":\"ProxyUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"destinations\",\"type\":\"address[]\"}],\"name\":\"changeProxyAdmins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressResolverAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImpl\",\"type\":\"address\"}],\"name\":\"setAddressResolverImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImpl\",\"type\":\"address\"}],\"name\":\"setBeaconProxyControllerImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImpl\",\"type\":\"address\"}],\"name\":\"setCurrencyControllerImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImpl\",\"type\":\"address\"}],\"name\":\"setGenesisValueVaultImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImpl\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketBasePeriod\",\"type\":\"uint256\"}],\"name\":\"setLendingMarketControllerImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImpl\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nativeToken\",\"type\":\"address\"}],\"name\":\"setReserveFundImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImpl\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidationThresholdRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationProtocolFeeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidatorFeeRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nativeToken\",\"type\":\"address\"}],\"name\":\"setTokenVaultImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeProxyAdmins(address,address[])\":{\"params\":{\"destinations\":\"The destination contract addresses\",\"newAdmin\":\"The address of new admin\"}},\"constructor\":{\"details\":\"Set a proxy contract address of AddressResolver if it already exists. If not, set zero address here and call `setAddressResolverImpl` using the implementation address of AddressResolver to create a proxy contract.\",\"params\":{\"_resolver\":\"The address of the Address Resolver contract\"}},\"getAddress(bytes32)\":{\"params\":{\"name\":\"The cache name of the contract\"},\"returns\":{\"proxyAddress\":\"The proxy address for selected name\"}},\"getAddressResolverAddress()\":{\"returns\":{\"_0\":\"The contract address of AddressResolver\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAddressResolverImpl(address)\":{\"params\":{\"newImpl\":\"The address of implementation contract\"}},\"setBeaconProxyControllerImpl(address)\":{\"params\":{\"newImpl\":\"The address of implementation contract\"}},\"setCurrencyControllerImpl(address)\":{\"params\":{\"newImpl\":\"The address of implementation contract\"}},\"setGenesisValueVaultImpl(address)\":{\"params\":{\"newImpl\":\"The address of implementation contract\"}},\"setLendingMarketControllerImpl(address,uint256)\":{\"params\":{\"marketBasePeriod\":\"The base period for market maturity\",\"newImpl\":\"The address of implementation contract\"}},\"setReserveFundImpl(address,address)\":{\"params\":{\"nativeToken\":\"The address of wrapped token of native currency\",\"newImpl\":\"The address of implementation contract\"}},\"setTokenVaultImpl(address,uint256,uint256,uint256,address)\":{\"params\":{\"liquidationProtocolFeeRate\":\"The liquidation fee rate received by protocol\",\"liquidationThresholdRate\":\"The rate used as the auto liquidation threshold\",\"liquidatorFeeRate\":\"The liquidation fee rate received by liquidators\",\"nativeToken\":\"The address of wrapped token of native currency\",\"newImpl\":\"The address of implementation contract\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeProxyAdmins(address,address[])\":{\"notice\":\"Updates admin addresses of proxy contract\"},\"constructor\":{\"notice\":\"Contract constructor function.\"},\"getAddress(bytes32)\":{\"notice\":\"Gets the proxy address fro selected name\"},\"getAddressResolverAddress()\":{\"notice\":\"Gets the proxy address of AddressResolver\"},\"setAddressResolverImpl(address)\":{\"notice\":\"Sets the implementation contract of AddressResolver\"},\"setBeaconProxyControllerImpl(address)\":{\"notice\":\"Sets the implementation contract of CurrencyController\"},\"setCurrencyControllerImpl(address)\":{\"notice\":\"Sets the implementation contract of CurrencyController\"},\"setGenesisValueVaultImpl(address)\":{\"notice\":\"Sets the implementation contract of GenesisValueVault\"},\"setLendingMarketControllerImpl(address,uint256)\":{\"notice\":\"Sets the implementation contract of LendingMarketController\"},\"setReserveFundImpl(address,address)\":{\"notice\":\"Sets the implementation contract of ReserveFund\"},\"setTokenVaultImpl(address,uint256,uint256,uint256,address)\":{\"notice\":\"Sets the implementation contract of TokenVault\"}},\"notice\":\"Implements the management of proxy contracts. All proxy contracts are deployed from this contract. This contract is also used to update the proxy implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/ProxyController.sol\":\"ProxyController\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT =\\n        0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT =\\n        0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(\\n            Address.isContract(newImplementation),\\n            \\\"ERC1967: new implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT =\\n        0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT =\\n        0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x907a14378f67d2c5afa8420d94cda5de3648e592aaabb41438fdf3640038ad1f\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return\\n            functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data\\n    ) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data\\n    ) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xabb801935035554c7c588f7c1f296adfd23afd3e2a2a84705ba1a407f14d1de4\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/utils/Multicall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Multicall.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Address.sol\\\";\\n\\n/**\\n * @dev Provides a function to batch together multiple calls in a single external call.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract Multicall {\\n    /**\\n     * @dev Receives and executes a batch of function calls on this contract.\\n     */\\n    function multicall(bytes[] calldata data) external virtual returns (bytes[] memory results) {\\n        results = new bytes[](data.length);\\n        for (uint256 i = 0; i < data.length; i++) {\\n            results[i] = Address.functionDelegateCall(address(this), data[i]);\\n        }\\n        return results;\\n    }\\n}\\n\",\"keccak256\":\"0x35e30a35e23f856cbcee3558b7efdd83f6017a8f1b419710645143d98e892463\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"},\"contracts/protocol/ProxyController.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\n// dependencies\\nimport {Multicall} from \\\"../dependencies/openzeppelin/utils/Multicall.sol\\\";\\n// interfaces\\nimport {IAddressResolver} from \\\"./interfaces/IAddressResolver.sol\\\";\\nimport {IProxyController} from \\\"./interfaces/IProxyController.sol\\\";\\n// libraries\\nimport {Contracts} from \\\"./libraries/Contracts.sol\\\";\\n// utils\\nimport {Ownable} from \\\"./utils/Ownable.sol\\\";\\nimport {UpgradeabilityProxy} from \\\"./utils/UpgradeabilityProxy.sol\\\";\\n\\n/**\\n * @notice Implements the management of proxy contracts.\\n *\\n * All proxy contracts are deployed from this contract.\\n * This contract is also used to update the proxy implementation.\\n */\\n\\ncontract ProxyController is IProxyController, Ownable, Multicall {\\n    IAddressResolver private resolver;\\n    bytes32 private constant ADDRESS_RESOLVER = \\\"AddressResolver\\\";\\n\\n    /**\\n     * @notice Contract constructor function.\\n     * @param _resolver The address of the Address Resolver contract\\n     *\\n     * @dev Set a proxy contract address of AddressResolver if it already exists.\\n     * If not, set zero address here and call `setAddressResolverImpl` using the implementation\\n     * address of AddressResolver to create a proxy contract.\\n     */\\n    constructor(address _resolver) {\\n        _transferOwnership(msg.sender);\\n        if (_resolver != address(0)) {\\n            UpgradeabilityProxy proxy = UpgradeabilityProxy(payable(_resolver));\\n            if (proxy.implementation() == address(0)) revert InvalidProxyContract();\\n            resolver = IAddressResolver(_resolver);\\n        }\\n    }\\n\\n    /**\\n     * @notice Gets the proxy address of AddressResolver\\n     * @return The contract address of AddressResolver\\n     */\\n    function getAddressResolverAddress() public view returns (address) {\\n        return (address(resolver));\\n    }\\n\\n    /**\\n     * @notice Gets the proxy address fro selected name\\n     * @param name The cache name of the contract\\n     * @return proxyAddress The proxy address for selected name\\n     */\\n    function getAddress(bytes32 name) public view returns (address proxyAddress) {\\n        proxyAddress = resolver.getAddress(name, \\\"Address not found\\\");\\n        UpgradeabilityProxy proxy = UpgradeabilityProxy(payable(proxyAddress));\\n\\n        if (proxy.implementation() == address(0)) revert InvalidProxyContract();\\n    }\\n\\n    /**\\n     * @notice Sets the implementation contract of AddressResolver\\n     * @param newImpl The address of implementation contract\\n     */\\n    function setAddressResolverImpl(address newImpl) external onlyOwner {\\n        bytes memory data = abi.encodeWithSignature(\\\"initialize(address)\\\", msg.sender);\\n        address proxyAddress = _updateImpl(ADDRESS_RESOLVER, newImpl, data);\\n        resolver = IAddressResolver(proxyAddress);\\n    }\\n\\n    /**\\n     * @notice Sets the implementation contract of CurrencyController\\n     * @param newImpl The address of implementation contract\\n     */\\n    function setBeaconProxyControllerImpl(address newImpl) external onlyOwner {\\n        bytes memory data = abi.encodeWithSignature(\\n            \\\"initialize(address,address)\\\",\\n            msg.sender,\\n            resolver\\n        );\\n        _updateImpl(Contracts.BEACON_PROXY_CONTROLLER, newImpl, data);\\n    }\\n\\n    /**\\n     * @notice  Sets the implementation contract of TokenVault\\n     * @param newImpl The address of implementation contract\\n     * @param liquidationThresholdRate  The rate used as the auto liquidation threshold\\n     * @param liquidationProtocolFeeRate The liquidation fee rate received by protocol\\n     * @param liquidatorFeeRate The liquidation fee rate received by liquidators\\n     * @param nativeToken The address of wrapped token of native currency\\n     */\\n    function setTokenVaultImpl(\\n        address newImpl,\\n        uint256 liquidationThresholdRate,\\n        uint256 liquidationProtocolFeeRate,\\n        uint256 liquidatorFeeRate,\\n        address nativeToken\\n    ) external onlyOwner {\\n        bytes memory data = abi.encodeWithSignature(\\n            \\\"initialize(address,address,uint256,uint256,uint256,address)\\\",\\n            msg.sender,\\n            resolver,\\n            liquidationThresholdRate,\\n            liquidationProtocolFeeRate,\\n            liquidatorFeeRate,\\n            nativeToken\\n        );\\n        _updateImpl(Contracts.TOKEN_VAULT, newImpl, data);\\n    }\\n\\n    /**\\n     * @notice Sets the implementation contract of CurrencyController\\n     * @param newImpl The address of implementation contract\\n     */\\n    function setCurrencyControllerImpl(address newImpl) external onlyOwner {\\n        bytes memory data = abi.encodeWithSignature(\\\"initialize(address)\\\", msg.sender);\\n        _updateImpl(Contracts.CURRENCY_CONTROLLER, newImpl, data);\\n    }\\n\\n    /**\\n     * @notice Sets the implementation contract of GenesisValueVault\\n     * @param newImpl The address of implementation contract\\n     */\\n    function setGenesisValueVaultImpl(address newImpl) external onlyOwner {\\n        bytes memory data = abi.encodeWithSignature(\\\"initialize(address)\\\", resolver);\\n        _updateImpl(Contracts.GENESIS_VALUE_VAULT, newImpl, data);\\n    }\\n\\n    /**\\n     * @notice Sets the implementation contract of LendingMarketController\\n     * @param newImpl The address of implementation contract\\n     * @param marketBasePeriod The base period for market maturity\\n     */\\n    function setLendingMarketControllerImpl(\\n        address newImpl,\\n        uint256 marketBasePeriod\\n    ) external onlyOwner {\\n        bytes memory data = abi.encodeWithSignature(\\n            \\\"initialize(address,address,uint256)\\\",\\n            msg.sender,\\n            resolver,\\n            marketBasePeriod\\n        );\\n        _updateImpl(Contracts.LENDING_MARKET_CONTROLLER, newImpl, data);\\n    }\\n\\n    /**\\n     * @notice Sets the implementation contract of ReserveFund\\n     * @param newImpl The address of implementation contract\\n     * @param nativeToken The address of wrapped token of native currency\\n     */\\n    function setReserveFundImpl(address newImpl, address nativeToken) external onlyOwner {\\n        bytes memory data = abi.encodeWithSignature(\\n            \\\"initialize(address,address,address)\\\",\\n            msg.sender,\\n            resolver,\\n            nativeToken\\n        );\\n        _updateImpl(Contracts.RESERVE_FUND, newImpl, data);\\n    }\\n\\n    /**\\n     * @notice Updates admin addresses of proxy contract\\n     * @param newAdmin The address of new admin\\n     * @param destinations The destination contract addresses\\n     */\\n    function changeProxyAdmins(\\n        address newAdmin,\\n        address[] calldata destinations\\n    ) external onlyOwner {\\n        for (uint256 i; i < destinations.length; i++) {\\n            UpgradeabilityProxy proxy = UpgradeabilityProxy(payable(destinations[i]));\\n            proxy.changeAdmin(newAdmin);\\n        }\\n    }\\n\\n    /**\\n     * @notice Updates the implementation contract of specified contract\\n     * The first time the contract address is set, `UpgradeabilityProxy` is created.\\n     * From the second time, the contract address set in the created `UpgradeabilityProxy`\\n     * will be updated.\\n     *\\n     * @param name The cache name of the contract\\n     * @param newAddress The address of implementation contract\\n     * @param data the data in a delegate call to a specified function\\n     */\\n    function _updateImpl(\\n        bytes32 name,\\n        address newAddress,\\n        bytes memory data\\n    ) internal returns (address proxyAddress) {\\n        proxyAddress = _getAddress(name);\\n        UpgradeabilityProxy proxy;\\n\\n        if (proxyAddress == address(0)) {\\n            proxy = new UpgradeabilityProxy(payable(newAddress), data);\\n            proxyAddress = address(proxy);\\n\\n            emit ProxyUpdated(name, proxyAddress, newAddress, address(0));\\n        } else {\\n            proxy = UpgradeabilityProxy(payable(proxyAddress));\\n            address oldAddress = proxy.implementation();\\n            proxy.upgradeTo(newAddress);\\n            emit ProxyUpdated(name, proxyAddress, newAddress, oldAddress);\\n        }\\n    }\\n\\n    function _getAddress(bytes32 name) internal view returns (address) {\\n        if (name == ADDRESS_RESOLVER) {\\n            return address(resolver);\\n        } else {\\n            return resolver.getAddress(name);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8148dd6829958a0b1bb5551faa0f3e1b20fc59b6785e3feba00a291271ec92a8\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/interfaces/IAddressResolver.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\ninterface IAddressResolver {\\n    error UnmatchedInputs();\\n\\n    event AddressImported(bytes32 name, address destination);\\n\\n    function getAddress(bytes32 name, string calldata reason) external view returns (address);\\n\\n    function getAddress(bytes32 name) external view returns (address);\\n\\n    function getAddresses() external view returns (address[] memory);\\n\\n    function getNames() external view returns (bytes32[] memory);\\n}\\n\",\"keccak256\":\"0x902589cadb08c09a44c5cdbe7ed8ba57a93f7e2700681177ef57c47c40e2e161\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/interfaces/IProxyController.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\ninterface IProxyController {\\n    error InvalidProxyContract();\\n\\n    event ProxyUpdated(\\n        bytes32 indexed id,\\n        address indexed proxyAddress,\\n        address indexed newImplementationAddress,\\n        address oldImplementationAddress\\n    );\\n}\\n\",\"keccak256\":\"0x7c7001be095cb0cec8964fc0332c68b6bb00192b7f8d867a0d77d6e66d637cbe\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/libraries/Contracts.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nlibrary Contracts {\\n    bytes32 internal constant BEACON_PROXY_CONTROLLER = \\\"BeaconProxyController\\\";\\n    bytes32 internal constant CURRENCY_CONTROLLER = \\\"CurrencyController\\\";\\n    bytes32 internal constant GENESIS_VALUE_VAULT = \\\"GenesisValueVault\\\";\\n    bytes32 internal constant LENDING_MARKET_CONTROLLER = \\\"LendingMarketController\\\";\\n    bytes32 internal constant RESERVE_FUND = \\\"ReserveFund\\\";\\n    bytes32 internal constant TOKEN_VAULT = \\\"TokenVault\\\";\\n}\\n\\nlibrary BeaconContracts {\\n    bytes32 internal constant FUTURE_VALUE_VAULT = \\\"FutureValueVault\\\";\\n    bytes32 internal constant LENDING_MARKET = \\\"LendingMarket\\\";\\n}\\n\",\"keccak256\":\"0x68a230a9c45ce36ef6526ba6cd52815dc12ca97622c43ed43b132c53b01a08b1\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/storages/utils/OwnableStorage.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nlibrary OwnableStorage {\\n    bytes32 internal constant STORAGE_SLOT = bytes32(uint256(keccak256(\\\"sf.storage.ownable\\\")) - 1);\\n\\n    struct Storage {\\n        address owner;\\n    }\\n\\n    function slot() internal pure returns (Storage storage r) {\\n        bytes32 _slot = STORAGE_SLOT;\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := _slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x98130c4c3d0014744b194e179bd65b8b7e73cac9cd33a470d194072e1a06b94e\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/utils/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"../../dependencies/openzeppelin/utils/Context.sol\\\";\\nimport \\\"../storages/utils/OwnableStorage.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return OwnableStorage.slot().owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = OwnableStorage.slot().owner;\\n        OwnableStorage.slot().owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xd735ea20ce4e86d574ab372eb79a46510c7be3b12b62f3948bb68dd2bea710ff\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/utils/UpgradeabilityProxy.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nimport \\\"../../dependencies/openzeppelin/proxy/ERC1967/ERC1967Proxy.sol\\\";\\n\\ncontract UpgradeabilityProxy is ERC1967Proxy {\\n    constructor(address _logic, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\\n        _changeAdmin(msg.sender);\\n    }\\n\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeTo(newImplementation);\\n    }\\n\\n    function changeAdmin(address newAdmin) external ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    function admin() external view returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    function implementation() external view returns (address) {\\n        return ERC1967Proxy._implementation();\\n    }\\n}\\n\",\"keccak256\":\"0x5406b0204f99a88d99b63bdf39826aeadfc15f9d6e805b4ee9607fe983b0210a\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001fa438038062001fa48339810160408190526200003491620001b7565b6200003f3362000110565b6001600160a01b038116156200010957600081905060006001600160a01b0316816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200009e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c49190620001b7565b6001600160a01b031603620000ec576040516304123fed60e51b815260040160405180910390fd5b50600080546001600160a01b0319166001600160a01b0383161790555b506200020b565b60006200011c62000181565b546001600160a01b03169050816200013362000181565b80546001600160a01b0319166001600160a01b03928316179055604051838216918316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080620001b160017f9acda75aebd150dd434541a4747a6dc606f4f1a59662477e67daf1fc0bf9e0aa620001e9565b92915050565b600060208284031215620001ca57600080fd5b81516001600160a01b0381168114620001e257600080fd5b9392505050565b81810381811115620001b157634e487b7160e01b600052601160045260246000fd5b611d89806200021b6000396000f3fe60806040523480156200001157600080fd5b5060043610620000fc5760003560e01c8063a3a51b871162000097578063b995d10e116200006e578063b995d10e14620001f6578063d49c857a146200020d578063d56de5331462000224578063f2fde38b146200023b57600080fd5b8063a3a51b8714620001a2578063a6fd7eb414620001b9578063ac9650d814620001d057600080fd5b8063227222ee11620000d8578063227222ee1462000165578063715018a6146200017c5780638da5cb5b146200018657806394f67443146200019057600080fd5b806283d54614620001015780631ef6e930146200011a57806321f8a7211462000131575b600080fd5b620001186200011236600462000fb4565b62000252565b005b620001186200012b36600462000fb4565b620002f1565b620001486200014236600462000fd4565b620003a6565b6040516001600160a01b0390911681526020015b60405180910390f35b62000118620001763660046200103d565b620004e6565b62000118620005d2565b6200014862000614565b6000546001600160a01b031662000148565b62000118620001b336600462001098565b6200062f565b62000118620001ca366004620010f3565b620006ef565b620001e7620001e136600462001122565b620007a3565b6040516200015c9190620011bc565b620001186200020736600462000fb4565b620008ac565b620001186200021e36600462001222565b62000947565b620001186200023536600462000fb4565b620009ea565b620001186200024c36600462000fb4565b62000a8f565b336200025d62000614565b6001600160a01b0316146200028f5760405162461bcd60e51b8152600401620002869062001260565b60405180910390fd5b60405133602482015260009060440160408051601f198184030181529190526020810180516001600160e01b031663189acdbd60e31b1790529050620002ec7121bab93932b731bca1b7b73a3937b63632b960711b838362000b38565b505050565b33620002fc62000614565b6001600160a01b031614620003255760405162461bcd60e51b8152600401620002869062001260565b60405133602482015260009060440160408051601f198184030181529190526020810180516001600160e01b031663189acdbd60e31b17905290506000620003816e20b2323932b9b9a932b9b7b63b32b960891b848462000b38565b600080546001600160a01b0319166001600160a01b0392909216919091179055505050565b6000805460408051636795dbcd60e01b815260048101859052602481019190915260116044820152701059191c995cdcc81b9bdd08199bdd5b99607a1b60648201526001600160a01b0390911690636795dbcd90608401602060405180830381865afa1580156200041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000441919062001295565b9050600081905060006001600160a01b0316816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000492573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004b8919062001295565b6001600160a01b031603620004e0576040516304123fed60e51b815260040160405180910390fd5b50919050565b33620004f162000614565b6001600160a01b0316146200051a5760405162461bcd60e51b8152600401620002869062001260565b60005b81811015620005cc5760008383838181106200053d576200053d620012b5565b905060200201602081019062000554919062000fb4565b6040516308f2839760e41b81526001600160a01b03878116600483015291925090821690638f28397090602401600060405180830381600087803b1580156200059c57600080fd5b505af1158015620005b1573d6000803e3d6000fd5b50505050508080620005c390620012e1565b9150506200051d565b50505050565b33620005dd62000614565b6001600160a01b031614620006065760405162461bcd60e51b8152600401620002869062001260565b62000612600062000d00565b565b60006200062062000d71565b546001600160a01b0316919050565b336200063a62000614565b6001600160a01b031614620006635760405162461bcd60e51b8152600401620002869062001260565b600080546040513360248201526001600160a01b039182166044820152606481018790526084810186905260a4810185905290831660c482015260e40160408051601f198184030181529190526020810180516001600160e01b031663b1a5d12d60e01b1790529050620006e669151bdad95b95985d5b1d60b21b878362000b38565b50505050505050565b33620006fa62000614565b6001600160a01b031614620007235760405162461bcd60e51b8152600401620002869062001260565b600080546040513360248201526001600160a01b0390911660448201526064810183905260840160408051601f198184030181529190526020810180516001600160e01b03166305e52ecf60e21b1790529050620005cc7f4c656e64696e674d61726b6574436f6e74726f6c6c6572000000000000000000848362000b38565b60608167ffffffffffffffff811115620007c157620007c1620012fd565b604051908082528060200260200182016040528015620007f657816020015b6060815260200190600190039081620007e05790505b50905060005b82811015620008a4576200086e308585848181106200081f576200081f620012b5565b905060200281019062000833919062001313565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525062000da192505050565b828281518110620008835762000883620012b5565b602002602001018190525080806200089b90620012e1565b915050620007fc565b505b92915050565b33620008b762000614565b6001600160a01b031614620008e05760405162461bcd60e51b8152600401620002869062001260565b600080546040516001600160a01b03909116602482015260440160408051601f198184030181529190526020810180516001600160e01b031663189acdbd60e31b1790529050620002ec7011d95b995cda5cd5985b1d5955985d5b1d607a1b838362000b38565b336200095262000614565b6001600160a01b0316146200097b5760405162461bcd60e51b8152600401620002869062001260565b600080546040513360248201526001600160a01b039182166044820152908316606482015260840160408051601f198184030181529190526020810180516001600160e01b031663c0c53b8b60e01b1790529050620005cc6a14995cd95c9d99519d5b9960aa1b848362000b38565b33620009f562000614565b6001600160a01b03161462000a1e5760405162461bcd60e51b8152600401620002869062001260565b600080546040513360248201526001600160a01b03909116604482015260640160408051601f198184030181529190526020810180516001600160e01b031663485cc95560e01b1790529050620002ec742132b0b1b7b7283937bc3ca1b7b73a3937b63632b960591b838362000b38565b3362000a9a62000614565b6001600160a01b03161462000ac35760405162461bcd60e51b8152600401620002869062001260565b6001600160a01b03811662000b2a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000286565b62000b358162000d00565b50565b600062000b458462000dd0565b905060006001600160a01b03821662000be557838360405162000b689062000f90565b62000b759291906200135d565b604051809103906000f08015801562000b92573d6000803e3d6000fd5b50604051600081529092508291506001600160a01b03808616919083169087907f5e29c26cc3fab416c412dd806a8fd96b2e1c640466a1501765da26bc1e8f24ea9060200160405180910390a462000cf8565b8190506000816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000c29573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c4f919062001295565b604051631b2ce7f360e11b81526001600160a01b03878116600483015291925090831690633659cfe690602401600060405180830381600087803b15801562000c9757600080fd5b505af115801562000cac573d6000803e3d6000fd5b50506040516001600160a01b03848116825280891693508616915088907f5e29c26cc3fab416c412dd806a8fd96b2e1c640466a1501765da26bc1e8f24ea9060200160405180910390a4505b509392505050565b600062000d0c62000d71565b546001600160a01b031690508162000d2362000d71565b80546001600160a01b0319166001600160a01b03928316179055604051838216918316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080620008a660017f9acda75aebd150dd434541a4747a6dc606f4f1a59662477e67daf1fc0bf9e0aa6200138b565b606062000dc9838360405180606001604052806027815260200162001d2d6027913962000e6d565b9392505050565b60006e20b2323932b9b9a932b9b7b63b32b960891b820362000dfd5750506000546001600160a01b031690565b6000546040516321f8a72160e01b8152600481018490526001600160a01b03909116906321f8a72190602401602060405180830381865afa15801562000e47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a6919062001295565b60606001600160a01b0384163b62000ed75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840162000286565b600080856001600160a01b03168560405162000ef49190620013a1565b600060405180830381855af49150503d806000811462000f31576040519150601f19603f3d011682016040523d82523d6000602084013e62000f36565b606091505b509150915062000f4882828662000f52565b9695505050505050565b6060831562000f6357508162000dc9565b82511562000f745782518084602001fd5b8160405162461bcd60e51b8152600401620002869190620013bf565b61095880620013d583390190565b6001600160a01b038116811462000b3557600080fd5b60006020828403121562000fc757600080fd5b813562000dc98162000f9e565b60006020828403121562000fe757600080fd5b5035919050565b60008083601f8401126200100157600080fd5b50813567ffffffffffffffff8111156200101a57600080fd5b6020830191508360208260051b85010111156200103657600080fd5b9250929050565b6000806000604084860312156200105357600080fd5b8335620010608162000f9e565b9250602084013567ffffffffffffffff8111156200107d57600080fd5b6200108b8682870162000fee565b9497909650939450505050565b600080600080600060a08688031215620010b157600080fd5b8535620010be8162000f9e565b94506020860135935060408601359250606086013591506080860135620010e58162000f9e565b809150509295509295909350565b600080604083850312156200110757600080fd5b8235620011148162000f9e565b946020939093013593505050565b600080602083850312156200113657600080fd5b823567ffffffffffffffff8111156200114e57600080fd5b6200115c8582860162000fee565b90969095509350505050565b60005b83811015620011855781810151838201526020016200116b565b50506000910152565b60008151808452620011a881602086016020860162001168565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200121557603f19888603018452620012028583516200118e565b94509285019290850190600101620011e3565b5092979650505050505050565b600080604083850312156200123657600080fd5b8235620012438162000f9e565b91506020830135620012558162000f9e565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215620012a857600080fd5b815162000dc98162000f9e565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201620012f657620012f6620012cb565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6000808335601e198436030181126200132b57600080fd5b83018035915067ffffffffffffffff8211156200134757600080fd5b6020019150368190038213156200103657600080fd5b6001600160a01b038316815260406020820181905260009062001383908301846200118e565b949350505050565b81810381811115620008a657620008a6620012cb565b60008251620013b581846020870162001168565b9190910192915050565b60208152600062000dc960208301846200118e56fe6080604052604051610958380380610958833981016040819052610022916103ca565b818161003082826000610043565b5061003c90503361006f565b50506104e7565b61004c836100dd565b6000825111806100595750805b1561006a57610068838361011d565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6100af600080516020610911833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a16100da81610149565b50565b6100e6816101e5565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610142838360405180606001604052806027815260200161093160279139610279565b9392505050565b6001600160a01b0381166101b35760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b806000805160206109118339815191525b80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b0381163b6102525760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101aa565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc6101c4565b60606001600160a01b0384163b6102e15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101aa565b600080856001600160a01b0316856040516102fc9190610498565b600060405180830381855af49150503d8060008114610337576040519150601f19603f3d011682016040523d82523d6000602084013e61033c565b606091505b50909250905061034d828286610357565b9695505050505050565b60608315610366575081610142565b8251156103765782518084602001fd5b8160405162461bcd60e51b81526004016101aa91906104b4565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103c15781810151838201526020016103a9565b50506000910152565b600080604083850312156103dd57600080fd5b82516001600160a01b03811681146103f457600080fd5b60208401519092506001600160401b038082111561041157600080fd5b818501915085601f83011261042557600080fd5b81518181111561043757610437610390565b604051601f8201601f19908116603f0116810190838211818310171561045f5761045f610390565b8160405282815288602084870101111561047857600080fd5b6104898360208301602088016103a6565b80955050505050509250929050565b600082516104aa8184602087016103a6565b9190910192915050565b60208152600082518060208401526104d38160408501602087016103a6565b601f01601f19169190910160400192915050565b61041b806104f66000396000f3fe6080604052600436106100435760003560e01c80633659cfe61461005a5780635c60da1b1461007a5780638f283970146100ab578063f851a440146100cb57610052565b36610052576100506100e0565b005b6100506100e0565b34801561006657600080fd5b506100506100753660046103b5565b6100f2565b34801561008657600080fd5b5061008f61011d565b6040516001600160a01b03909116815260200160405180910390f35b3480156100b757600080fd5b506100506100c63660046103b5565b61012c565b3480156100d757600080fd5b5061008f61014c565b6100f06100eb610156565b610160565b565b6100fa610184565b6001600160a01b0316330361011557610112816101b7565b50565b6101126100e0565b6000610127610156565b905090565b610134610184565b6001600160a01b0316330361011557610112816101f7565b6000610127610184565b600061012761024b565b3660008037600080366000845af43d6000803e80801561017f573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b6101c081610273565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f610220610184565b604080516001600160a01b03928316815291841660208301520160405180910390a161011281610329565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc6101a8565b6001600160a01b0381163b6102e55760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b03811661038e5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084016102dc565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103610308565b6000602082840312156103c757600080fd5b81356001600160a01b03811681146103de57600080fd5b939250505056fea26469706673582212205abb758c01b8bc70964e7f71b321fd1c73c25d17e258abdc130241fbc18bc88b64736f6c63430008130033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207816f64fca01e340756fbfc8a09a718bde236dcf62fc3ee1903bf4f5e0921f6464736f6c63430008130033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000fc5760003560e01c8063a3a51b871162000097578063b995d10e116200006e578063b995d10e14620001f6578063d49c857a146200020d578063d56de5331462000224578063f2fde38b146200023b57600080fd5b8063a3a51b8714620001a2578063a6fd7eb414620001b9578063ac9650d814620001d057600080fd5b8063227222ee11620000d8578063227222ee1462000165578063715018a6146200017c5780638da5cb5b146200018657806394f67443146200019057600080fd5b806283d54614620001015780631ef6e930146200011a57806321f8a7211462000131575b600080fd5b620001186200011236600462000fb4565b62000252565b005b620001186200012b36600462000fb4565b620002f1565b620001486200014236600462000fd4565b620003a6565b6040516001600160a01b0390911681526020015b60405180910390f35b62000118620001763660046200103d565b620004e6565b62000118620005d2565b6200014862000614565b6000546001600160a01b031662000148565b62000118620001b336600462001098565b6200062f565b62000118620001ca366004620010f3565b620006ef565b620001e7620001e136600462001122565b620007a3565b6040516200015c9190620011bc565b620001186200020736600462000fb4565b620008ac565b620001186200021e36600462001222565b62000947565b620001186200023536600462000fb4565b620009ea565b620001186200024c36600462000fb4565b62000a8f565b336200025d62000614565b6001600160a01b0316146200028f5760405162461bcd60e51b8152600401620002869062001260565b60405180910390fd5b60405133602482015260009060440160408051601f198184030181529190526020810180516001600160e01b031663189acdbd60e31b1790529050620002ec7121bab93932b731bca1b7b73a3937b63632b960711b838362000b38565b505050565b33620002fc62000614565b6001600160a01b031614620003255760405162461bcd60e51b8152600401620002869062001260565b60405133602482015260009060440160408051601f198184030181529190526020810180516001600160e01b031663189acdbd60e31b17905290506000620003816e20b2323932b9b9a932b9b7b63b32b960891b848462000b38565b600080546001600160a01b0319166001600160a01b0392909216919091179055505050565b6000805460408051636795dbcd60e01b815260048101859052602481019190915260116044820152701059191c995cdcc81b9bdd08199bdd5b99607a1b60648201526001600160a01b0390911690636795dbcd90608401602060405180830381865afa1580156200041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000441919062001295565b9050600081905060006001600160a01b0316816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000492573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004b8919062001295565b6001600160a01b031603620004e0576040516304123fed60e51b815260040160405180910390fd5b50919050565b33620004f162000614565b6001600160a01b0316146200051a5760405162461bcd60e51b8152600401620002869062001260565b60005b81811015620005cc5760008383838181106200053d576200053d620012b5565b905060200201602081019062000554919062000fb4565b6040516308f2839760e41b81526001600160a01b03878116600483015291925090821690638f28397090602401600060405180830381600087803b1580156200059c57600080fd5b505af1158015620005b1573d6000803e3d6000fd5b50505050508080620005c390620012e1565b9150506200051d565b50505050565b33620005dd62000614565b6001600160a01b031614620006065760405162461bcd60e51b8152600401620002869062001260565b62000612600062000d00565b565b60006200062062000d71565b546001600160a01b0316919050565b336200063a62000614565b6001600160a01b031614620006635760405162461bcd60e51b8152600401620002869062001260565b600080546040513360248201526001600160a01b039182166044820152606481018790526084810186905260a4810185905290831660c482015260e40160408051601f198184030181529190526020810180516001600160e01b031663b1a5d12d60e01b1790529050620006e669151bdad95b95985d5b1d60b21b878362000b38565b50505050505050565b33620006fa62000614565b6001600160a01b031614620007235760405162461bcd60e51b8152600401620002869062001260565b600080546040513360248201526001600160a01b0390911660448201526064810183905260840160408051601f198184030181529190526020810180516001600160e01b03166305e52ecf60e21b1790529050620005cc7f4c656e64696e674d61726b6574436f6e74726f6c6c6572000000000000000000848362000b38565b60608167ffffffffffffffff811115620007c157620007c1620012fd565b604051908082528060200260200182016040528015620007f657816020015b6060815260200190600190039081620007e05790505b50905060005b82811015620008a4576200086e308585848181106200081f576200081f620012b5565b905060200281019062000833919062001313565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525062000da192505050565b828281518110620008835762000883620012b5565b602002602001018190525080806200089b90620012e1565b915050620007fc565b505b92915050565b33620008b762000614565b6001600160a01b031614620008e05760405162461bcd60e51b8152600401620002869062001260565b600080546040516001600160a01b03909116602482015260440160408051601f198184030181529190526020810180516001600160e01b031663189acdbd60e31b1790529050620002ec7011d95b995cda5cd5985b1d5955985d5b1d607a1b838362000b38565b336200095262000614565b6001600160a01b0316146200097b5760405162461bcd60e51b8152600401620002869062001260565b600080546040513360248201526001600160a01b039182166044820152908316606482015260840160408051601f198184030181529190526020810180516001600160e01b031663c0c53b8b60e01b1790529050620005cc6a14995cd95c9d99519d5b9960aa1b848362000b38565b33620009f562000614565b6001600160a01b03161462000a1e5760405162461bcd60e51b8152600401620002869062001260565b600080546040513360248201526001600160a01b03909116604482015260640160408051601f198184030181529190526020810180516001600160e01b031663485cc95560e01b1790529050620002ec742132b0b1b7b7283937bc3ca1b7b73a3937b63632b960591b838362000b38565b3362000a9a62000614565b6001600160a01b03161462000ac35760405162461bcd60e51b8152600401620002869062001260565b6001600160a01b03811662000b2a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000286565b62000b358162000d00565b50565b600062000b458462000dd0565b905060006001600160a01b03821662000be557838360405162000b689062000f90565b62000b759291906200135d565b604051809103906000f08015801562000b92573d6000803e3d6000fd5b50604051600081529092508291506001600160a01b03808616919083169087907f5e29c26cc3fab416c412dd806a8fd96b2e1c640466a1501765da26bc1e8f24ea9060200160405180910390a462000cf8565b8190506000816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000c29573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c4f919062001295565b604051631b2ce7f360e11b81526001600160a01b03878116600483015291925090831690633659cfe690602401600060405180830381600087803b15801562000c9757600080fd5b505af115801562000cac573d6000803e3d6000fd5b50506040516001600160a01b03848116825280891693508616915088907f5e29c26cc3fab416c412dd806a8fd96b2e1c640466a1501765da26bc1e8f24ea9060200160405180910390a4505b509392505050565b600062000d0c62000d71565b546001600160a01b031690508162000d2362000d71565b80546001600160a01b0319166001600160a01b03928316179055604051838216918316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080620008a660017f9acda75aebd150dd434541a4747a6dc606f4f1a59662477e67daf1fc0bf9e0aa6200138b565b606062000dc9838360405180606001604052806027815260200162001d2d6027913962000e6d565b9392505050565b60006e20b2323932b9b9a932b9b7b63b32b960891b820362000dfd5750506000546001600160a01b031690565b6000546040516321f8a72160e01b8152600481018490526001600160a01b03909116906321f8a72190602401602060405180830381865afa15801562000e47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a6919062001295565b60606001600160a01b0384163b62000ed75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840162000286565b600080856001600160a01b03168560405162000ef49190620013a1565b600060405180830381855af49150503d806000811462000f31576040519150601f19603f3d011682016040523d82523d6000602084013e62000f36565b606091505b509150915062000f4882828662000f52565b9695505050505050565b6060831562000f6357508162000dc9565b82511562000f745782518084602001fd5b8160405162461bcd60e51b8152600401620002869190620013bf565b61095880620013d583390190565b6001600160a01b038116811462000b3557600080fd5b60006020828403121562000fc757600080fd5b813562000dc98162000f9e565b60006020828403121562000fe757600080fd5b5035919050565b60008083601f8401126200100157600080fd5b50813567ffffffffffffffff8111156200101a57600080fd5b6020830191508360208260051b85010111156200103657600080fd5b9250929050565b6000806000604084860312156200105357600080fd5b8335620010608162000f9e565b9250602084013567ffffffffffffffff8111156200107d57600080fd5b6200108b8682870162000fee565b9497909650939450505050565b600080600080600060a08688031215620010b157600080fd5b8535620010be8162000f9e565b94506020860135935060408601359250606086013591506080860135620010e58162000f9e565b809150509295509295909350565b600080604083850312156200110757600080fd5b8235620011148162000f9e565b946020939093013593505050565b600080602083850312156200113657600080fd5b823567ffffffffffffffff8111156200114e57600080fd5b6200115c8582860162000fee565b90969095509350505050565b60005b83811015620011855781810151838201526020016200116b565b50506000910152565b60008151808452620011a881602086016020860162001168565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200121557603f19888603018452620012028583516200118e565b94509285019290850190600101620011e3565b5092979650505050505050565b600080604083850312156200123657600080fd5b8235620012438162000f9e565b91506020830135620012558162000f9e565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215620012a857600080fd5b815162000dc98162000f9e565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201620012f657620012f6620012cb565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6000808335601e198436030181126200132b57600080fd5b83018035915067ffffffffffffffff8211156200134757600080fd5b6020019150368190038213156200103657600080fd5b6001600160a01b038316815260406020820181905260009062001383908301846200118e565b949350505050565b81810381811115620008a657620008a6620012cb565b60008251620013b581846020870162001168565b9190910192915050565b60208152600062000dc960208301846200118e56fe6080604052604051610958380380610958833981016040819052610022916103ca565b818161003082826000610043565b5061003c90503361006f565b50506104e7565b61004c836100dd565b6000825111806100595750805b1561006a57610068838361011d565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6100af600080516020610911833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a16100da81610149565b50565b6100e6816101e5565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610142838360405180606001604052806027815260200161093160279139610279565b9392505050565b6001600160a01b0381166101b35760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b806000805160206109118339815191525b80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b0381163b6102525760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101aa565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc6101c4565b60606001600160a01b0384163b6102e15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101aa565b600080856001600160a01b0316856040516102fc9190610498565b600060405180830381855af49150503d8060008114610337576040519150601f19603f3d011682016040523d82523d6000602084013e61033c565b606091505b50909250905061034d828286610357565b9695505050505050565b60608315610366575081610142565b8251156103765782518084602001fd5b8160405162461bcd60e51b81526004016101aa91906104b4565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103c15781810151838201526020016103a9565b50506000910152565b600080604083850312156103dd57600080fd5b82516001600160a01b03811681146103f457600080fd5b60208401519092506001600160401b038082111561041157600080fd5b818501915085601f83011261042557600080fd5b81518181111561043757610437610390565b604051601f8201601f19908116603f0116810190838211818310171561045f5761045f610390565b8160405282815288602084870101111561047857600080fd5b6104898360208301602088016103a6565b80955050505050509250929050565b600082516104aa8184602087016103a6565b9190910192915050565b60208152600082518060208401526104d38160408501602087016103a6565b601f01601f19169190910160400192915050565b61041b806104f66000396000f3fe6080604052600436106100435760003560e01c80633659cfe61461005a5780635c60da1b1461007a5780638f283970146100ab578063f851a440146100cb57610052565b36610052576100506100e0565b005b6100506100e0565b34801561006657600080fd5b506100506100753660046103b5565b6100f2565b34801561008657600080fd5b5061008f61011d565b6040516001600160a01b03909116815260200160405180910390f35b3480156100b757600080fd5b506100506100c63660046103b5565b61012c565b3480156100d757600080fd5b5061008f61014c565b6100f06100eb610156565b610160565b565b6100fa610184565b6001600160a01b0316330361011557610112816101b7565b50565b6101126100e0565b6000610127610156565b905090565b610134610184565b6001600160a01b0316330361011557610112816101f7565b6000610127610184565b600061012761024b565b3660008037600080366000845af43d6000803e80801561017f573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b6101c081610273565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f610220610184565b604080516001600160a01b03928316815291841660208301520160405180910390a161011281610329565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc6101a8565b6001600160a01b0381163b6102e55760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b03811661038e5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084016102dc565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103610308565b6000602082840312156103c757600080fd5b81356001600160a01b03811681146103de57600080fd5b939250505056fea26469706673582212205abb758c01b8bc70964e7f71b321fd1c73c25d17e258abdc130241fbc18bc88b64736f6c63430008130033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207816f64fca01e340756fbfc8a09a718bde236dcf62fc3ee1903bf4f5e0921f6464736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "changeProxyAdmins(address,address[])": {
        "params": {
          "destinations": "The destination contract addresses",
          "newAdmin": "The address of new admin"
        }
      },
      "constructor": {
        "details": "Set a proxy contract address of AddressResolver if it already exists. If not, set zero address here and call `setAddressResolverImpl` using the implementation address of AddressResolver to create a proxy contract.",
        "params": {
          "_resolver": "The address of the Address Resolver contract"
        }
      },
      "getAddress(bytes32)": {
        "params": {
          "name": "The cache name of the contract"
        },
        "returns": {
          "proxyAddress": "The proxy address for selected name"
        }
      },
      "getAddressResolverAddress()": {
        "returns": {
          "_0": "The contract address of AddressResolver"
        }
      },
      "multicall(bytes[])": {
        "details": "Receives and executes a batch of function calls on this contract."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setAddressResolverImpl(address)": {
        "params": {
          "newImpl": "The address of implementation contract"
        }
      },
      "setBeaconProxyControllerImpl(address)": {
        "params": {
          "newImpl": "The address of implementation contract"
        }
      },
      "setCurrencyControllerImpl(address)": {
        "params": {
          "newImpl": "The address of implementation contract"
        }
      },
      "setGenesisValueVaultImpl(address)": {
        "params": {
          "newImpl": "The address of implementation contract"
        }
      },
      "setLendingMarketControllerImpl(address,uint256)": {
        "params": {
          "marketBasePeriod": "The base period for market maturity",
          "newImpl": "The address of implementation contract"
        }
      },
      "setReserveFundImpl(address,address)": {
        "params": {
          "nativeToken": "The address of wrapped token of native currency",
          "newImpl": "The address of implementation contract"
        }
      },
      "setTokenVaultImpl(address,uint256,uint256,uint256,address)": {
        "params": {
          "liquidationProtocolFeeRate": "The liquidation fee rate received by protocol",
          "liquidationThresholdRate": "The rate used as the auto liquidation threshold",
          "liquidatorFeeRate": "The liquidation fee rate received by liquidators",
          "nativeToken": "The address of wrapped token of native currency",
          "newImpl": "The address of implementation contract"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "changeProxyAdmins(address,address[])": {
        "notice": "Updates admin addresses of proxy contract"
      },
      "constructor": {
        "notice": "Contract constructor function."
      },
      "getAddress(bytes32)": {
        "notice": "Gets the proxy address fro selected name"
      },
      "getAddressResolverAddress()": {
        "notice": "Gets the proxy address of AddressResolver"
      },
      "setAddressResolverImpl(address)": {
        "notice": "Sets the implementation contract of AddressResolver"
      },
      "setBeaconProxyControllerImpl(address)": {
        "notice": "Sets the implementation contract of CurrencyController"
      },
      "setCurrencyControllerImpl(address)": {
        "notice": "Sets the implementation contract of CurrencyController"
      },
      "setGenesisValueVaultImpl(address)": {
        "notice": "Sets the implementation contract of GenesisValueVault"
      },
      "setLendingMarketControllerImpl(address,uint256)": {
        "notice": "Sets the implementation contract of LendingMarketController"
      },
      "setReserveFundImpl(address,address)": {
        "notice": "Sets the implementation contract of ReserveFund"
      },
      "setTokenVaultImpl(address,uint256,uint256,uint256,address)": {
        "notice": "Sets the implementation contract of TokenVault"
      }
    },
    "notice": "Implements the management of proxy contracts. All proxy contracts are deployed from this contract. This contract is also used to update the proxy implementation.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 18668,
        "contract": "contracts/protocol/ProxyController.sol:ProxyController",
        "label": "resolver",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IAddressResolver)20353"
      }
    ],
    "types": {
      "t_contract(IAddressResolver)20353": {
        "encoding": "inplace",
        "label": "contract IAddressResolver",
        "numberOfBytes": "20"
      }
    }
  }
}