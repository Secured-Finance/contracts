{
  "address": "0xC5FF592D0Ff6D25Ff3831dD32Ae2Fa527a243615",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "ccy",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "CircuitBreakerLimitRangeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "ccy",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "OrderFeeRateUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_ccy",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maturity",
          "type": "uint256"
        }
      ],
      "name": "calculateOrderFeeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "orderFeeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_ccy",
          "type": "bytes32"
        }
      ],
      "name": "getCircuitBreakerLimitRange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_ccy",
          "type": "bytes32"
        }
      ],
      "name": "getOrderFeeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xafd4d1658db89a797f70631b774441afe4dfaecd1e225fd2cba24708083f55e4",
  "receipt": {
    "to": null,
    "from": "0xDBA767F3DFF3835BEf5dE1eDEe91A9901402AB21",
    "contractAddress": "0xC5FF592D0Ff6D25Ff3831dD32Ae2Fa527a243615",
    "transactionIndex": 34,
    "gasUsed": "355410",
    "logsBloom": "0x
    "blockHash": "0x669c07cf2746ffaedb2db5cb465a7828a53a2dbfaf7415b62df5da90598bb5dd",
    "transactionHash": "0xafd4d1658db89a797f70631b774441afe4dfaecd1e225fd2cba24708083f55e4",
    "logs": [],
    "blockNumber": 4053426,
    "cumulativeGasUsed": "6837009",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7fb7821dadc9424227984a913e6112e9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ccy\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"CircuitBreakerLimitRangeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ccy\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"OrderFeeRateUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ccy\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maturity\",\"type\":\"uint256\"}],\"name\":\"calculateOrderFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"orderFeeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ccy\",\"type\":\"bytes32\"}],\"name\":\"getCircuitBreakerLimitRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ccy\",\"type\":\"bytes32\"}],\"name\":\"getOrderFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/libraries/logics/LendingMarketConfigurationLogic.sol\":\"LendingMarketConfigurationLogic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/protocol/libraries/Constants.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nlibrary Constants {\\n    /// @dev Used for price digits in the basis (10000 -> 1)\\n    uint256 public constant PRICE_DIGIT = 10000;\\n\\n    /// @dev Used for percentage digits in the basis (10000 -> 100%)\\n    uint256 public constant PCT_DIGIT = 10000;\\n\\n    /// @dev Used for seconds in year (60 * 60 * 24 * 365)\\n    uint256 internal constant SECONDS_IN_YEAR = 31536000;\\n\\n    /// @dev Used for maximum order count per currency\\n    uint256 internal constant MAXIMUM_ORDER_COUNT = 20;\\n\\n    /// @dev Used for minimum threshold for circuit breaker unit price threshold\\n    uint256 public constant MINIMUM_CIRCUIT_BREAKER_THRESHOLD = 10;\\n\\n    /// @dev Used for maximum threshold for circuit breaker unit price threshold\\n    uint256 public constant MAXIMUM_CIRCUIT_BREAKER_THRESHOLD = 200;\\n}\\n\",\"keccak256\":\"0x723b180b046e8fbe471400aa11a092e7611556a1467b0eccd6c19c26c7576459\",\"license\":\"MIT\"},\"contracts/protocol/libraries/logics/LendingMarketConfigurationLogic.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\n// libraries\\nimport {Constants} from \\\"../../libraries/Constants.sol\\\";\\nimport {RoundingUint256} from \\\"../../libraries/math/RoundingUint256.sol\\\";\\n// storages\\nimport {LendingMarketConfigurationStorage as Storage} from \\\"../../storages/mixins/LendingMarketConfigurationStorage.sol\\\";\\n\\nlibrary LendingMarketConfigurationLogic {\\n    using RoundingUint256 for uint256;\\n\\n    event OrderFeeRateUpdated(bytes32 ccy, uint256 previousRate, uint256 rate);\\n    event CircuitBreakerLimitRangeUpdated(bytes32 ccy, uint256 previousRate, uint256 rate);\\n\\n    function getCircuitBreakerLimitRange(bytes32 _ccy) public view returns (uint256) {\\n        return Storage.slot().circuitBreakerLimitRanges[_ccy];\\n    }\\n\\n    function getOrderFeeRate(bytes32 _ccy) public view returns (uint256) {\\n        return Storage.slot().orderFeeRates[_ccy];\\n    }\\n\\n    function calculateOrderFeeAmount(\\n        bytes32 _ccy,\\n        uint256 _amount,\\n        uint256 _maturity\\n    ) external view returns (uint256 orderFeeAmount) {\\n        require(block.timestamp < _maturity, \\\"Invalid maturity\\\");\\n        uint256 currentMaturity = _maturity - block.timestamp;\\n\\n        // NOTE: The formula is:\\n        // actualRate = feeRate * (currentMaturity / SECONDS_IN_YEAR)\\n        // orderFeeAmount = amount * actualRate\\n        orderFeeAmount = (Storage.slot().orderFeeRates[_ccy] * currentMaturity * _amount).div(\\n            Constants.SECONDS_IN_YEAR * Constants.PCT_DIGIT\\n        );\\n    }\\n\\n    function updateOrderFeeRate(bytes32 _ccy, uint256 _orderFeeRate) external {\\n        require(_orderFeeRate <= Constants.PCT_DIGIT, \\\"Invalid order fee rate\\\");\\n        uint256 previousRate = Storage.slot().orderFeeRates[_ccy];\\n\\n        if (_orderFeeRate != previousRate) {\\n            Storage.slot().orderFeeRates[_ccy] = _orderFeeRate;\\n\\n            emit OrderFeeRateUpdated(_ccy, previousRate, _orderFeeRate);\\n        }\\n    }\\n\\n    function updateCircuitBreakerLimitRange(bytes32 _ccy, uint256 _limitRange) external {\\n        require(_limitRange <= Constants.PCT_DIGIT, \\\"Invalid circuit breaker limit range\\\");\\n        uint256 previousRange = Storage.slot().circuitBreakerLimitRanges[_ccy];\\n\\n        if (_limitRange != previousRange) {\\n            Storage.slot().circuitBreakerLimitRanges[_ccy] = _limitRange;\\n\\n            emit CircuitBreakerLimitRangeUpdated(_ccy, previousRange, _limitRange);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x17f3ca33a826ece0bce629acdc8fee0d4593e51354b31f059893ed4451cbfe06\",\"license\":\"MIT\"},\"contracts/protocol/libraries/math/RoundingUint256.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nlibrary RoundingUint256 {\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0);\\n\\n        if ((a * 10) / b - (a / b) * 10 < 5) {\\n            return a / b;\\n        } else {\\n            return (a / b) + 1;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbc360f39a82f1a9a7454726e3db802407d305b5e525aa8c3236fe49ca6ca534d\",\"license\":\"MIT\"},\"contracts/protocol/storages/mixins/LendingMarketConfigurationStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nlibrary LendingMarketConfigurationStorage {\\n    bytes32 internal constant STORAGE_SLOT = keccak256(\\\"sf.storage.lendingMarketConfiguration\\\");\\n\\n    struct Storage {\\n        // Mapping from currency to order fee rate received by protocol (in basis point)\\n        mapping(bytes32 => uint256) orderFeeRates;\\n        // Mapping from currency to rate limit range of yield for the circuit breaker\\n        mapping(bytes32 => uint256) circuitBreakerLimitRanges;\\n    }\\n\\n    function slot() internal pure returns (Storage storage r) {\\n        bytes32 _slot = STORAGE_SLOT;\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := _slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x98f21b587906833fa5f85843bfa25a5cd9faca0d87a1d8abbbd279b0cba37ce8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x61057661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c806303e5fb59146100665780634e78fecc146100a55780635ca65d57146100e45780637b588aaa146101065780638ba14e3814610126575b600080fd5b610093610074366004610433565b6000908152600080516020610521833981519152602052604090205490565b60405190815260200160405180910390f35b6100936100b3366004610433565b60009081527ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d318602052604090205490565b8180156100f057600080fd5b506101046100ff36600461044c565b610139565b005b81801561011257600080fd5b5061010461012136600461044c565b610213565b61009361013436600461046e565b610315565b6127108111156101895760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206f7264657220666565207261746560501b60448201526064015b60405180910390fd5b6000828152600080516020610521833981519152602052604090205481811461020e576000838152600080516020610521833981519152602090815260409182902084905581518581529081018390529081018390527fad24e9bff76148b1b779fc330ea225198d2b44136c7a8e5fbec46c99c7775632906060015b60405180910390a15b505050565b6127108111156102715760405162461bcd60e51b815260206004820152602360248201527f496e76616c6964206369726375697420627265616b6572206c696d69742072616044820152626e676560e81b6064820152608401610180565b60008281527ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d318602052604090205481811461020e5760008381527ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d318602090815260409182902084905581518581529081018390529081018390527fee52d515b96986517a19b501c0a50b03f4edace46ba0484faaea7590969adcf690606001610205565b60008142106103595760405162461bcd60e51b815260206004820152601060248201526f496e76616c6964206d6174757269747960801b6044820152606401610180565b600061036542846104b0565b90506103b361037a6127106301e133806104c7565b6000878152600080516020610521833981519152602052604090205486906103a39085906104c7565b6103ad91906104c7565b906103bc565b95945050505050565b60008082116103ca57600080fd5b60056103d683856104e6565b6103e190600a6104c7565b836103ed86600a6104c7565b6103f791906104e6565b61040191906104b0565b10156104185761041182846104e6565b905061042d565b61042282846104e6565b610411906001610508565b92915050565b60006020828403121561044557600080fd5b5035919050565b6000806040838503121561045f57600080fd5b50508035926020909101359150565b60008060006060848603121561048357600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156104c2576104c261049a565b500390565b60008160001904831182151516156104e1576104e161049a565b500290565b60008261050357634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561051b5761051b61049a565b50019056fefd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d317a264697066735822122006dc007c991b248e29db7157f27ad7471ee61217c0840274b0def17478061a5664736f6c63430008090033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c806303e5fb59146100665780634e78fecc146100a55780635ca65d57146100e45780637b588aaa146101065780638ba14e3814610126575b600080fd5b610093610074366004610433565b6000908152600080516020610521833981519152602052604090205490565b60405190815260200160405180910390f35b6100936100b3366004610433565b60009081527ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d318602052604090205490565b8180156100f057600080fd5b506101046100ff36600461044c565b610139565b005b81801561011257600080fd5b5061010461012136600461044c565b610213565b61009361013436600461046e565b610315565b6127108111156101895760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206f7264657220666565207261746560501b60448201526064015b60405180910390fd5b6000828152600080516020610521833981519152602052604090205481811461020e576000838152600080516020610521833981519152602090815260409182902084905581518581529081018390529081018390527fad24e9bff76148b1b779fc330ea225198d2b44136c7a8e5fbec46c99c7775632906060015b60405180910390a15b505050565b6127108111156102715760405162461bcd60e51b815260206004820152602360248201527f496e76616c6964206369726375697420627265616b6572206c696d69742072616044820152626e676560e81b6064820152608401610180565b60008281527ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d318602052604090205481811461020e5760008381527ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d318602090815260409182902084905581518581529081018390529081018390527fee52d515b96986517a19b501c0a50b03f4edace46ba0484faaea7590969adcf690606001610205565b60008142106103595760405162461bcd60e51b815260206004820152601060248201526f496e76616c6964206d6174757269747960801b6044820152606401610180565b600061036542846104b0565b90506103b361037a6127106301e133806104c7565b6000878152600080516020610521833981519152602052604090205486906103a39085906104c7565b6103ad91906104c7565b906103bc565b95945050505050565b60008082116103ca57600080fd5b60056103d683856104e6565b6103e190600a6104c7565b836103ed86600a6104c7565b6103f791906104e6565b61040191906104b0565b10156104185761041182846104e6565b905061042d565b61042282846104e6565b610411906001610508565b92915050565b60006020828403121561044557600080fd5b5035919050565b6000806040838503121561045f57600080fd5b50508035926020909101359150565b60008060006060848603121561048357600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156104c2576104c261049a565b500390565b60008160001904831182151516156104e1576104e161049a565b500290565b60008261050357634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561051b5761051b61049a565b50019056fefd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d317a264697066735822122006dc007c991b248e29db7157f27ad7471ee61217c0840274b0def17478061a5664736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}