{
  "address": "0x0EBA94D2b78f5Fd90911A9320f956D596D96E2Ee",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "ccy",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "AutoRollFeeRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "ccy",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "CircuitBreakerLimitRangeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        }
      ],
      "name": "ObservationPeriodUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "ccy",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "OrderFeeRateUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_ccy",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maturity",
          "type": "uint256"
        }
      ],
      "name": "calculateOrderFeeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "orderFeeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_ccy",
          "type": "bytes32"
        }
      ],
      "name": "getCircuitBreakerLimitRange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getObservationPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_ccy",
          "type": "bytes32"
        }
      ],
      "name": "getOrderFeeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x85d2868219fc532fd6eeb418904463990d0befb6ea12aba924ace2463f9d618e",
  "receipt": {
    "to": null,
    "from": "0xDBA767F3DFF3835BEf5dE1eDEe91A9901402AB21",
    "contractAddress": "0x0EBA94D2b78f5Fd90911A9320f956D596D96E2Ee",
    "transactionIndex": 100,
    "gasUsed": "467874",
    "logsBloom": "0x
    "blockHash": "0x904381da05a5b1b228dc9e0359a893bdc210afcfbcb90b97fa0b2b7443179d1e",
    "transactionHash": "0x85d2868219fc532fd6eeb418904463990d0befb6ea12aba924ace2463f9d618e",
    "logs": [],
    "blockNumber": 3629051,
    "cumulativeGasUsed": "13307251",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "6f01400ba717e365335694f7dd4a1baf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ccy\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"AutoRollFeeRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ccy\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"CircuitBreakerLimitRangeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"ObservationPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ccy\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"OrderFeeRateUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ccy\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maturity\",\"type\":\"uint256\"}],\"name\":\"calculateOrderFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"orderFeeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ccy\",\"type\":\"bytes32\"}],\"name\":\"getCircuitBreakerLimitRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getObservationPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ccy\",\"type\":\"bytes32\"}],\"name\":\"getOrderFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/libraries/logics/LendingMarketConfigurationLogic.sol\":\"LendingMarketConfigurationLogic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/protocol/libraries/Constants.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nlibrary Constants {\\n    /// @dev Used for price digits in the basis (10000 -> 1)\\n    uint256 public constant PRICE_DIGIT = 10000;\\n\\n    /// @dev Used for percentage digits in the basis (10000 -> 100%)\\n    uint256 public constant PCT_DIGIT = 10000;\\n\\n    /// @dev Used for seconds in year (60 * 60 * 24 * 365)\\n    uint256 internal constant SECONDS_IN_YEAR = 31536000;\\n\\n    /// @dev Used for maximum order count per currency\\n    uint256 internal constant MAXIMUM_ORDER_COUNT = 20;\\n}\\n\",\"keccak256\":\"0x89fe39938c9a7dd4133dba6099285937c94718a355bd904f48989b795cee2898\",\"license\":\"MIT\"},\"contracts/protocol/libraries/logics/LendingMarketConfigurationLogic.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\n// libraries\\nimport {Constants} from \\\"../../libraries/Constants.sol\\\";\\nimport {RoundingUint256} from \\\"../../libraries/math/RoundingUint256.sol\\\";\\n// storages\\nimport {LendingMarketConfigurationStorage as Storage} from \\\"../../storages/LendingMarketConfigurationStorage.sol\\\";\\n\\nlibrary LendingMarketConfigurationLogic {\\n    using RoundingUint256 for uint256;\\n\\n    event OrderFeeRateUpdated(bytes32 ccy, uint256 previousRate, uint256 rate);\\n    event AutoRollFeeRateUpdated(bytes32 ccy, uint256 previousRate, uint256 rate);\\n    event CircuitBreakerLimitRangeUpdated(bytes32 ccy, uint256 previousRate, uint256 rate);\\n    event ObservationPeriodUpdated(uint256 previousPeriod, uint256 period);\\n\\n    function getCircuitBreakerLimitRange(bytes32 _ccy) public view returns (uint256) {\\n        return Storage.slot().circuitBreakerLimitRanges[_ccy];\\n    }\\n\\n    function getOrderFeeRate(bytes32 _ccy) public view returns (uint256) {\\n        return Storage.slot().orderFeeRates[_ccy];\\n    }\\n\\n    function getObservationPeriod() public view returns (uint256) {\\n        return Storage.slot().observationPeriod;\\n    }\\n\\n    function calculateOrderFeeAmount(\\n        bytes32 _ccy,\\n        uint256 _amount,\\n        uint256 _maturity\\n    ) external view returns (uint256 orderFeeAmount) {\\n        require(block.timestamp < _maturity, \\\"Invalid maturity\\\");\\n        uint256 currentMaturity = _maturity - block.timestamp;\\n\\n        // NOTE: The formula is:\\n        // actualRate = feeRate * (currentMaturity / SECONDS_IN_YEAR)\\n        // orderFeeAmount = amount * actualRate\\n        orderFeeAmount = (Storage.slot().orderFeeRates[_ccy] * currentMaturity * _amount).div(\\n            Constants.SECONDS_IN_YEAR * Constants.PCT_DIGIT\\n        );\\n    }\\n\\n    function updateOrderFeeRate(bytes32 _ccy, uint256 _orderFeeRate) external {\\n        require(_orderFeeRate <= Constants.PCT_DIGIT, \\\"Invalid order fee rate\\\");\\n        uint256 previousRate = Storage.slot().orderFeeRates[_ccy];\\n\\n        if (_orderFeeRate != previousRate) {\\n            Storage.slot().orderFeeRates[_ccy] = _orderFeeRate;\\n\\n            emit OrderFeeRateUpdated(_ccy, previousRate, _orderFeeRate);\\n        }\\n    }\\n\\n    function updateAutoRollFeeRate(bytes32 _ccy, uint256 _autoRollFeeRate) external {\\n        require(_autoRollFeeRate <= Constants.PCT_DIGIT, \\\"Invalid auto-roll fee rate\\\");\\n        uint256 previousRate = Storage.slot().autoRollFeeRates[_ccy];\\n\\n        if (_autoRollFeeRate != previousRate) {\\n            Storage.slot().autoRollFeeRates[_ccy] = _autoRollFeeRate;\\n\\n            emit AutoRollFeeRateUpdated(_ccy, previousRate, _autoRollFeeRate);\\n        }\\n    }\\n\\n    function updateCircuitBreakerLimitRange(bytes32 _ccy, uint256 _limitRange) external {\\n        require(_limitRange <= Constants.PCT_DIGIT, \\\"Invalid circuit breaker limit range\\\");\\n        uint256 previousRange = Storage.slot().circuitBreakerLimitRanges[_ccy];\\n\\n        if (_limitRange != previousRange) {\\n            Storage.slot().circuitBreakerLimitRanges[_ccy] = _limitRange;\\n\\n            emit CircuitBreakerLimitRangeUpdated(_ccy, previousRange, _limitRange);\\n        }\\n    }\\n\\n    function updateObservationPeriod(uint256 _observationPeriod) external {\\n        uint256 previousPeriod = Storage.slot().observationPeriod;\\n\\n        if (_observationPeriod != previousPeriod) {\\n            Storage.slot().observationPeriod = _observationPeriod;\\n\\n            emit ObservationPeriodUpdated(previousPeriod, _observationPeriod);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x56ddfc5bb04cf43fc3e6e601bdcf100df6c425edb63182a5b9d6ec023c27d3a6\",\"license\":\"MIT\"},\"contracts/protocol/libraries/math/RoundingUint256.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nlibrary RoundingUint256 {\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0);\\n\\n        if ((a * 10) / b - (a / b) * 10 < 5) {\\n            return a / b;\\n        } else {\\n            return (a / b) + 1;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbc360f39a82f1a9a7454726e3db802407d305b5e525aa8c3236fe49ca6ca534d\",\"license\":\"MIT\"},\"contracts/protocol/storages/LendingMarketConfigurationStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nlibrary LendingMarketConfigurationStorage {\\n    bytes32 internal constant STORAGE_SLOT = keccak256(\\\"sf.storage.lendingMarketConfiguration\\\");\\n\\n    struct Storage {\\n        // Mapping from currency to order fee rate received by protocol (in basis point)\\n        mapping(bytes32 => uint256) orderFeeRates;\\n        // Mapping from currency to auto-roll fee rate received by protocol (in basis point)\\n        mapping(bytes32 => uint256) autoRollFeeRates;\\n        // Mapping from currency to limit range in unit price for the circuit breaker\\n        mapping(bytes32 => uint256) circuitBreakerLimitRanges;\\n        // The period to calculate the volume-weighted average price of transactions to use as auto-roll fee rate.\\n        uint256 observationPeriod;\\n    }\\n\\n    function slot() internal pure returns (Storage storage r) {\\n        bytes32 _slot = STORAGE_SLOT;\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := _slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x49c1c698af0daffea1da1dcfa3db009e66ed085f1f25244012fe8b9738088e17\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x61077f61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c80637b588aaa116100655780637b588aaa146101575780638ba14e38146101775780638c197d8d1461018a578063f1eaebae146101aa57600080fd5b806303e5fb59146100975780632f749574146100d65780634e78fecc146100f85780635ca65d5714610137575b600080fd5b6100c46100a536600461063c565b600090815260008051602061072a833981519152602052604090205490565b60405190815260200160405180910390f35b8180156100e257600080fd5b506100f66100f1366004610655565b6101d1565b005b6100c461010636600461063c565b60009081527ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d319602052604090205490565b81801561014357600080fd5b506100f6610152366004610655565b6102d6565b81801561016357600080fd5b506100f6610172366004610655565b6103a1565b6100c4610185366004610677565b6104a3565b81801561019657600080fd5b506100f66101a536600461063c565b61054a565b7ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d31a546100c4565b6127108111156102285760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964206175746f2d726f6c6c20666565207261746500000000000060448201526064015b60405180910390fd5b60008281527ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d31860205260409020548181146102d15760008381527ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d318602090815260409182902084905581518581529081018390529081018390527ff9b6ff302b45c656a6ddc9cb245bb27b3eb84bea81cb723687c350971fef2420906060015b60405180910390a15b505050565b6127108111156103215760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206f7264657220666565207261746560501b604482015260640161021f565b600082815260008051602061072a83398151915260205260409020548181146102d157600083815260008051602061072a833981519152602090815260409182902084905581518581529081018390529081018390527fad24e9bff76148b1b779fc330ea225198d2b44136c7a8e5fbec46c99c7775632906060016102c8565b6127108111156103ff5760405162461bcd60e51b815260206004820152602360248201527f496e76616c6964206369726375697420627265616b6572206c696d69742072616044820152626e676560e81b606482015260840161021f565b60008281527ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d31960205260409020548181146102d15760008381527ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d319602090815260409182902084905581518581529081018390529081018390527fee52d515b96986517a19b501c0a50b03f4edace46ba0484faaea7590969adcf6906060016102c8565b60008142106104e75760405162461bcd60e51b815260206004820152601060248201526f496e76616c6964206d6174757269747960801b604482015260640161021f565b60006104f342846106b9565b90506105416105086127106301e133806106d0565b600087815260008051602061072a833981519152602052604090205486906105319085906106d0565b61053b91906106d0565b906105c5565b95945050505050565b7ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d31a548181146105c1578160008051602061072a8339815191526003015560408051828152602081018490527fb310034e792eb345456b77ee9b3ade0d30b9866d547921c8f4d5e9273c941a90910160405180910390a15b5050565b60008082116105d357600080fd5b60056105df83856106ef565b6105ea90600a6106d0565b836105f686600a6106d0565b61060091906106ef565b61060a91906106b9565b10156106215761061a82846106ef565b9050610636565b61062b82846106ef565b61061a906001610711565b92915050565b60006020828403121561064e57600080fd5b5035919050565b6000806040838503121561066857600080fd5b50508035926020909101359150565b60008060006060848603121561068c57600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156106cb576106cb6106a3565b500390565b60008160001904831182151516156106ea576106ea6106a3565b500290565b60008261070c57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610724576107246106a3565b50019056fefd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d317a2646970667358221220d078ef629e7fd7ed4a5bf65cd727b6919935139e5a747331f69f78e1c2fc797064736f6c63430008090033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c80637b588aaa116100655780637b588aaa146101575780638ba14e38146101775780638c197d8d1461018a578063f1eaebae146101aa57600080fd5b806303e5fb59146100975780632f749574146100d65780634e78fecc146100f85780635ca65d5714610137575b600080fd5b6100c46100a536600461063c565b600090815260008051602061072a833981519152602052604090205490565b60405190815260200160405180910390f35b8180156100e257600080fd5b506100f66100f1366004610655565b6101d1565b005b6100c461010636600461063c565b60009081527ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d319602052604090205490565b81801561014357600080fd5b506100f6610152366004610655565b6102d6565b81801561016357600080fd5b506100f6610172366004610655565b6103a1565b6100c4610185366004610677565b6104a3565b81801561019657600080fd5b506100f66101a536600461063c565b61054a565b7ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d31a546100c4565b6127108111156102285760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964206175746f2d726f6c6c20666565207261746500000000000060448201526064015b60405180910390fd5b60008281527ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d31860205260409020548181146102d15760008381527ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d318602090815260409182902084905581518581529081018390529081018390527ff9b6ff302b45c656a6ddc9cb245bb27b3eb84bea81cb723687c350971fef2420906060015b60405180910390a15b505050565b6127108111156103215760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206f7264657220666565207261746560501b604482015260640161021f565b600082815260008051602061072a83398151915260205260409020548181146102d157600083815260008051602061072a833981519152602090815260409182902084905581518581529081018390529081018390527fad24e9bff76148b1b779fc330ea225198d2b44136c7a8e5fbec46c99c7775632906060016102c8565b6127108111156103ff5760405162461bcd60e51b815260206004820152602360248201527f496e76616c6964206369726375697420627265616b6572206c696d69742072616044820152626e676560e81b606482015260840161021f565b60008281527ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d31960205260409020548181146102d15760008381527ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d319602090815260409182902084905581518581529081018390529081018390527fee52d515b96986517a19b501c0a50b03f4edace46ba0484faaea7590969adcf6906060016102c8565b60008142106104e75760405162461bcd60e51b815260206004820152601060248201526f496e76616c6964206d6174757269747960801b604482015260640161021f565b60006104f342846106b9565b90506105416105086127106301e133806106d0565b600087815260008051602061072a833981519152602052604090205486906105319085906106d0565b61053b91906106d0565b906105c5565b95945050505050565b7ffd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d31a548181146105c1578160008051602061072a8339815191526003015560408051828152602081018490527fb310034e792eb345456b77ee9b3ade0d30b9866d547921c8f4d5e9273c941a90910160405180910390a15b5050565b60008082116105d357600080fd5b60056105df83856106ef565b6105ea90600a6106d0565b836105f686600a6106d0565b61060091906106ef565b61060a91906106b9565b10156106215761061a82846106ef565b9050610636565b61062b82846106ef565b61061a906001610711565b92915050565b60006020828403121561064e57600080fd5b5035919050565b6000806040838503121561066857600080fd5b50508035926020909101359150565b60008060006060848603121561068c57600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156106cb576106cb6106a3565b500390565b60008160001904831182151516156106ea576106ea6106a3565b500290565b60008261070c57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610724576107246106a3565b50019056fefd57fda692f2d6ebd63634bcff565f4a5bd9da5175c220bd0ae0da0b8f69d317a2646970667358221220d078ef629e7fd7ed4a5bf65cd727b6919935139e5a747331f69f78e1c2fc797064736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}