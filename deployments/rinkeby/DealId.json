{
  "address": "0x7296b5194f4E140B2d64Ec967285e007d9880365",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "prefix",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "counter",
          "type": "uint256"
        }
      ],
      "name": "generate",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "getPrefix",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "prefix",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x7f44bc0f7ed2946389615547b1adaa02b5abcc623ef70c5e8239f2fd8fddb308",
  "receipt": {
    "to": null,
    "from": "0x57AB42d4fa756b6956b0cAf986a5f53bA90D9e28",
    "contractAddress": "0x7296b5194f4E140B2d64Ec967285e007d9880365",
    "transactionIndex": 49,
    "gasUsed": "130136",
    "logsBloom": "0x
    "blockHash": "0x7581472c508020b87668ffdbb4e9c14864664bf7ca04c98dc54dd4152b13e197",
    "transactionHash": "0x7f44bc0f7ed2946389615547b1adaa02b5abcc623ef70c5e8239f2fd8fddb308",
    "logs": [],
    "blockNumber": 10650656,
    "cumulativeGasUsed": "13088081",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c547b2e6a239b041ee2d79dd0b62b5b6",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"prefix\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"counter\",\"type\":\"uint256\"}],\"name\":\"generate\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getPrefix\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"prefix\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"generate(bytes32,uint256)\":{\"details\":\"Generates a deal id using a product prefix and deal number\",\"params\":{\"counter\":\"Number of deal to be generated\",\"prefix\":\"Product type prefix in bytes4\"},\"returns\":{\"id\":\"in bytes32 with prefix on the left and counter on the right side\"}},\"getPrefix(bytes32)\":{\"details\":\"Returns product based prefix from deal id\",\"params\":{\"id\":\"Deal unique identification string\"},\"returns\":{\"prefix\":\"in bytes4\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/DealId.sol\":\"DealId\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/DealId.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.12;\\n\\nlibrary DealId {\\n    /**\\n     * @dev Generates a deal id using a product prefix and deal number\\n     * @param prefix Product type prefix in bytes4\\n     * @param counter Number of deal to be generated\\n     * @return id in bytes32 with prefix on the left and counter on the right side\\n     */\\n    function generate(bytes32 prefix, uint256 counter)\\n        public\\n        pure\\n        returns (bytes32 id)\\n    {\\n        uint224 num = toUint224(counter);\\n        bytes4 r;\\n        bytes32 zero = 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000;\\n        assembly {\\n            r := and(prefix, zero)\\n            id := add(r, num)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns product based prefix from deal id\\n     * @param id Deal unique identification string\\n     * @return prefix in bytes4\\n     */\\n    function getPrefix(bytes32 id) public pure returns (bytes4 prefix) {\\n        assembly {\\n            prefix := shl(0, id)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns converted number from uint256 to uint224\\n     */\\n    function toUint224(uint256 value) internal pure returns (uint224) {\\n        require(value <= type(uint224).max, \\\"NUMBER_OVERFLOW\\\");\\n        return uint224(value);\\n    }\\n}\\n\",\"keccak256\":\"0x21952ac52bc146311f6e0b912c4d4a7a48185c72063e7ab84d11ff6ba3923116\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x610164610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80630d6267e81461004557806334b362b61461007f575b600080fd5b6100626004803603602081101561005b57600080fd5b50356100b4565b604080516001600160e01b03199092168252519081900360200190f35b6100a26004803603604081101561009557600080fd5b50803590602001356100b7565b60408051918252519081900360200190f35b90565b6000806100c3836100da565b6001600160e01b0319949094169093019392505050565b60006001600160e01b0382111561012a576040805162461bcd60e51b815260206004820152600f60248201526e4e554d4245525f4f564552464c4f5760881b604482015290519081900360640190fd5b509056fea26469706673582212205c597ee251224df42deda77a80ea2021f32325e6a908cb3337f8c87de14ffa4164736f6c634300060c0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80630d6267e81461004557806334b362b61461007f575b600080fd5b6100626004803603602081101561005b57600080fd5b50356100b4565b604080516001600160e01b03199092168252519081900360200190f35b6100a26004803603604081101561009557600080fd5b50803590602001356100b7565b60408051918252519081900360200190f35b90565b6000806100c3836100da565b6001600160e01b0319949094169093019392505050565b60006001600160e01b0382111561012a576040805162461bcd60e51b815260206004820152600f60248201526e4e554d4245525f4f564552464c4f5760881b604482015290519081900360640190fd5b509056fea26469706673582212205c597ee251224df42deda77a80ea2021f32325e6a908cb3337f8c87de14ffa4164736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "generate(bytes32,uint256)": {
        "details": "Generates a deal id using a product prefix and deal number",
        "params": {
          "counter": "Number of deal to be generated",
          "prefix": "Product type prefix in bytes4"
        },
        "returns": {
          "id": "in bytes32 with prefix on the left and counter on the right side"
        }
      },
      "getPrefix(bytes32)": {
        "details": "Returns product based prefix from deal id",
        "params": {
          "id": "Deal unique identification string"
        },
        "returns": {
          "prefix": "in bytes4"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}