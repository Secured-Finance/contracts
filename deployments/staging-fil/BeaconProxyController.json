{
  "address": "0x8a7f362cE3c1Dbf1Dae50B3350A6cAc84c19CAad",
  "abi": [
    {
      "inputs": [],
      "name": "InvalidProxyContract",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "MissingAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoBeaconProxyContract",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "OnlyAcceptedContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ResolverAlreadyRegistered",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newImplementationAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldImplementationAddress",
          "type": "address"
        }
      ],
      "name": "BeaconProxyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "destination",
          "type": "address"
        }
      ],
      "name": "CacheUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "buildCache",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "destinations",
          "type": "address[]"
        }
      ],
      "name": "changeBeaconProxyAdmins",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployFutureValueVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "futureValue",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_ccy",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_orderFeeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_cbLimitRange",
          "type": "uint256"
        }
      ],
      "name": "deployLendingMarket",
      "outputs": [
        {
          "internalType": "address",
          "name": "market",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maturity",
          "type": "uint256"
        }
      ],
      "name": "deployZCToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "futureValueToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "beaconName",
          "type": "bytes32"
        }
      ],
      "name": "getBeaconProxyAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "beaconProxyAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRevision",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_resolver",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isResolverCached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requiredContracts",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "contracts",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resolver",
      "outputs": [
        {
          "internalType": "contract IAddressResolver",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImpl",
          "type": "address"
        }
      ],
      "name": "setFutureValueVaultImpl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImpl",
          "type": "address"
        }
      ],
      "name": "setLendingMarketImpl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImpl",
          "type": "address"
        }
      ],
      "name": "setZCTokenImpl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe73787e56ea2e25c9c298454893165309a14749b7d814a5cdecc8d0af2a70fb5",
  "receipt": {
    "to": null,
    "from": "0xDBA767F3DFF3835BEf5dE1eDEe91A9901402AB21",
    "contractAddress": "0xbfD3311fac28e8eE1786881B41727AA7072a6281",
    "transactionIndex": 1,
    "gasUsed": "97934028",
    "logsBloom": "0xa781508798088038288008212c88c060cc0e604c0420410034810400904848098210a10040040118001e9844644a404028881001120194e0802adc0c4b246000001075010145a0123450101800170208709f0c2200160010108830101412500228202c04121004440086018480002c080409888c5818048321004019ca1024c48001301830940080004014c100000d1b800803201041c000004006012280404006210081020000840200a50801040000440000cc5280c0c902720418340561119808b66620002c42050281040d46280a031022e0b60d620d068018010006e010001082224031281c2300229a80c2005b0089111060c010340000885900c0801c",
    "blockHash": "0x8409fac0dadc1db18596def9ec9af30985918164c552f6b0bf2df11e57389983",
    "transactionHash": "0xe73787e56ea2e25c9c298454893165309a14749b7d814a5cdecc8d0af2a70fb5",
    "logs": [],
    "blockNumber": 1677991,
    "cumulativeGasUsed": "0",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "f3aa1cfa8e4de6a118da5c4500d93b3f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidProxyContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"MissingAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoBeaconProxyContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"OnlyAcceptedContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ResolverAlreadyRegistered\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementationAddress\",\"type\":\"address\"}],\"name\":\"BeaconProxyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"CacheUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buildCache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"destinations\",\"type\":\"address[]\"}],\"name\":\"changeBeaconProxyAdmins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployFutureValueVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"futureValue\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ccy\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_orderFeeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cbLimitRange\",\"type\":\"uint256\"}],\"name\":\"deployLendingMarket\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maturity\",\"type\":\"uint256\"}],\"name\":\"deployZCToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"futureValueToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"beaconName\",\"type\":\"bytes32\"}],\"name\":\"getBeaconProxyAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"beaconProxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRevision\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isResolverCached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredContracts\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"contracts\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"contract IAddressResolver\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImpl\",\"type\":\"address\"}],\"name\":\"setFutureValueVaultImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImpl\",\"type\":\"address\"}],\"name\":\"setLendingMarketImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImpl\",\"type\":\"address\"}],\"name\":\"setZCTokenImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"changeBeaconProxyAdmins(address,address[])\":{\"params\":{\"destinations\":\"The destination contract addresses\",\"newAdmin\":\"The address of new admin\"}},\"deployLendingMarket(bytes32,uint256,uint256)\":{\"params\":{\"_cbLimitRange\":\"The circuit breaker limit range\",\"_ccy\":\"Main currency for new lending market\",\"_orderFeeRate\":\"The order fee rate received by protocol\"},\"returns\":{\"market\":\"The proxy contract address of created lending market\"}},\"deployZCToken(string,string,uint8,address,uint256)\":{\"params\":{\"_asset\":\"The address of the token's underlying asset\",\"_decimals\":\"The number of decimals the token uses\",\"_maturity\":\"The maturity of the token\",\"_name\":\"The name of the future value token\",\"_symbol\":\"The symbol of the future value token\"},\"returns\":{\"futureValueToken\":\"The proxy contract address of created future value token\"}},\"getBeaconProxyAddress(bytes32)\":{\"params\":{\"beaconName\":\"The cache name of the beacon proxy\"},\"returns\":{\"beaconProxyAddress\":\"The beacon proxy address\"}},\"getRevision()\":{\"returns\":{\"_0\":\"The revision number\"}},\"initialize(address,address)\":{\"details\":\"Function is invoked by the proxy contract when the contract is added to the ProxyController.\",\"params\":{\"_owner\":\"The address of the contract owner\",\"_resolver\":\"The address of the Address Resolver contract\"}},\"multicall(bytes[])\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"requiredContracts()\":{\"details\":\"The contract name list is in `./libraries/Contracts.sol`.\"},\"setFutureValueVaultImpl(address)\":{\"params\":{\"newImpl\":\"The address of implementation contract\"}},\"setLendingMarketImpl(address)\":{\"params\":{\"newImpl\":\"The address of implementation contract\"}},\"setZCTokenImpl(address)\":{\"params\":{\"newImpl\":\"The address of implementation contract\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeBeaconProxyAdmins(address,address[])\":{\"notice\":\"Updates admin addresses of beacon proxy contract\"},\"deployFutureValueVault()\":{\"notice\":\"Deploys new FutureValueVaultReverts on deployment market with existing currency and term\"},\"deployLendingMarket(bytes32,uint256,uint256)\":{\"notice\":\"Deploys new LendingMarket\"},\"deployZCToken(string,string,uint8,address,uint256)\":{\"notice\":\"Deploys new ZCToken\"},\"getBeaconProxyAddress(bytes32)\":{\"notice\":\"Gets the beacon proxy address to the selected name.\"},\"getRevision()\":{\"notice\":\"Gets the revision number of the contract\"},\"initialize(address,address)\":{\"notice\":\"Initializes the contract.\"},\"requiredContracts()\":{\"notice\":\"Returns the contract names used in this contract.\"},\"setFutureValueVaultImpl(address)\":{\"notice\":\"Sets the implementation contract of FutureValueVault\"},\"setLendingMarketImpl(address)\":{\"notice\":\"Sets the implementation contract of LendingMarket\"},\"setZCTokenImpl(address)\":{\"notice\":\"Sets the implementation contract of ZCToken\"}},\"notice\":\"Implements the management of beacon proxy contracts. All beacon proxy contracts are deployed from this contract. This contract is also used to update the beacon proxy implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/BeaconProxyController.sol\":\"BeaconProxyController\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/chainlink/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Chainlink Contracts v0.4.0 (v0.8/interfaces/AggregatorV3Interface.sol)\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n    // if they do not have data to report, instead of returning unset values\\n    // which could be misinterpreted as actual reported values.\\n    function getRoundData(\\n        uint80 _roundId\\n    )\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x4e6b3af251ee2ee848acb86147bb94d4a0845f65d2143545b7b6853297f81b82\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT =\\n        0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT =\\n        0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(\\n            Address.isContract(newImplementation),\\n            \\\"ERC1967: new implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT =\\n        0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT =\\n        0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x662dcec1c76ec6c2b631a98c7af2788a292f30f9dcd853189831f3f01b310f58\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/proxy/beacon/BeaconProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/beacon/BeaconProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IBeacon.sol\\\";\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"../ERC1967/ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\\n *\\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\\n * conflict with the storage layout of the implementation behind the proxy.\\n *\\n * _Available since v3.4._\\n */\\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the proxy with `beacon`.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\\n     * constructor.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract with the interface {IBeacon}.\\n     */\\n    constructor(address beacon, bytes memory data) payable {\\n        _upgradeBeaconToAndCall(beacon, data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current beacon address.\\n     */\\n    function _beacon() internal view virtual returns (address) {\\n        return _getBeacon();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address of the associated beacon.\\n     */\\n    function _implementation() internal view virtual override returns (address) {\\n        return IBeacon(_getBeacon()).implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract.\\n     * - The implementation returned by `beacon` must be a contract.\\n     */\\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\\n        _upgradeBeaconToAndCall(beacon, data, false);\\n    }\\n}\\n\",\"keccak256\":\"0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) ||\\n                (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(\\n            !_initializing && _initialized < version,\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0xb13e7a56a0af42137a3e04dccb39c6bd4233d5e5c324197af9d71c3f7af5359c\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return\\n            functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data\\n    ) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data\\n    ) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x44e8974f420f05be7bf27220ef8e694d803a281eb0824a2c0d8960d864780bdf\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/utils/Multicall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Multicall.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Address.sol\\\";\\n\\n/**\\n * @dev Provides a function to batch together multiple calls in a single external call.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract Multicall {\\n    /**\\n     * @dev Receives and executes a batch of function calls on this contract.\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function multicall(bytes[] calldata data) external virtual returns (bytes[] memory results) {\\n        results = new bytes[](data.length);\\n        for (uint256 i = 0; i < data.length; i++) {\\n            results[i] = Address.functionDelegateCall(address(this), data[i]);\\n        }\\n        return results;\\n    }\\n}\\n\",\"keccak256\":\"0xface9a29da6448061decb3506735c0c37aae8820ffaacfea982b1a8633be20d4\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\"},\"contracts/protocol/BeaconProxyController.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\n// dependencies\\nimport {Multicall} from \\\"../dependencies/openzeppelin/utils/Multicall.sol\\\";\\n// interfaces\\nimport {IBeaconProxyController} from \\\"./interfaces/IBeaconProxyController.sol\\\";\\nimport {IProxyController} from \\\"./interfaces/IProxyController.sol\\\";\\n// libraries\\nimport {AddressResolverLib} from \\\"./libraries/AddressResolverLib.sol\\\";\\nimport {BeaconContracts, Contracts} from \\\"./libraries/Contracts.sol\\\";\\n// mixins\\nimport {MixinAddressResolver} from \\\"./mixins/MixinAddressResolver.sol\\\";\\n// utils\\nimport {UpgradeableBeacon} from \\\"./utils/UpgradeableBeacon.sol\\\";\\nimport {Ownable} from \\\"./utils/Ownable.sol\\\";\\nimport {Proxyable} from \\\"./utils/Proxyable.sol\\\";\\nimport {UpgradeabilityBeaconProxy} from \\\"./utils/UpgradeabilityBeaconProxy.sol\\\";\\n// storages\\nimport {BeaconProxyControllerStorage as Storage} from \\\"./storages/BeaconProxyControllerStorage.sol\\\";\\n\\n/**\\n * @notice Implements the management of beacon proxy contracts.\\n *\\n * All beacon proxy contracts are deployed from this contract.\\n * This contract is also used to update the beacon proxy implementation.\\n */\\ncontract BeaconProxyController is\\n    IBeaconProxyController,\\n    MixinAddressResolver,\\n    Ownable,\\n    Proxyable,\\n    Multicall\\n{\\n    /**\\n     * @notice Initializes the contract.\\n     * @dev Function is invoked by the proxy contract when the contract is added to the ProxyController.\\n     * @param _owner The address of the contract owner\\n     * @param _resolver The address of the Address Resolver contract\\n     */\\n    function initialize(address _owner, address _resolver) public initializer onlyProxy {\\n        _transferOwnership(_owner);\\n        registerAddressResolver(_resolver);\\n    }\\n\\n    // @inheritdoc MixinAddressResolver\\n    function requiredContracts() public pure override returns (bytes32[] memory contracts) {\\n        contracts = new bytes32[](1);\\n        contracts[0] = Contracts.LENDING_MARKET_CONTROLLER;\\n    }\\n\\n    /**\\n     * @notice Gets the beacon proxy address to the selected name.\\n     * @param beaconName The cache name of the beacon proxy\\n     * @return beaconProxyAddress The beacon proxy address\\n     */\\n    function getBeaconProxyAddress(\\n        bytes32 beaconName\\n    ) external view override returns (address beaconProxyAddress) {\\n        beaconProxyAddress = Storage.slot().registeredBeaconProxies[beaconName];\\n        if (beaconProxyAddress == address(0)) revert NoBeaconProxyContract();\\n\\n        UpgradeabilityBeaconProxy beaconProxy = UpgradeabilityBeaconProxy(\\n            payable(beaconProxyAddress)\\n        );\\n\\n        if (beaconProxy.implementation() == address(0)) revert InvalidProxyContract();\\n    }\\n\\n    /**\\n     * @notice Sets the implementation contract of FutureValueVault\\n     * @param newImpl The address of implementation contract\\n     */\\n    function setFutureValueVaultImpl(address newImpl) external override onlyOwner {\\n        _updateBeaconImpl(BeaconContracts.FUTURE_VALUE_VAULT, newImpl);\\n    }\\n\\n    /**\\n     * @notice Sets the implementation contract of LendingMarket\\n     * @param newImpl The address of implementation contract\\n     */\\n    function setLendingMarketImpl(address newImpl) external override onlyOwner {\\n        _updateBeaconImpl(BeaconContracts.LENDING_MARKET, newImpl);\\n    }\\n\\n    /**\\n     * @notice Sets the implementation contract of ZCToken\\n     * @param newImpl The address of implementation contract\\n     */\\n    function setZCTokenImpl(address newImpl) external override onlyOwner {\\n        _updateBeaconImpl(BeaconContracts.ZC_TOKEN, newImpl);\\n    }\\n\\n    /**\\n     * @notice Deploys new FutureValueVault\\n     * @notice Reverts on deployment market with existing currency and term\\n     */\\n    function deployFutureValueVault()\\n        external\\n        override\\n        onlyLendingMarketController\\n        returns (address futureValue)\\n    {\\n        bytes memory data = abi.encodeWithSignature(\\\"initialize(address)\\\", address(resolver()));\\n        futureValue = _createProxy(BeaconContracts.FUTURE_VALUE_VAULT, data);\\n    }\\n\\n    /**\\n     * @notice Deploys new LendingMarket\\n     * @param _ccy Main currency for new lending market\\n     * @param _orderFeeRate The order fee rate received by protocol\\n     * @param _cbLimitRange The circuit breaker limit range\\n     * @return market The proxy contract address of created lending market\\n     */\\n    function deployLendingMarket(\\n        bytes32 _ccy,\\n        uint256 _orderFeeRate,\\n        uint256 _cbLimitRange\\n    ) external override onlyLendingMarketController returns (address market) {\\n        bytes memory data = abi.encodeWithSignature(\\n            \\\"initialize(address,bytes32,uint256,uint256)\\\",\\n            address(resolver()),\\n            _ccy,\\n            _orderFeeRate,\\n            _cbLimitRange\\n        );\\n        market = _createProxy(BeaconContracts.LENDING_MARKET, data);\\n    }\\n\\n    /**\\n     * @notice Deploys new ZCToken\\n     * @param _name The name of the future value token\\n     * @param _symbol The symbol of the future value token\\n     * @param _decimals The number of decimals the token uses\\n     * @param _asset The address of the token's underlying asset\\n     * @param _maturity The maturity of the token\\n     * @return futureValueToken The proxy contract address of created future value token\\n     */\\n    function deployZCToken(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals,\\n        address _asset,\\n        uint256 _maturity\\n    ) external override onlyLendingMarketController returns (address futureValueToken) {\\n        bytes memory data = abi.encodeWithSignature(\\n            \\\"initialize(address,string,string,uint8,address,uint256)\\\",\\n            address(resolver()),\\n            _name,\\n            _symbol,\\n            _decimals,\\n            _asset,\\n            _maturity\\n        );\\n        futureValueToken = _createProxy(BeaconContracts.ZC_TOKEN, data);\\n    }\\n\\n    /**\\n     * @notice Updates admin addresses of beacon proxy contract\\n     * @param newAdmin The address of new admin\\n     * @param destinations The destination contract addresses\\n     */\\n    function changeBeaconProxyAdmins(\\n        address newAdmin,\\n        address[] calldata destinations\\n    ) external onlyOwner {\\n        for (uint256 i; i < destinations.length; i++) {\\n            UpgradeabilityBeaconProxy proxy = UpgradeabilityBeaconProxy(payable(destinations[i]));\\n            proxy.changeAdmin(newAdmin);\\n        }\\n    }\\n\\n    function _createProxy(bytes32 beaconName, bytes memory data) internal returns (address) {\\n        address beaconProxyAddress = Storage.slot().registeredBeaconProxies[beaconName];\\n        if (beaconProxyAddress == address(0)) revert NoBeaconProxyContract();\\n\\n        return address(new UpgradeabilityBeaconProxy(beaconProxyAddress, data));\\n    }\\n\\n    function _updateBeaconImpl(\\n        bytes32 name,\\n        address newAddress\\n    ) internal returns (address beaconProxyAddress) {\\n        beaconProxyAddress = Storage.slot().registeredBeaconProxies[name];\\n        UpgradeableBeacon beacon;\\n\\n        if (beaconProxyAddress == address(0)) {\\n            beacon = new UpgradeableBeacon(newAddress);\\n\\n            Storage.slot().registeredBeaconProxies[name] = beaconProxyAddress = address(beacon);\\n\\n            emit BeaconProxyUpdated(name, beaconProxyAddress, newAddress, address(0));\\n        } else {\\n            beacon = UpgradeableBeacon(beaconProxyAddress);\\n            address oldAddress = beacon.implementation();\\n            beacon.upgradeTo(newAddress);\\n            emit BeaconProxyUpdated(name, beaconProxyAddress, newAddress, oldAddress);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x83294bf5eca011e22490e2b8f05c2b1912ab13582a02c2b1b6ed53a906a99d82\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/interfaces/IAddressResolver.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\ninterface IAddressResolver {\\n    error UnmatchedInputs();\\n\\n    event AddressImported(bytes32 name, address destination);\\n\\n    function getAddress(bytes32 name, string calldata reason) external view returns (address);\\n\\n    function getAddress(bytes32 name) external view returns (address);\\n\\n    function getAddresses() external view returns (address[] memory);\\n\\n    function getNames() external view returns (bytes32[] memory);\\n}\\n\",\"keccak256\":\"0x902589cadb08c09a44c5cdbe7ed8ba57a93f7e2700681177ef57c47c40e2e161\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/interfaces/IBeaconProxyController.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\ninterface IBeaconProxyController {\\n    error NoBeaconProxyContract();\\n    error InvalidProxyContract();\\n\\n    event BeaconProxyUpdated(\\n        bytes32 indexed id,\\n        address indexed proxyAddress,\\n        address indexed newImplementationAddress,\\n        address oldImplementationAddress\\n    );\\n\\n    function getBeaconProxyAddress(bytes32 beaconName) external view returns (address);\\n\\n    function setFutureValueVaultImpl(address newImpl) external;\\n\\n    function setLendingMarketImpl(address newImpl) external;\\n\\n    function setZCTokenImpl(address newImpl) external;\\n\\n    function deployFutureValueVault() external returns (address futureValueVault);\\n\\n    function deployLendingMarket(\\n        bytes32 ccy,\\n        uint256 orderFeeRate,\\n        uint256 cbLimitRange\\n    ) external returns (address market);\\n\\n    function deployZCToken(\\n        string memory name,\\n        string memory symbol,\\n        uint8 decimals,\\n        address asset,\\n        uint256 maturity\\n    ) external returns (address futureValueToken);\\n}\\n\",\"keccak256\":\"0xec921fdea2288f812ed78ec9439e53f6bf751a582719618fa8fc8cd88d0b6920\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/interfaces/ICurrencyController.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nimport {PriceFeed} from \\\"../storages/CurrencyControllerStorage.sol\\\";\\n\\n/**\\n * @dev Currency Controller contract is responsible for managing supported\\n * currencies in Secured Finance Protocol\\n *\\n * Contract links new currencies to ETH Chainlink price feeds, without existing price feed\\n * contract owner is not able to add a new currency into the protocol\\n */\\ninterface ICurrencyController {\\n    error InvalidCurrency();\\n    error InvalidHaircut();\\n    error InvalidPriceFeed();\\n    error InvalidDecimals(address priceFeed, uint8 decimals);\\n    error InvalidPriceFeedInputs();\\n    error StalePriceFeed(\\n        address priceFeed,\\n        uint256 heartbeat,\\n        uint256 updatedAt,\\n        uint256 blockTimestamp\\n    );\\n\\n    event CurrencyAdded(bytes32 indexed ccy, uint256 haircut);\\n    event CurrencyRemoved(bytes32 indexed ccy);\\n\\n    event HaircutUpdated(bytes32 indexed ccy, uint256 haircut);\\n\\n    event PriceFeedUpdated(bytes32 ccy, uint256 decimals, address[] indexed priceFeeds);\\n\\n    function convert(\\n        bytes32 _fromCcy,\\n        bytes32 _toCcy,\\n        uint256 _amount\\n    ) external view returns (uint256 amount);\\n\\n    function convert(\\n        bytes32 _fromCcy,\\n        bytes32 _toCcy,\\n        uint256[] calldata _amounts\\n    ) external view returns (uint256[] memory amounts);\\n\\n    function convertToBaseCurrency(\\n        bytes32 _ccy,\\n        uint256 _amount\\n    ) external view returns (uint256 amount);\\n\\n    function convertToBaseCurrency(\\n        bytes32 _ccy,\\n        int256 _amount\\n    ) external view returns (int256 amount);\\n\\n    function convertToBaseCurrency(\\n        bytes32 _ccy,\\n        uint256[] calldata _amounts\\n    ) external view returns (uint256[] memory amounts);\\n\\n    function convertFromBaseCurrency(\\n        bytes32 _ccy,\\n        uint256 _amountETH\\n    ) external view returns (uint256 amount);\\n\\n    function convertFromBaseCurrency(\\n        bytes32 _ccy,\\n        uint256[] calldata _amounts\\n    ) external view returns (uint256[] memory amounts);\\n\\n    function getDecimals(bytes32) external view returns (uint8);\\n\\n    function getCurrencies() external view returns (bytes32[] memory);\\n\\n    function getHaircut(bytes32 _ccy) external view returns (uint256);\\n\\n    function getPriceFeed(bytes32 _ccy) external view returns (PriceFeed memory);\\n\\n    function getLastPrice(bytes32 _ccy) external view returns (int256 price);\\n\\n    function getAggregatedLastPrice(bytes32 _ccy) external view returns (int256);\\n\\n    function currencyExists(bytes32 _ccy) external view returns (bool);\\n\\n    function updatePriceFeed(\\n        bytes32 _ccy,\\n        uint8 _decimals,\\n        address[] calldata _priceFeeds,\\n        uint256[] calldata _heartbeats\\n    ) external;\\n\\n    function addCurrency(\\n        bytes32 _ccy,\\n        uint8 _decimals,\\n        uint256 _haircut,\\n        address[] calldata _priceFeeds,\\n        uint256[] calldata _heartbeats\\n    ) external;\\n\\n    function updateHaircut(bytes32 _ccy, uint256 _haircut) external;\\n\\n    function removeCurrency(bytes32 _ccy) external;\\n}\\n\",\"keccak256\":\"0x2d1e477a53ca03307d2f2ec206028963e99ff4dcf1e719e3b59845f6acb3ee93\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/interfaces/IGenesisValueVault.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nimport {AutoRollLog} from \\\"../storages/GenesisValueVaultStorage.sol\\\";\\n\\ninterface IGenesisValueVault {\\n    error NoCompoundFactorExists(uint256 maturity);\\n    error CompoundFactorIsZero();\\n    error ResidualAmountIsNotZero();\\n    error UnitPriceIsZero();\\n    error InvalidMaturity();\\n    error InvalidAmount();\\n    error InvalidOrderFeeRate();\\n    error CurrencyAlreadyInitialized();\\n    error InitialCompoundFactorAlreadyFinalized();\\n    error AutoRollLogAlreadyUpdated(uint256 currentMaturity, uint256 nextMaturity);\\n    error InsufficientBalance();\\n    error InsufficientLockedBalance();\\n\\n    event Transfer(bytes32 indexed ccy, address indexed from, address indexed to, int256 value);\\n    event AutoRollExecuted(\\n        bytes32 indexed ccy,\\n        uint256 lendingCompoundFactor,\\n        uint256 borrowingCompoundFactor,\\n        uint256 unitPrice,\\n        uint256 currentMaturity,\\n        uint256 previousMaturity\\n    );\\n    event BalanceLocked(bytes32 indexed ccy, address indexed user, uint256 value);\\n    event BalanceUnlocked(bytes32 indexed ccy, address indexed user, uint256 value);\\n\\n    function isAutoRolled(bytes32 _ccy, uint256 _maturity) external view returns (bool);\\n\\n    function isInitialized(bytes32 ccy) external view returns (bool);\\n\\n    function decimals(bytes32 ccy) external view returns (uint8);\\n\\n    function getTotalLendingSupply(bytes32 ccy) external view returns (uint256);\\n\\n    function getTotalBorrowingSupply(bytes32 ccy) external view returns (uint256);\\n\\n    function getBalance(bytes32 ccy, address user) external view returns (int256);\\n\\n    function getMaturityGenesisValue(bytes32 ccy, uint256 maturity) external view returns (int256);\\n\\n    function getCurrentMaturity(bytes32 ccy) external view returns (uint256);\\n\\n    function getLendingCompoundFactor(bytes32 ccy) external view returns (uint256);\\n\\n    function getBorrowingCompoundFactor(bytes32 ccy) external view returns (uint256);\\n\\n    function getAutoRollLog(\\n        bytes32 ccy,\\n        uint256 maturity\\n    ) external view returns (AutoRollLog memory);\\n\\n    function getLatestAutoRollLog(bytes32 ccy) external view returns (AutoRollLog memory);\\n\\n    function getTotalLockedBalance(bytes32 ccy) external view returns (uint256);\\n\\n    function calculateFVFromFV(\\n        bytes32 ccy,\\n        uint256 basisMaturity,\\n        uint256 destinationMaturity,\\n        int256 futureValue\\n    ) external view returns (int256);\\n\\n    function calculateGVFromFV(\\n        bytes32 ccy,\\n        uint256 basisMaturity,\\n        int256 futureValue\\n    ) external view returns (int256);\\n\\n    function calculateFVFromGV(\\n        bytes32 ccy,\\n        uint256 basisMaturity,\\n        int256 genesisValue\\n    ) external view returns (int256);\\n\\n    function getBalanceFluctuationByAutoRolls(\\n        bytes32 ccy,\\n        address user,\\n        uint256 maturity\\n    ) external view returns (int256 fluctuation);\\n\\n    function calculateBalanceFluctuationByAutoRolls(\\n        bytes32 ccy,\\n        int256 balance,\\n        uint256 fromMaturity,\\n        uint256 toMaturity\\n    ) external view returns (int256 fluctuation);\\n\\n    function initializeCurrencySetting(\\n        bytes32 ccy,\\n        uint8 decimals,\\n        uint256 compoundFactor,\\n        uint256 maturity\\n    ) external;\\n\\n    function updateInitialCompoundFactor(bytes32 ccy, uint256 unitPrice) external;\\n\\n    function updateDecimals(bytes32 _ccy, uint8 _decimals) external;\\n\\n    function executeAutoRoll(\\n        bytes32 ccy,\\n        uint256 maturity,\\n        uint256 nextMaturity,\\n        uint256 unitPrice,\\n        uint256 orderFeeRate\\n    ) external;\\n\\n    function updateGenesisValueWithFutureValue(\\n        bytes32 ccy,\\n        address user,\\n        uint256 basisMaturity,\\n        int256 fvAmount\\n    ) external;\\n\\n    function updateGenesisValueWithResidualAmount(\\n        bytes32 ccy,\\n        address user,\\n        uint256 basisMaturity\\n    ) external;\\n\\n    function lock(\\n        bytes32 ccy,\\n        address user,\\n        uint256 amount\\n    ) external returns (uint256 lockedAmount);\\n\\n    function unlock(bytes32 ccy, address user, uint256 amount) external;\\n\\n    function transferFrom(bytes32 ccy, address sender, address receiver, int256 amount) external;\\n\\n    function cleanUpBalance(bytes32 ccy, address user, uint256 maturity) external;\\n\\n    function executeForcedReset(bytes32 _ccy, address _user) external;\\n\\n    function executeForcedReset(\\n        bytes32 _ccy,\\n        uint256 _maturity,\\n        address _user,\\n        int256 _amountInFV\\n    ) external returns (int256 removedAmount, int256 balance);\\n}\\n\",\"keccak256\":\"0x855588bd02fea39db9288300b2bad88c1c3269d39df73691245b611cc91852ce\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/interfaces/ILendingMarketController.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nimport {ProtocolTypes} from \\\"../types/ProtocolTypes.sol\\\";\\nimport {ZCTokenInfo, TerminationCurrencyCache} from \\\"../storages/LendingMarketControllerStorage.sol\\\";\\n\\ninterface ILendingMarketController {\\n    error InvalidMaturity();\\n    error InvalidCurrency();\\n    error MarketTerminated();\\n    error NotTerminated();\\n    error AlreadyInitialized();\\n\\n    struct AdditionalFunds {\\n        bytes32 ccy;\\n        uint256 workingLendOrdersAmount;\\n        uint256 claimableAmount;\\n        uint256 workingBorrowOrdersAmount;\\n        uint256 debtAmount;\\n        uint256 lentAmount;\\n        uint256 borrowedAmount;\\n    }\\n\\n    struct CalculatedTotalFunds {\\n        uint256 plusDepositAmountInAdditionalFundsCcy;\\n        uint256 minusDepositAmountInAdditionalFundsCcy;\\n        uint256 workingLendOrdersAmount;\\n        uint256 claimableAmount;\\n        uint256 collateralAmount;\\n        uint256 lentAmount;\\n        uint256 workingBorrowOrdersAmount;\\n        uint256 debtAmount;\\n        uint256 borrowedAmount;\\n    }\\n\\n    struct CalculatedFunds {\\n        uint256 workingLendOrdersAmount;\\n        uint256 claimableAmount;\\n        uint256 collateralAmount;\\n        uint256 unallocatedCollateralAmount;\\n        uint256 lentAmount;\\n        uint256 workingBorrowOrdersAmount;\\n        uint256 debtAmount;\\n        uint256 borrowedAmount;\\n    }\\n\\n    struct GetOrderEstimationParams {\\n        bytes32 ccy;\\n        uint256 maturity;\\n        address user;\\n        ProtocolTypes.Side side;\\n        uint256 amount;\\n        uint256 unitPrice;\\n        uint256 additionalDepositAmount;\\n        bool ignoreBorrowedAmount;\\n    }\\n\\n    function isValidMaturity(bytes32 _ccy, uint256 _maturity) external view returns (bool);\\n\\n    function isTerminated() external view returns (bool);\\n\\n    function isRedemptionRequired(address _user) external view returns (bool);\\n\\n    function getMarketBasePeriod() external view returns (uint256);\\n\\n    function getTerminationDate() external view returns (uint256);\\n\\n    function getTerminationCurrencyCache(\\n        bytes32 _ccy\\n    ) external view returns (TerminationCurrencyCache memory);\\n\\n    function getTerminationCollateralRatio(bytes32 _ccy) external view returns (uint256);\\n\\n    function getMinDebtUnitPrice(bytes32 _ccy) external view returns (uint256);\\n\\n    function getCurrentMinDebtUnitPrice(\\n        bytes32 _ccy,\\n        uint256 _maturity\\n    ) external view returns (uint256);\\n\\n    function getGenesisDate(bytes32 ccy) external view returns (uint256);\\n\\n    function getLendingMarket(bytes32 ccy) external view returns (address);\\n\\n    function getFutureValueVault(bytes32 ccy) external view returns (address);\\n\\n    function getOrderBookId(bytes32 _ccy, uint256 _maturity) external view returns (uint8);\\n\\n    function getPendingOrderAmount(bytes32 _ccy, uint256 _maturity) external view returns (uint256);\\n\\n    function getOrderEstimation(\\n        GetOrderEstimationParams calldata params\\n    )\\n        external\\n        view\\n        returns (\\n            uint256 lastUnitPrice,\\n            uint256 filledAmount,\\n            uint256 filledAmountInFV,\\n            uint256 orderFeeInFV,\\n            uint256 placedAmount,\\n            uint256 coverage,\\n            bool isInsufficientDepositAmount\\n        );\\n\\n    function getMaturities(bytes32 ccy) external view returns (uint256[] memory);\\n\\n    function getOrderBookIds(bytes32 ccy) external view returns (uint8[] memory);\\n\\n    function getUsedCurrencies(address user) external view returns (bytes32[] memory);\\n\\n    function getTotalPresentValue(bytes32 ccy, address user) external view returns (int256);\\n\\n    function getTotalPresentValueInBaseCurrency(\\n        address user\\n    ) external view returns (int256 totalPresentValue);\\n\\n    function getGenesisValue(\\n        bytes32 ccy,\\n        address user\\n    ) external view returns (int256 amount, int256 amountInPV, int256 amountInFV);\\n\\n    function getPosition(\\n        bytes32 _ccy,\\n        uint256 _maturity,\\n        address _user\\n    ) external view returns (int256 presentValue, int256 futureValue);\\n\\n    function getZCToken(bytes32 ccy, uint256 maturity) external view returns (address);\\n\\n    function getZCTokenInfo(address zcToken) external view returns (ZCTokenInfo memory);\\n\\n    function getWithdrawableZCTokenAmount(\\n        bytes32 ccy,\\n        uint256 maturity,\\n        address user\\n    ) external view returns (uint256 amount);\\n\\n    function calculateFunds(\\n        bytes32 ccy,\\n        address user,\\n        uint256 liquidationThresholdRate\\n    ) external view returns (CalculatedFunds memory funds);\\n\\n    function calculateTotalFundsInBaseCurrency(\\n        address user,\\n        AdditionalFunds calldata _additionalFunds,\\n        uint256 liquidationThresholdRate\\n    ) external view returns (CalculatedTotalFunds memory calculatedFunds);\\n\\n    function isInitializedLendingMarket(bytes32 ccy) external view returns (bool);\\n\\n    function initializeLendingMarket(\\n        bytes32 ccy,\\n        uint256 genesisDate,\\n        uint256 compoundFactor,\\n        uint256 orderFeeRate,\\n        uint256 circuitBreakerLimitRange,\\n        uint256 minDebtUnitPrice\\n    ) external;\\n\\n    function createOrderBook(bytes32 ccy, uint256 openingDate, uint256 preOpeningDate) external;\\n\\n    function executeOrder(\\n        bytes32 ccy,\\n        uint256 maturity,\\n        ProtocolTypes.Side side,\\n        uint256 amount,\\n        uint256 unitPrice\\n    ) external returns (bool);\\n\\n    function depositAndExecuteOrder(\\n        bytes32 ccy,\\n        uint256 maturity,\\n        ProtocolTypes.Side side,\\n        uint256 amount,\\n        uint256 unitPrice\\n    ) external payable returns (bool);\\n\\n    function depositWithPermitAndExecuteOrder(\\n        bytes32 ccy,\\n        uint256 maturity,\\n        ProtocolTypes.Side side,\\n        uint256 amount,\\n        uint256 unitPrice,\\n        uint256 deadline,\\n        uint8 permitV,\\n        bytes32 permitR,\\n        bytes32 permitS\\n    ) external returns (bool);\\n\\n    function executePreOrder(\\n        bytes32 ccy,\\n        uint256 maturity,\\n        ProtocolTypes.Side side,\\n        uint256 amount,\\n        uint256 unitPrice\\n    ) external returns (bool);\\n\\n    function depositAndExecutesPreOrder(\\n        bytes32 ccy,\\n        uint256 maturity,\\n        ProtocolTypes.Side side,\\n        uint256 amount,\\n        uint256 unitPrice\\n    ) external payable returns (bool);\\n\\n    function depositWithPermitAndExecutePreOrder(\\n        bytes32 _ccy,\\n        uint256 _maturity,\\n        ProtocolTypes.Side _side,\\n        uint256 _amount,\\n        uint256 _unitPrice,\\n        uint256 _deadline,\\n        uint8 _permitV,\\n        bytes32 _permitR,\\n        bytes32 _permitS\\n    ) external returns (bool);\\n\\n    function unwindPosition(bytes32 ccy, uint256 maturity) external returns (bool);\\n\\n    function executeItayoseCall(bytes32 ccy, uint256 maturity) external returns (bool);\\n\\n    function executeRedemption(bytes32 _ccy, uint256 _maturity) external returns (bool);\\n\\n    function executeRepayment(bytes32 _ccy, uint256 _maturity) external returns (bool);\\n\\n    function executeEmergencySettlement() external returns (bool);\\n\\n    function executeLiquidationCall(\\n        bytes32 collateralCcy,\\n        bytes32 debtCcy,\\n        uint256 debtMaturity,\\n        address user\\n    ) external returns (bool);\\n\\n    function executeForcedRepayment(\\n        bytes32 _collateralCcy,\\n        bytes32 _debtCcy,\\n        uint256 _debtMaturity,\\n        address _user\\n    ) external returns (bool);\\n\\n    function cancelOrder(bytes32 ccy, uint256 maturity, uint48 orderId) external returns (bool);\\n\\n    function rotateOrderBooks(bytes32 ccy) external;\\n\\n    function executeEmergencyTermination() external;\\n\\n    function pauseLendingMarket(bytes32 ccy) external returns (bool);\\n\\n    function unpauseLendingMarket(bytes32 ccy) external returns (bool);\\n\\n    function cleanUpAllFunds(address user) external returns (bool);\\n\\n    function cleanUpFunds(bytes32 ccy, address user) external returns (uint256 activeOrderCount);\\n\\n    function updateMinDebtUnitPrice(bytes32 _ccy, uint256 _minDebtUnitPrice) external;\\n\\n    function withdrawZCToken(bytes32 _ccy, uint256 _maturity, uint256 _amount) external;\\n\\n    function depositZCToken(bytes32 _ccy, uint256 _maturity, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0x9463424c1df184681606f105eefb17eea71e17cecf0f93e3fd29fb91def06cd5\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/interfaces/IProxyController.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\ninterface IProxyController {\\n    error InvalidProxyContract();\\n\\n    event ProxyUpdated(\\n        bytes32 indexed id,\\n        address indexed proxyAddress,\\n        address indexed newImplementationAddress,\\n        address oldImplementationAddress\\n    );\\n}\\n\",\"keccak256\":\"0x7c7001be095cb0cec8964fc0332c68b6bb00192b7f8d867a0d77d6e66d637cbe\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/interfaces/IReserveFund.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\ninterface IReserveFund {\\n    event Pause(address account);\\n    event Unpause(address account);\\n\\n    function isPaused() external view returns (bool);\\n\\n    function pause() external;\\n\\n    function unpause() external;\\n\\n    function deposit(bytes32 ccy, uint256 amount) external payable;\\n\\n    function withdraw(bytes32 ccy, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xf201bba61d7527343057038ab254ba2e9b70e355ccfb71143f96068727bece48\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/interfaces/ITokenVault.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nimport {ProtocolTypes} from \\\"../types/ProtocolTypes.sol\\\";\\nimport {ILendingMarketController} from \\\"../interfaces/ILendingMarketController.sol\\\";\\n\\ninterface ITokenVault {\\n    error UnregisteredCurrency();\\n    error InvalidCurrency();\\n    error InvalidToken();\\n    error InvalidAmount(bytes32 ccy, uint256 amount, uint256 msgValue);\\n    error AmountIsZero();\\n    error CallerNotBaseCurrency(address caller);\\n    error MarketTerminated();\\n    error RedemptionIsRequired();\\n\\n    event Deposit(address indexed user, bytes32 ccy, uint256 amount, address caller);\\n    event Withdraw(address indexed user, bytes32 ccy, uint256 amount);\\n    event Transfer(bytes32 indexed ccy, address indexed from, address indexed to, uint256 amount);\\n    event CurrencyRegistered(bytes32 ccy, address tokenAddress, bool isCollateral);\\n    event CurrencyUpdated(bytes32 ccy, bool isCollateral);\\n\\n    function isCovered(\\n        address user,\\n        bytes32 ccy\\n    ) external view returns (bool isEnoughCollateral, bool isEnoughDepositInOrderCcy);\\n\\n    function isCollateral(bytes32 ccy) external view returns (bool);\\n\\n    function isCollateral(bytes32[] calldata ccys) external view returns (bool[] memory);\\n\\n    function isRegisteredCurrency(bytes32 ccy) external view returns (bool);\\n\\n    function getTokenAddress(bytes32 ccy) external view returns (address);\\n\\n    function getCollateralCurrencies() external view returns (bytes32[] memory);\\n\\n    function getWithdrawableCollateral(address user) external view returns (uint256);\\n\\n    function getWithdrawableCollateral(bytes32 ccy, address user) external view returns (uint256);\\n\\n    function getCoverage(address user) external view returns (uint256);\\n\\n    function getTotalUnusedCollateralAmount(address user) external view returns (uint256);\\n\\n    function getTotalCollateralAmount(address user) external view returns (uint256);\\n\\n    function getCollateralDetail(\\n        address user\\n    )\\n        external\\n        view\\n        returns (uint256 totalCollateral, uint256 totalUsedCollateral, uint256 totalDeposit);\\n\\n    function getCollateralAmount(address user, bytes32 ccy) external view returns (uint256);\\n\\n    function getBorrowableAmount(address user, bytes32 ccy) external view returns (uint256);\\n\\n    function getLiquidationAmount(\\n        address user,\\n        bytes32 liquidationCcy,\\n        uint256 liquidationAmountMaximum\\n    ) external view returns (uint256 liquidationAmount, uint256 protocolFee, uint256 liquidatorFee);\\n\\n    function getTotalDepositAmount(bytes32 ccy) external view returns (uint256);\\n\\n    function getDepositAmount(address user, bytes32 ccy) external view returns (uint256);\\n\\n    function getUsedCurrencies(address user) external view returns (bytes32[] memory);\\n\\n    function calculateCoverage(\\n        address user,\\n        ILendingMarketController.AdditionalFunds memory funds\\n    ) external view returns (uint256 coverage, bool isInsufficientDepositAmount);\\n\\n    function calculateLiquidationFees(\\n        uint256 liquidationAmount\\n    ) external view returns (uint256 protocolFee, uint256 liquidatorFee);\\n\\n    function registerCurrency(bytes32 ccy, address tokenAddress, bool isCollateral) external;\\n\\n    function updateCurrency(bytes32 ccy, bool isCollateral) external;\\n\\n    function deposit(bytes32 ccy, uint256 amount) external payable;\\n\\n    function depositTo(bytes32 ccy, uint256 amount, address onBehalfOf) external payable;\\n\\n    function depositFrom(address user, bytes32 ccy, uint256 amount) external payable;\\n\\n    function depositWithPermitTo(\\n        bytes32 ccy,\\n        uint256 amount,\\n        address onBehalfOf,\\n        uint256 deadline,\\n        uint8 permitV,\\n        bytes32 permitR,\\n        bytes32 permitS\\n    ) external;\\n\\n    function depositWithPermitFrom(\\n        address user,\\n        bytes32 ccy,\\n        uint256 amount,\\n        uint256 deadline,\\n        uint8 permitV,\\n        bytes32 permitR,\\n        bytes32 permitS\\n    ) external;\\n\\n    function withdraw(bytes32 ccy, uint256 amount) external;\\n\\n    function addDepositAmount(address user, bytes32 ccy, uint256 amount) external;\\n\\n    function removeDepositAmount(address user, bytes32 ccy, uint256 amount) external;\\n\\n    function cleanUpUsedCurrencies(address user, bytes32 ccy) external;\\n\\n    function executeForcedReset(address user, bytes32 ccy) external returns (uint256 removedAmount);\\n\\n    function transferFrom(\\n        bytes32 ccy,\\n        address sender,\\n        address receiver,\\n        uint256 amount\\n    ) external returns (uint256 untransferredAmount);\\n\\n    function pause() external;\\n\\n    function unpause() external;\\n\\n    function getLiquidationThresholdRate() external view returns (uint256 rate);\\n}\\n\",\"keccak256\":\"0x0d46845175ea03d23c7c2b614483e8c8d26f54f817666ee5e40136737dea490d\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/libraries/AddressResolverLib.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nimport {Contracts} from \\\"../libraries/Contracts.sol\\\";\\nimport {IBeaconProxyController} from \\\"../interfaces/IBeaconProxyController.sol\\\";\\nimport {ICurrencyController} from \\\"../interfaces/ICurrencyController.sol\\\";\\nimport {IGenesisValueVault} from \\\"../interfaces/IGenesisValueVault.sol\\\";\\nimport {ILendingMarketController} from \\\"../interfaces/ILendingMarketController.sol\\\";\\nimport {IReserveFund} from \\\"../interfaces/IReserveFund.sol\\\";\\nimport {ITokenVault} from \\\"../interfaces/ITokenVault.sol\\\";\\nimport {MixinAddressResolverStorage as Storage} from \\\"../storages/mixins/MixinAddressResolverStorage.sol\\\";\\n\\nlibrary AddressResolverLib {\\n    error MissingAddress(string name);\\n\\n    function getAddress(bytes32 name) internal view returns (address) {\\n        address _foundAddress = Storage.slot().addressCache[name];\\n        if (_foundAddress == address(0)) revert MissingAddress(string(abi.encodePacked(name)));\\n        return _foundAddress;\\n    }\\n\\n    function beaconProxyController() internal view returns (IBeaconProxyController) {\\n        return IBeaconProxyController(getAddress(Contracts.BEACON_PROXY_CONTROLLER));\\n    }\\n\\n    function currencyController() internal view returns (ICurrencyController) {\\n        return ICurrencyController(getAddress(Contracts.CURRENCY_CONTROLLER));\\n    }\\n\\n    function genesisValueVault() internal view returns (IGenesisValueVault) {\\n        return IGenesisValueVault(getAddress(Contracts.GENESIS_VALUE_VAULT));\\n    }\\n\\n    function lendingMarketController() internal view returns (ILendingMarketController) {\\n        return ILendingMarketController(getAddress(Contracts.LENDING_MARKET_CONTROLLER));\\n    }\\n\\n    function reserveFund() internal view returns (IReserveFund) {\\n        return IReserveFund(getAddress(Contracts.RESERVE_FUND));\\n    }\\n\\n    function tokenVault() internal view returns (ITokenVault) {\\n        return ITokenVault(getAddress(Contracts.TOKEN_VAULT));\\n    }\\n}\\n\",\"keccak256\":\"0x5cfce5841b4784484d127b5292c3ca0caa167257522e358570d5955656b7a71f\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/libraries/Contracts.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nlibrary Contracts {\\n    bytes32 internal constant BEACON_PROXY_CONTROLLER = \\\"BeaconProxyController\\\";\\n    bytes32 internal constant CURRENCY_CONTROLLER = \\\"CurrencyController\\\";\\n    bytes32 internal constant GENESIS_VALUE_VAULT = \\\"GenesisValueVault\\\";\\n    bytes32 internal constant LENDING_MARKET_CONTROLLER = \\\"LendingMarketController\\\";\\n    bytes32 internal constant RESERVE_FUND = \\\"ReserveFund\\\";\\n    bytes32 internal constant TOKEN_VAULT = \\\"TokenVault\\\";\\n}\\n\\nlibrary BeaconContracts {\\n    bytes32 internal constant FUTURE_VALUE_VAULT = \\\"FutureValueVault\\\";\\n    bytes32 internal constant LENDING_MARKET = \\\"LendingMarket\\\";\\n    bytes32 internal constant ZC_TOKEN = \\\"ZCToken\\\";\\n}\\n\",\"keccak256\":\"0x0e5ed5826808f2caca98c73eb744d0c5774392b9451cf468652938721d210d7c\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/mixins/MixinAddressResolver.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nimport {AddressResolverLib} from \\\"../libraries/AddressResolverLib.sol\\\";\\nimport {IAddressResolver} from \\\"../interfaces/IAddressResolver.sol\\\";\\nimport {IBeaconProxyController} from \\\"../interfaces/IBeaconProxyController.sol\\\";\\nimport {ICurrencyController} from \\\"../interfaces/ICurrencyController.sol\\\";\\nimport {IGenesisValueVault} from \\\"../interfaces/IGenesisValueVault.sol\\\";\\nimport {ILendingMarketController} from \\\"../interfaces/ILendingMarketController.sol\\\";\\nimport {IReserveFund} from \\\"../interfaces/IReserveFund.sol\\\";\\nimport {ITokenVault} from \\\"../interfaces/ITokenVault.sol\\\";\\nimport {MixinAddressResolverStorage as Storage} from \\\"../storages/mixins/MixinAddressResolverStorage.sol\\\";\\n\\ncontract MixinAddressResolver {\\n    event CacheUpdated(bytes32 name, address destination);\\n\\n    error OnlyAcceptedContract(string name);\\n    error ResolverAlreadyRegistered();\\n\\n    modifier onlyLendingMarketController() {\\n        if (msg.sender != address(AddressResolverLib.lendingMarketController()))\\n            revert OnlyAcceptedContract(\\\"LendingMarketController\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Returns the contract names used in this contract.\\n     * @dev The contract name list is in `./libraries/Contracts.sol`.\\n     */\\n    function requiredContracts() public pure virtual returns (bytes32[] memory contracts) {}\\n\\n    function buildCache() public {\\n        // The resolver must call this function whenever it updates its state\\n        bytes32[] memory contractNames = requiredContracts();\\n        for (uint256 i; i < contractNames.length; i++) {\\n            bytes32 name = contractNames[i];\\n            // Note: can only be invoked once the resolver has all the targets needed added\\n            address destination = Storage.slot().resolver.getAddress(\\n                name,\\n                string(abi.encodePacked(\\\"Resolver missing target: \\\", name))\\n            );\\n            Storage.slot().addressCache[name] = destination;\\n            emit CacheUpdated(name, destination);\\n        }\\n    }\\n\\n    function isResolverCached() external view returns (bool) {\\n        bytes32[] memory contractNames = requiredContracts();\\n        for (uint256 i; i < contractNames.length; i++) {\\n            bytes32 name = contractNames[i];\\n            // false if our cache is invalid or if the resolver doesn't have the required address\\n            if (\\n                Storage.slot().resolver.getAddress(name) != Storage.slot().addressCache[name] ||\\n                Storage.slot().addressCache[name] == address(0)\\n            ) {\\n                return false;\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Register the Address Resolver contract\\n     * @param _resolver The address of the Address Resolver contract\\n     */\\n    function registerAddressResolver(address _resolver) internal {\\n        if (address(Storage.slot().resolver) != address(0)) revert ResolverAlreadyRegistered();\\n        Storage.slot().resolver = IAddressResolver(_resolver);\\n    }\\n\\n    function getAddress(bytes32 name) internal view returns (address) {\\n        return AddressResolverLib.getAddress(name);\\n    }\\n\\n    function resolver() public view returns (IAddressResolver) {\\n        return Storage.slot().resolver;\\n    }\\n\\n    function beaconProxyController() internal view returns (IBeaconProxyController) {\\n        return AddressResolverLib.beaconProxyController();\\n    }\\n\\n    function currencyController() internal view returns (ICurrencyController) {\\n        return AddressResolverLib.currencyController();\\n    }\\n\\n    function genesisValueVault() internal view returns (IGenesisValueVault) {\\n        return AddressResolverLib.genesisValueVault();\\n    }\\n\\n    function reserveFund() internal view returns (IReserveFund) {\\n        return AddressResolverLib.reserveFund();\\n    }\\n\\n    function lendingMarketController() internal view returns (ILendingMarketController) {\\n        return AddressResolverLib.lendingMarketController();\\n    }\\n\\n    function tokenVault() internal view returns (ITokenVault) {\\n        return AddressResolverLib.tokenVault();\\n    }\\n}\\n\",\"keccak256\":\"0xd2f09d4b47a54d196ce23a9df1ece821097a9dba7933bbc7c1c05c05e33a660e\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/storages/BeaconProxyControllerStorage.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nlibrary BeaconProxyControllerStorage {\\n    bytes32 internal constant STORAGE_SLOT =\\n        bytes32(uint256(keccak256(\\\"sf.storage.beaconProxyController\\\")) - 1);\\n\\n    struct Storage {\\n        mapping(bytes32 contractName => address contractAddress) registeredBeaconProxies;\\n    }\\n\\n    function slot() internal pure returns (Storage storage r) {\\n        bytes32 _slot = STORAGE_SLOT;\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := _slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x4d155d9e048c6ca8af38ddd7dc6bb7212937b35deb3da751a9367a74ccd5734c\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/storages/CurrencyControllerStorage.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nimport \\\"../../dependencies/chainlink/AggregatorV3Interface.sol\\\";\\nimport \\\"../../dependencies/openzeppelin/utils/structs/EnumerableSet.sol\\\";\\n\\nstruct PriceFeed {\\n    AggregatorV3Interface[] instances;\\n    uint256[] heartbeats;\\n}\\n\\nlibrary CurrencyControllerStorage {\\n    using EnumerableSet for EnumerableSet.Bytes32Set;\\n\\n    bytes32 internal constant STORAGE_SLOT =\\n        bytes32(uint256(keccak256(\\\"sf.storage.currencyController\\\")) - 1);\\n\\n    struct Storage {\\n        // Protocol currencies\\n        EnumerableSet.Bytes32Set currencies;\\n        mapping(bytes32 ccy => uint256 haircut) haircuts;\\n        // Total cached decimals of the price feeds\\n        mapping(bytes32 ccy => uint8 decimals) decimalsCaches;\\n        mapping(bytes32 ccy => PriceFeed priceFeed) priceFeeds;\\n    }\\n\\n    function slot() internal pure returns (Storage storage r) {\\n        bytes32 _slot = STORAGE_SLOT;\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := _slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5485fa8fc79ac418525aed23300dd0111ecb5403121104ad6bb09d196c8e82f5\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/storages/GenesisValueVaultStorage.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nstruct MaturityUnitPrice {\\n    uint256 unitPrice;\\n    uint256 compoundFactor;\\n    uint256 next;\\n    uint256 prev;\\n}\\n\\nstruct AutoRollLog {\\n    uint256 unitPrice;\\n    uint256 lendingCompoundFactor;\\n    uint256 borrowingCompoundFactor;\\n    uint256 next;\\n    uint256 prev;\\n}\\n\\nlibrary GenesisValueVaultStorage {\\n    bytes32 internal constant STORAGE_SLOT =\\n        bytes32(uint256(keccak256(\\\"sf.storage.genesisValueVault\\\")) - 1);\\n\\n    struct Storage {\\n        mapping(bytes32 ccy => bool isInitialized) isInitialized;\\n        mapping(bytes32 ccy => uint256 compoundFactor) initialCompoundFactors;\\n        mapping(bytes32 ccy => uint256 compoundFactor) lendingCompoundFactors;\\n        mapping(bytes32 ccy => uint256 compoundFactor) borrowingCompoundFactors;\\n        mapping(bytes32 ccy => uint256 maturity) currentMaturity;\\n        mapping(bytes32 ccy => uint8 decimals) decimals;\\n        mapping(bytes32 ccy => mapping(address user => int256 balance)) balances;\\n        mapping(bytes32 ccy => uint256 amount) totalLendingSupplies;\\n        mapping(bytes32 ccy => uint256 amount) totalBorrowingSupplies;\\n        // Total amount supplied per maturity\\n        mapping(bytes32 ccy => mapping(uint256 maturity => int256 balance)) maturityBalances;\\n        mapping(bytes32 ccy => mapping(uint256 maturity => AutoRollLog log)) autoRollLogs;\\n        // Maturity when the user receives the balance on the target currency\\n        mapping(bytes32 ccy => mapping(address user => uint256 maturity)) userMaturities;\\n        mapping(bytes32 ccy => uint256 balance) totalLockedBalances;\\n    }\\n\\n    function slot() internal pure returns (Storage storage r) {\\n        bytes32 _slot = STORAGE_SLOT;\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := _slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xda77d523b56fbba23ad00d3583a83a829bd715c710f197ba62712fb60ee1dac2\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/storages/LendingMarketControllerStorage.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nimport \\\"../../dependencies/openzeppelin/utils/structs/EnumerableSet.sol\\\";\\n\\nstruct ObservationPeriodLog {\\n    uint256 totalAmount;\\n    uint256 totalFutureValue;\\n}\\n\\nstruct TerminationCurrencyCache {\\n    int256 price;\\n    uint8 decimals;\\n}\\n\\nstruct ZCTokenInfo {\\n    bytes32 ccy;\\n    uint256 maturity;\\n}\\n\\nlibrary LendingMarketControllerStorage {\\n    using EnumerableSet for EnumerableSet.Bytes32Set;\\n    using EnumerableSet for EnumerableSet.UintSet;\\n\\n    bytes32 internal constant STORAGE_SLOT =\\n        bytes32(uint256(keccak256(\\\"sf.storage.lendingMarketController\\\")) - 1);\\n\\n    struct Storage {\\n        uint256 marketBasePeriod;\\n        uint256 terminationDate;\\n        mapping(bytes32 ccy => TerminationCurrencyCache currency) terminationCurrencyCaches;\\n        mapping(bytes32 ccy => uint256 ratio) terminationCollateralRatios;\\n        mapping(bytes32 ccy => uint8[] orderBookIds) orderBookIdLists;\\n        mapping(bytes32 ccy => address lendingMarket) lendingMarkets;\\n        mapping(bytes32 ccy => address futureValueVault) futureValueVaults;\\n        mapping(bytes32 ccy => uint256 unitPrice) minDebtUnitPrices;\\n        mapping(bytes32 ccy => uint256 genesisDate) genesisDates;\\n        mapping(bytes32 ccy => mapping(uint256 maturity => uint256 amount)) pendingOrderAmounts;\\n        // Order book id history to get order book id from maturity\\n        mapping(bytes32 ccy => mapping(uint256 maturity => uint8 orderBookIds)) maturityOrderBookIds;\\n        // List of maturity that the user has open orders or positions\\n        mapping(bytes32 ccy => mapping(address user => EnumerableSet.UintSet maturities)) usedMaturities;\\n        // Observation period logs that is used for auto-rolls\\n        mapping(bytes32 ccy => mapping(uint256 maturity => ObservationPeriodLog log)) observationPeriodLogs;\\n        // List of currency that the user has open orders or positions\\n        mapping(address user => EnumerableSet.Bytes32Set currency) usedCurrencies;\\n        mapping(address user => bool isRedeemed) isRedeemed;\\n        mapping(bytes32 ccy => mapping(uint256 maturity => address token)) zcTokens;\\n        mapping(address token => ZCTokenInfo) zcTokenInfo;\\n    }\\n\\n    function slot() internal pure returns (Storage storage r) {\\n        bytes32 _slot = STORAGE_SLOT;\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := _slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf8811a19e2f51e3fc813292c1ff80d2f24e7951c3c377da84c5f005a8197b07f\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/storages/mixins/MixinAddressResolverStorage.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nimport {IAddressResolver} from \\\"../../interfaces/IAddressResolver.sol\\\";\\n\\nlibrary MixinAddressResolverStorage {\\n    bytes32 internal constant STORAGE_SLOT =\\n        bytes32(uint256(keccak256(\\\"sf.storage.mixinAddressResolver\\\")) - 1);\\n\\n    struct Storage {\\n        IAddressResolver resolver;\\n        mapping(bytes32 contractName => address contractAddress) addressCache;\\n    }\\n\\n    function slot() internal pure returns (Storage storage r) {\\n        bytes32 _slot = STORAGE_SLOT;\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := _slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5663ed356830b742d6f13379afdd7d041ae71e13ad2ea64d8d63ca9e6ef8ab75\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/storages/utils/OwnableStorage.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nlibrary OwnableStorage {\\n    bytes32 internal constant STORAGE_SLOT = bytes32(uint256(keccak256(\\\"sf.storage.ownable\\\")) - 1);\\n\\n    struct Storage {\\n        address owner;\\n    }\\n\\n    function slot() internal pure returns (Storage storage r) {\\n        bytes32 _slot = STORAGE_SLOT;\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := _slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x98130c4c3d0014744b194e179bd65b8b7e73cac9cd33a470d194072e1a06b94e\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/types/ProtocolTypes.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\n/**\\n * @dev ProtocolTypes is a base-level contract that holds common Secured Finance protocol types\\n * @author Secured Finance\\n */\\nlibrary ProtocolTypes {\\n    enum Side {\\n        LEND,\\n        BORROW\\n    }\\n}\\n\",\"keccak256\":\"0x409169980b48b1bd32af609ac7b90f5c29e064cbec3d83d81767d72192ba07a2\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/utils/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"../../dependencies/openzeppelin/utils/Context.sol\\\";\\nimport \\\"../storages/utils/OwnableStorage.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return OwnableStorage.slot().owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = OwnableStorage.slot().owner;\\n        OwnableStorage.slot().owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xd735ea20ce4e86d574ab372eb79a46510c7be3b12b62f3948bb68dd2bea710ff\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/utils/Proxyable.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nimport \\\"../../dependencies/openzeppelin/utils/StorageSlot.sol\\\";\\nimport \\\"../../dependencies/openzeppelin/proxy/utils/Initializable.sol\\\";\\n\\nabstract contract Proxyable is Initializable {\\n    bytes32 internal constant _IMPLEMENTATION_SLOT =\\n        0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n    bytes32 internal constant _BEACON_SLOT =\\n        0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    modifier onlyProxy() {\\n        require(_getImplementation() != address(0), \\\"Must be called from proxy contract\\\");\\n        _;\\n    }\\n\\n    modifier onlyBeacon() {\\n        require(_getBeacon() != address(0), \\\"Must be called from beacon contract\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Gets the revision number of the contract\\n     * @return The revision number\\n     */\\n    function getRevision() external pure virtual returns (uint256) {\\n        return 0x1;\\n    }\\n\\n    function _getImplementation() private view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n}\\n\",\"keccak256\":\"0x9a8871621917fe5a0c7175217c5504dab4f935612dff0dadaff62c2d4da87412\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/utils/UpgradeabilityBeaconProxy.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.19;\\n\\nimport \\\"../../dependencies/openzeppelin/proxy/beacon/BeaconProxy.sol\\\";\\n\\ncontract UpgradeabilityBeaconProxy is BeaconProxy {\\n    constructor(address _beacon, bytes memory _data) payable BeaconProxy(_beacon, _data) {\\n        _changeAdmin(msg.sender);\\n    }\\n\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeTo(newImplementation);\\n    }\\n\\n    function changeAdmin(address newAdmin) external ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    function admin() external view returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    function implementation() external view returns (address) {\\n        return BeaconProxy._implementation();\\n    }\\n}\\n\",\"keccak256\":\"0x94528a7f56059a32e931e3371c5471dbbb9e83964eac8cdd94609b7f015445c4\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/utils/UpgradeableBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n// Based on OpenZeppelin Contracts v4.4.1 (proxy/beacon/UpgradeableBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Ownable.sol\\\";\\nimport \\\"../../dependencies/openzeppelin/proxy/beacon/IBeacon.sol\\\";\\nimport \\\"../../dependencies/openzeppelin/utils/Address.sol\\\";\\n\\n/**\\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\\n * implementation contract, which is where they will delegate all function calls.\\n *\\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\\n */\\ncontract UpgradeableBeacon is IBeacon, Ownable {\\n    address private _implementation;\\n\\n    /**\\n     * @dev Emitted when the implementation returned by the beacon is changed.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\\n     * beacon.\\n     */\\n    constructor(address implementation_) {\\n        _transferOwnership(msg.sender);\\n        _setImplementation(implementation_);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function implementation() public view virtual override returns (address) {\\n        return _implementation;\\n    }\\n\\n    /**\\n     * @dev Upgrades the beacon to a new implementation.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * Requirements:\\n     *\\n     * - msg.sender must be the owner of the contract.\\n     * - `newImplementation` must be a contract.\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Sets the implementation contract address for this beacon\\n     *\\n     * Requirements:\\n     *\\n     * - `newImplementation` must be a contract.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(\\n            Address.isContract(newImplementation),\\n            \\\"UpgradeableBeacon: implementation is not a contract\\\"\\n        );\\n        _implementation = newImplementation;\\n    }\\n}\\n\",\"keccak256\":\"0xc174681827dfc3203a157d8ac34f07afdae73c945c06c891810d1c1820556888\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612c97806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200012d5760003560e01c8063715018a611620000af578063a97c4b53116200007a578063a97c4b531462000247578063ac9650d81462000251578063e03b525b1462000277578063f2fde38b146200028e578063f541c92a14620002a557600080fd5b8063715018a614620002055780637c35befe146200020f5780638077959214620002265780638da5cb5b146200023d57600080fd5b80632af64bd311620000fc5780632af64bd3146200018c5780633d03b9da14620001a75780634672758f14620001c0578063485cc95514620001d75780636bce0a2a14620001ee57600080fd5b806304707844146200013257806304f3bcec146200014b5780631316529d146200017257806329985e5a1462000182575b600080fd5b6200014962000143366004620014d0565b620002bc565b005b6200015562000319565b6040516001600160a01b0390911681526020015b60405180910390f35b6040516001815260200162000169565b6200014962000334565b62000196620004bf565b604051901515815260200162000169565b620001b162000605565b604051620001699190620014f0565b62000155620001d136600462001536565b62000667565b62000149620001e836600462001563565b6200072f565b62000149620001ff366004620015f0565b620008c6565b62000149620009b2565b6200015562000220366004620016f6565b620009f4565b620001556200023736600462001797565b62000aa9565b6200015562000b92565b6200015562000b9e565b6200026862000262366004620017b1565b62000c51565b6040516200016991906200184b565b6200014962000288366004620014d0565b62000d5a565b620001496200029f366004620014d0565b62000da4565b62000149620002b6366004620014d0565b62000e4d565b33620002c762000b92565b6001600160a01b031614620002f95760405162461bcd60e51b8152600401620002f090620018b1565b60405180910390fd5b620003156c13195b991a5b99d3585c9ad95d609a1b8262000e9b565b5050565b60006200032562001095565b546001600160a01b0316919050565b60006200034062000605565b905060005b815181101562000315576000828281518110620003665762000366620018e6565b6020026020010151905060006200037c62001095565b54604080517f5265736f6c766572206d697373696e67207461726765743a200000000000000060208201526039808201869052825180830390910181526059820192839052636795dbcd60e01b9092526001600160a01b0390921691636795dbcd91620003ef91869190605d01620018fc565b602060405180830381865afa1580156200040d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000433919062001917565b9050806200044062001095565b6000848152600191909101602090815260409182902080546001600160a01b0319166001600160a01b039485161790558151858152928416908301527f88a93678a3692f6789d9546fc621bf7234b101ddb7d4fe479455112831b8aa68910160405180910390a150508080620004b6906200194d565b91505062000345565b600080620004cc62000605565b905060005b8151811015620005fc576000828281518110620004f257620004f2620018e6565b602002602001015190506200050662001095565b600082815260019190910160205260409020546001600160a01b03166200052c62001095565b546040516321f8a72160e01b8152600481018490526001600160a01b03909116906321f8a72190602401602060405180830381865afa15801562000574573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200059a919062001917565b6001600160a01b0316141580620005d657506000620005b862001095565b600083815260019190910160205260409020546001600160a01b0316145b15620005e6576000935050505090565b5080620005f3816200194d565b915050620004d1565b50600191505090565b60408051600180825281830190925260609160208083019080368337019050509050762632b73234b733a6b0b935b2ba21b7b73a3937b63632b960491b81600081518110620006585762000658620018e6565b60200260200101818152505090565b600062000673620010c5565b6001600160a01b0316336001600160a01b031614620006a757604051637b3f42c160e01b8152600401620002f09062001969565b6000620006b362000319565b6040516001600160a01b03909116602482015260448101869052606481018590526084810184905260a40160408051601f198184030181529190526020810180516001600160e01b031663b7c1d52760e01b1790529050620007266c13195b991a5b99d3585c9ad95d609a1b82620010f1565b95945050505050565b600054610100900460ff1615808015620007505750600054600160ff909116105b806200076c5750303b1580156200076c575060005460ff166001145b620007d15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620002f0565b6000805460ff191660011790558015620007f5576000805461ff0019166101001790555b6000620008016200117b565b6001600160a01b031603620008645760405162461bcd60e51b815260206004820152602260248201527f4d7573742062652063616c6c65642066726f6d2070726f787920636f6e74726160448201526118dd60f21b6064820152608401620002f0565b6200086f83620011a4565b6200087a8262001215565b8015620008c1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b33620008d162000b92565b6001600160a01b031614620008fa5760405162461bcd60e51b8152600401620002f090620018b1565b60005b81811015620009ac5760008383838181106200091d576200091d620018e6565b9050602002016020810190620009349190620014d0565b6040516308f2839760e41b81526001600160a01b03878116600483015291925090821690638f28397090602401600060405180830381600087803b1580156200097c57600080fd5b505af115801562000991573d6000803e3d6000fd5b50505050508080620009a3906200194d565b915050620008fd565b50505050565b33620009bd62000b92565b6001600160a01b031614620009e65760405162461bcd60e51b8152600401620002f090620018b1565b620009f26000620011a4565b565b600062000a00620010c5565b6001600160a01b0316336001600160a01b03161462000a3457604051637b3f42c160e01b8152600401620002f09062001969565b600062000a4062000319565b878787878760405160240162000a5c969594939291906200199a565b60408051601f198184030181529190526020810180516001600160e01b031663966dfcab60e01b179052905062000a9e662d21aa37b5b2b760c91b82620010f1565b979650505050505050565b600062000ab562001276565b600083815260209190915260409020546001600160a01b031690508062000aef576040516305e3dbc560e51b815260040160405180910390fd5b600081905060006001600160a01b0316816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000b3e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b64919062001917565b6001600160a01b03160362000b8c576040516304123fed60e51b815260040160405180910390fd5b50919050565b600062000325620012a6565b600062000baa620010c5565b6001600160a01b0316336001600160a01b03161462000bde57604051637b3f42c160e01b8152600401620002f09062001969565b600062000bea62000319565b6040516001600160a01b03909116602482015260440160408051601f198184030181529190526020810180516001600160e01b031663189acdbd60e31b179052905062000c4b6f119d5d1d5c9955985b1d5955985d5b1d60821b82620010f1565b91505090565b60608167ffffffffffffffff81111562000c6f5762000c6f6200164b565b60405190808252806020026020018201604052801562000ca457816020015b606081526020019060019003908162000c8e5790505b50905060005b8281101562000d525762000d1c3085858481811062000ccd5762000ccd620018e6565b905060200281019062000ce19190620019f3565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250620012d692505050565b82828151811062000d315762000d31620018e6565b6020026020010181905250808062000d49906200194d565b91505062000caa565b505b92915050565b3362000d6562000b92565b6001600160a01b03161462000d8e5760405162461bcd60e51b8152600401620002f090620018b1565b62000315662d21aa37b5b2b760c91b8262000e9b565b3362000daf62000b92565b6001600160a01b03161462000dd85760405162461bcd60e51b8152600401620002f090620018b1565b6001600160a01b03811662000e3f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620002f0565b62000e4a81620011a4565b50565b3362000e5862000b92565b6001600160a01b03161462000e815760405162461bcd60e51b8152600401620002f090620018b1565b620003156f119d5d1d5c9955985b1d5955985d5b1d60821b825b600062000ea762001276565b600084815260209190915260408120546001600160a01b031691508162000f7c578260405162000ed7906200149e565b6001600160a01b039091168152602001604051809103906000f08015801562000f04573d6000803e3d6000fd5b5090508091508162000f1562001276565b60008681526020918252604080822080546001600160a01b0319166001600160a01b03958616179055519081528583169285169187917fd1beadd7ba3c8b48046a052671c2a5c0ebb8063834cd8035aaf3da097d85111a910160405180910390a462000d52565b8190506000816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000fc0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fe6919062001917565b604051631b2ce7f360e11b81526001600160a01b03868116600483015291925090831690633659cfe690602401600060405180830381600087803b1580156200102e57600080fd5b505af115801562001043573d6000803e3d6000fd5b50506040516001600160a01b03848116825280881693508616915087907fd1beadd7ba3c8b48046a052671c2a5c0ebb8063834cd8035aaf3da097d85111a9060200160405180910390a4505092915050565b60008062000d5460017f4abde63c3e81aefa5764b017968bc473e83e093d7e1a10247d19e0a3e412401862001a3d565b6000620010ec762632b73234b733a6b0b935b2ba21b7b73a3937b63632b960491b62001305565b905090565b600080620010fe62001276565b600085815260209190915260409020546001600160a01b031690508062001138576040516305e3dbc560e51b815260040160405180910390fd5b80836040516200114890620014ac565b6200115592919062001a53565b604051809103906000f08015801562001172573d6000803e3d6000fd5b50949350505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc62000325565b6000620011b0620012a6565b546001600160a01b0316905081620011c7620012a6565b80546001600160a01b0319166001600160a01b03928316179055604051838216918316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006200122162001095565b546001600160a01b0316146200124a576040516304b79d6360e51b815260040160405180910390fd5b806200125562001095565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60008062000d5460017fd25af282180dbd50d3ba79f291b857e1b411793b87e22e0b91e41df4deff13a962001a3d565b60008062000d5460017f9acda75aebd150dd434541a4747a6dc606f4f1a59662477e67daf1fc0bf9e0aa62001a3d565b6060620012fe838360405180606001604052806027815260200162002c3b602791396200136b565b9392505050565b6000806200131262001095565b600084815260019190910160205260409020546001600160a01b031690508062000d545760408051602081018590520160408051601f19818403018152908290526346e2ec9360e01b8252620002f09160040162001a79565b6060600080856001600160a01b0316856040516200138a919062001a8e565b600060405180830381855af49150503d8060008114620013c7576040519150601f19603f3d011682016040523d82523d6000602084013e620013cc565b606091505b5091509150620013df86838387620013e9565b9695505050505050565b606083156200145d57825160000362001455576001600160a01b0385163b620014555760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620002f0565b508162001469565b62001469838362001471565b949350505050565b815115620014825781518083602001fd5b8060405162461bcd60e51b8152600401620002f0919062001a79565b6106068062001aad83390190565b610b8880620020b383390190565b6001600160a01b038116811462000e4a57600080fd5b600060208284031215620014e357600080fd5b8135620012fe81620014ba565b6020808252825182820181905260009190848201906040850190845b818110156200152a578351835292840192918401916001016200150c565b50909695505050505050565b6000806000606084860312156200154c57600080fd5b505081359360208301359350604090920135919050565b600080604083850312156200157757600080fd5b82356200158481620014ba565b915060208301356200159681620014ba565b809150509250929050565b60008083601f840112620015b457600080fd5b50813567ffffffffffffffff811115620015cd57600080fd5b6020830191508360208260051b8501011115620015e957600080fd5b9250929050565b6000806000604084860312156200160657600080fd5b83356200161381620014ba565b9250602084013567ffffffffffffffff8111156200163057600080fd5b6200163e86828701620015a1565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200167357600080fd5b813567ffffffffffffffff808211156200169157620016916200164b565b604051601f8301601f19908116603f01168101908282118183101715620016bc57620016bc6200164b565b81604052838152866020858801011115620016d657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156200170f57600080fd5b853567ffffffffffffffff808211156200172857600080fd5b6200173689838a0162001661565b965060208801359150808211156200174d57600080fd5b506200175c8882890162001661565b945050604086013560ff811681146200177457600080fd5b925060608601356200178681620014ba565b949793965091946080013592915050565b600060208284031215620017aa57600080fd5b5035919050565b60008060208385031215620017c557600080fd5b823567ffffffffffffffff811115620017dd57600080fd5b620017eb85828601620015a1565b90969095509350505050565b60005b8381101562001814578181015183820152602001620017fa565b50506000910152565b6000815180845262001837816020860160208601620017f7565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620018a457603f19888603018452620018918583516200181d565b9450928501929085019060010162001872565b5092979650505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b8281526040602082015260006200146960408301846200181d565b6000602082840312156200192a57600080fd5b8151620012fe81620014ba565b634e487b7160e01b600052601160045260246000fd5b60006001820162001962576200196262001937565b5060010190565b6020808252601790820152762632b73234b733a6b0b935b2ba21b7b73a3937b63632b960491b604082015260600190565b600060018060a01b03808916835260c06020840152620019be60c08401896200181d565b8381036040850152620019d281896200181d565b60ff9790971660608501525093909316608082015260a00152509392505050565b6000808335601e1984360301811262001a0b57600080fd5b83018035915067ffffffffffffffff82111562001a2757600080fd5b602001915036819003821315620015e957600080fd5b8181038181111562000d545762000d5462001937565b6001600160a01b038316815260406020820181905260009062001469908301846200181d565b602081526000620012fe60208301846200181d565b6000825162001aa2818460208701620017f7565b919091019291505056fe608060405234801561001057600080fd5b5060405161060638038061060683398101604081905261002f9161018b565b61003833610047565b610041816100b4565b506101dc565b6000610051610157565b546001600160a01b0316905081610066610157565b80546001600160a01b0319166001600160a01b03928316179055604051838216918316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381163b6101355760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008061018560017f9acda75aebd150dd434541a4747a6dc606f4f1a59662477e67daf1fc0bf9e0aa6101bb565b92915050565b60006020828403121561019d57600080fd5b81516001600160a01b03811681146101b457600080fd5b9392505050565b8181038181111561018557634e487b7160e01b600052601160045260246000fd5b61041b806101eb6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100aa575b600080fd5b61006f61006a36600461035f565b6100bd565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610135565b61007e610170565b61006f6100b836600461035f565b610189565b336100c6610170565b6001600160a01b0316146100f55760405162461bcd60e51b81526004016100ec9061038f565b60405180910390fd5b6100fe81610229565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b3361013e610170565b6001600160a01b0316146101645760405162461bcd60e51b81526004016100ec9061038f565b61016e60006102be565b565b600061017a61032b565b546001600160a01b0316919050565b33610192610170565b6001600160a01b0316146101b85760405162461bcd60e51b81526004016100ec9061038f565b6001600160a01b03811661021d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ec565b610226816102be565b50565b6001600160a01b0381163b61029c5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100ec565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006102c861032b565b546001600160a01b03169050816102dd61032b565b80546001600160a01b0319166001600160a01b03928316179055604051838216918316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008061035960017f9acda75aebd150dd434541a4747a6dc606f4f1a59662477e67daf1fc0bf9e0aa6103c4565b92915050565b60006020828403121561037157600080fd5b81356001600160a01b038116811461038857600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8181038181111561035957634e487b7160e01b600052601160045260246000fdfea2646970667358221220f02c14aba19266da4bc7a522826a1c0f1d36778a7711ffcda8db59802cde044864736f6c63430008130033608060405260405162000b8838038062000b88833981016040819052620000269162000550565b818162000036828260006200004c565b506200004490503362000116565b50506200068f565b620000578362000188565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a2600082511180620000995750805b1562000111576200010f836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010891906200061e565b8362000316565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200015860008051602062000b41833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a1620001858162000345565b50565b6001600160a01b0381163b620001f35760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6200026b816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000236573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200025c91906200061e565b6001600160a01b03163b151590565b620002d25760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401620001ea565b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606200033e838360405180606001604052806027815260200162000b6160279139620003c3565b9392505050565b6001600160a01b038116620003ac5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608401620001ea565b8060008051602062000b41833981519152620002f5565b6060600080856001600160a01b031685604051620003e291906200063c565b600060405180830381855af49150503d80600081146200041f576040519150601f19603f3d011682016040523d82523d6000602084013e62000424565b606091505b509092509050620004388683838762000442565b9695505050505050565b60608315620004b6578251600003620004ae576001600160a01b0385163b620004ae5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620001ea565b5081620004c2565b620004c28383620004ca565b949350505050565b815115620004db5781518083602001fd5b8060405162461bcd60e51b8152600401620001ea91906200065a565b80516001600160a01b03811681146200050f57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620005475781810151838201526020016200052d565b50506000910152565b600080604083850312156200056457600080fd5b6200056f83620004f7565b60208401519092506001600160401b03808211156200058d57600080fd5b818501915085601f830112620005a257600080fd5b815181811115620005b757620005b762000514565b604051601f8201601f19908116603f01168101908382118183101715620005e257620005e262000514565b81604052828152886020848701011115620005fc57600080fd5b6200060f8360208301602088016200052a565b80955050505050509250929050565b6000602082840312156200063157600080fd5b6200033e82620004f7565b60008251620006508184602087016200052a565b9190910192915050565b60208152600082518060208401526200067b8160408501602087016200052a565b601f01601f19169190910160400192915050565b6104a2806200069f6000396000f3fe6080604052600436106100435760003560e01c80633659cfe61461005a5780635c60da1b1461007a5780638f283970146100ab578063f851a440146100cb57610052565b36610052576100506100e0565b005b6100506100e0565b34801561006657600080fd5b5061005061007536600461042b565b6100f2565b34801561008657600080fd5b5061008f61011d565b6040516001600160a01b03909116815260200160405180910390f35b3480156100b757600080fd5b506100506100c636600461042b565b61012c565b3480156100d757600080fd5b5061008f61014c565b6100f06100eb610156565b6101c1565b565b6100fa6101e5565b6001600160a01b031633036101155761011281610218565b50565b6101126100e0565b6000610127610156565b905090565b6101346101e5565b6001600160a01b031633036101155761011281610258565b60006101276101e5565b60006101606102ac565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561019d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610127919061044f565b3660008037600080366000845af43d6000803e8080156101e0573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b610221816102d4565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6102816101e5565b604080516001600160a01b03928316815291841660208301520160405180910390a16101128161038a565b60007fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50610209565b6001600160a01b0381163b6103465760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b0381166103ef5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b606482015260840161033d565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103610369565b6001600160a01b038116811461011257600080fd5b60006020828403121561043d57600080fd5b813561044881610416565b9392505050565b60006020828403121561046157600080fd5b81516104488161041656fea26469706673582212204e62bddcb8f6e0fda8d8f39f3a9f6853fd3da1fe787ae5fd82bdef44524fae0c64736f6c63430008130033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220288f25575c1271827e39ce2ddaf09ed8f5135ee7ea03f7aa91d5fe5cb414c2eb64736f6c63430008130033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200012d5760003560e01c8063715018a611620000af578063a97c4b53116200007a578063a97c4b531462000247578063ac9650d81462000251578063e03b525b1462000277578063f2fde38b146200028e578063f541c92a14620002a557600080fd5b8063715018a614620002055780637c35befe146200020f5780638077959214620002265780638da5cb5b146200023d57600080fd5b80632af64bd311620000fc5780632af64bd3146200018c5780633d03b9da14620001a75780634672758f14620001c0578063485cc95514620001d75780636bce0a2a14620001ee57600080fd5b806304707844146200013257806304f3bcec146200014b5780631316529d146200017257806329985e5a1462000182575b600080fd5b6200014962000143366004620014d0565b620002bc565b005b6200015562000319565b6040516001600160a01b0390911681526020015b60405180910390f35b6040516001815260200162000169565b6200014962000334565b62000196620004bf565b604051901515815260200162000169565b620001b162000605565b604051620001699190620014f0565b62000155620001d136600462001536565b62000667565b62000149620001e836600462001563565b6200072f565b62000149620001ff366004620015f0565b620008c6565b62000149620009b2565b6200015562000220366004620016f6565b620009f4565b620001556200023736600462001797565b62000aa9565b6200015562000b92565b6200015562000b9e565b6200026862000262366004620017b1565b62000c51565b6040516200016991906200184b565b6200014962000288366004620014d0565b62000d5a565b620001496200029f366004620014d0565b62000da4565b62000149620002b6366004620014d0565b62000e4d565b33620002c762000b92565b6001600160a01b031614620002f95760405162461bcd60e51b8152600401620002f090620018b1565b60405180910390fd5b620003156c13195b991a5b99d3585c9ad95d609a1b8262000e9b565b5050565b60006200032562001095565b546001600160a01b0316919050565b60006200034062000605565b905060005b815181101562000315576000828281518110620003665762000366620018e6565b6020026020010151905060006200037c62001095565b54604080517f5265736f6c766572206d697373696e67207461726765743a200000000000000060208201526039808201869052825180830390910181526059820192839052636795dbcd60e01b9092526001600160a01b0390921691636795dbcd91620003ef91869190605d01620018fc565b602060405180830381865afa1580156200040d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000433919062001917565b9050806200044062001095565b6000848152600191909101602090815260409182902080546001600160a01b0319166001600160a01b039485161790558151858152928416908301527f88a93678a3692f6789d9546fc621bf7234b101ddb7d4fe479455112831b8aa68910160405180910390a150508080620004b6906200194d565b91505062000345565b600080620004cc62000605565b905060005b8151811015620005fc576000828281518110620004f257620004f2620018e6565b602002602001015190506200050662001095565b600082815260019190910160205260409020546001600160a01b03166200052c62001095565b546040516321f8a72160e01b8152600481018490526001600160a01b03909116906321f8a72190602401602060405180830381865afa15801562000574573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200059a919062001917565b6001600160a01b0316141580620005d657506000620005b862001095565b600083815260019190910160205260409020546001600160a01b0316145b15620005e6576000935050505090565b5080620005f3816200194d565b915050620004d1565b50600191505090565b60408051600180825281830190925260609160208083019080368337019050509050762632b73234b733a6b0b935b2ba21b7b73a3937b63632b960491b81600081518110620006585762000658620018e6565b60200260200101818152505090565b600062000673620010c5565b6001600160a01b0316336001600160a01b031614620006a757604051637b3f42c160e01b8152600401620002f09062001969565b6000620006b362000319565b6040516001600160a01b03909116602482015260448101869052606481018590526084810184905260a40160408051601f198184030181529190526020810180516001600160e01b031663b7c1d52760e01b1790529050620007266c13195b991a5b99d3585c9ad95d609a1b82620010f1565b95945050505050565b600054610100900460ff1615808015620007505750600054600160ff909116105b806200076c5750303b1580156200076c575060005460ff166001145b620007d15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620002f0565b6000805460ff191660011790558015620007f5576000805461ff0019166101001790555b6000620008016200117b565b6001600160a01b031603620008645760405162461bcd60e51b815260206004820152602260248201527f4d7573742062652063616c6c65642066726f6d2070726f787920636f6e74726160448201526118dd60f21b6064820152608401620002f0565b6200086f83620011a4565b6200087a8262001215565b8015620008c1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b33620008d162000b92565b6001600160a01b031614620008fa5760405162461bcd60e51b8152600401620002f090620018b1565b60005b81811015620009ac5760008383838181106200091d576200091d620018e6565b9050602002016020810190620009349190620014d0565b6040516308f2839760e41b81526001600160a01b03878116600483015291925090821690638f28397090602401600060405180830381600087803b1580156200097c57600080fd5b505af115801562000991573d6000803e3d6000fd5b50505050508080620009a3906200194d565b915050620008fd565b50505050565b33620009bd62000b92565b6001600160a01b031614620009e65760405162461bcd60e51b8152600401620002f090620018b1565b620009f26000620011a4565b565b600062000a00620010c5565b6001600160a01b0316336001600160a01b03161462000a3457604051637b3f42c160e01b8152600401620002f09062001969565b600062000a4062000319565b878787878760405160240162000a5c969594939291906200199a565b60408051601f198184030181529190526020810180516001600160e01b031663966dfcab60e01b179052905062000a9e662d21aa37b5b2b760c91b82620010f1565b979650505050505050565b600062000ab562001276565b600083815260209190915260409020546001600160a01b031690508062000aef576040516305e3dbc560e51b815260040160405180910390fd5b600081905060006001600160a01b0316816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000b3e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b64919062001917565b6001600160a01b03160362000b8c576040516304123fed60e51b815260040160405180910390fd5b50919050565b600062000325620012a6565b600062000baa620010c5565b6001600160a01b0316336001600160a01b03161462000bde57604051637b3f42c160e01b8152600401620002f09062001969565b600062000bea62000319565b6040516001600160a01b03909116602482015260440160408051601f198184030181529190526020810180516001600160e01b031663189acdbd60e31b179052905062000c4b6f119d5d1d5c9955985b1d5955985d5b1d60821b82620010f1565b91505090565b60608167ffffffffffffffff81111562000c6f5762000c6f6200164b565b60405190808252806020026020018201604052801562000ca457816020015b606081526020019060019003908162000c8e5790505b50905060005b8281101562000d525762000d1c3085858481811062000ccd5762000ccd620018e6565b905060200281019062000ce19190620019f3565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250620012d692505050565b82828151811062000d315762000d31620018e6565b6020026020010181905250808062000d49906200194d565b91505062000caa565b505b92915050565b3362000d6562000b92565b6001600160a01b03161462000d8e5760405162461bcd60e51b8152600401620002f090620018b1565b62000315662d21aa37b5b2b760c91b8262000e9b565b3362000daf62000b92565b6001600160a01b03161462000dd85760405162461bcd60e51b8152600401620002f090620018b1565b6001600160a01b03811662000e3f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620002f0565b62000e4a81620011a4565b50565b3362000e5862000b92565b6001600160a01b03161462000e815760405162461bcd60e51b8152600401620002f090620018b1565b620003156f119d5d1d5c9955985b1d5955985d5b1d60821b825b600062000ea762001276565b600084815260209190915260408120546001600160a01b031691508162000f7c578260405162000ed7906200149e565b6001600160a01b039091168152602001604051809103906000f08015801562000f04573d6000803e3d6000fd5b5090508091508162000f1562001276565b60008681526020918252604080822080546001600160a01b0319166001600160a01b03958616179055519081528583169285169187917fd1beadd7ba3c8b48046a052671c2a5c0ebb8063834cd8035aaf3da097d85111a910160405180910390a462000d52565b8190506000816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000fc0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fe6919062001917565b604051631b2ce7f360e11b81526001600160a01b03868116600483015291925090831690633659cfe690602401600060405180830381600087803b1580156200102e57600080fd5b505af115801562001043573d6000803e3d6000fd5b50506040516001600160a01b03848116825280881693508616915087907fd1beadd7ba3c8b48046a052671c2a5c0ebb8063834cd8035aaf3da097d85111a9060200160405180910390a4505092915050565b60008062000d5460017f4abde63c3e81aefa5764b017968bc473e83e093d7e1a10247d19e0a3e412401862001a3d565b6000620010ec762632b73234b733a6b0b935b2ba21b7b73a3937b63632b960491b62001305565b905090565b600080620010fe62001276565b600085815260209190915260409020546001600160a01b031690508062001138576040516305e3dbc560e51b815260040160405180910390fd5b80836040516200114890620014ac565b6200115592919062001a53565b604051809103906000f08015801562001172573d6000803e3d6000fd5b50949350505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc62000325565b6000620011b0620012a6565b546001600160a01b0316905081620011c7620012a6565b80546001600160a01b0319166001600160a01b03928316179055604051838216918316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006200122162001095565b546001600160a01b0316146200124a576040516304b79d6360e51b815260040160405180910390fd5b806200125562001095565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60008062000d5460017fd25af282180dbd50d3ba79f291b857e1b411793b87e22e0b91e41df4deff13a962001a3d565b60008062000d5460017f9acda75aebd150dd434541a4747a6dc606f4f1a59662477e67daf1fc0bf9e0aa62001a3d565b6060620012fe838360405180606001604052806027815260200162002c3b602791396200136b565b9392505050565b6000806200131262001095565b600084815260019190910160205260409020546001600160a01b031690508062000d545760408051602081018590520160408051601f19818403018152908290526346e2ec9360e01b8252620002f09160040162001a79565b6060600080856001600160a01b0316856040516200138a919062001a8e565b600060405180830381855af49150503d8060008114620013c7576040519150601f19603f3d011682016040523d82523d6000602084013e620013cc565b606091505b5091509150620013df86838387620013e9565b9695505050505050565b606083156200145d57825160000362001455576001600160a01b0385163b620014555760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620002f0565b508162001469565b62001469838362001471565b949350505050565b815115620014825781518083602001fd5b8060405162461bcd60e51b8152600401620002f0919062001a79565b6106068062001aad83390190565b610b8880620020b383390190565b6001600160a01b038116811462000e4a57600080fd5b600060208284031215620014e357600080fd5b8135620012fe81620014ba565b6020808252825182820181905260009190848201906040850190845b818110156200152a578351835292840192918401916001016200150c565b50909695505050505050565b6000806000606084860312156200154c57600080fd5b505081359360208301359350604090920135919050565b600080604083850312156200157757600080fd5b82356200158481620014ba565b915060208301356200159681620014ba565b809150509250929050565b60008083601f840112620015b457600080fd5b50813567ffffffffffffffff811115620015cd57600080fd5b6020830191508360208260051b8501011115620015e957600080fd5b9250929050565b6000806000604084860312156200160657600080fd5b83356200161381620014ba565b9250602084013567ffffffffffffffff8111156200163057600080fd5b6200163e86828701620015a1565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200167357600080fd5b813567ffffffffffffffff808211156200169157620016916200164b565b604051601f8301601f19908116603f01168101908282118183101715620016bc57620016bc6200164b565b81604052838152866020858801011115620016d657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156200170f57600080fd5b853567ffffffffffffffff808211156200172857600080fd5b6200173689838a0162001661565b965060208801359150808211156200174d57600080fd5b506200175c8882890162001661565b945050604086013560ff811681146200177457600080fd5b925060608601356200178681620014ba565b949793965091946080013592915050565b600060208284031215620017aa57600080fd5b5035919050565b60008060208385031215620017c557600080fd5b823567ffffffffffffffff811115620017dd57600080fd5b620017eb85828601620015a1565b90969095509350505050565b60005b8381101562001814578181015183820152602001620017fa565b50506000910152565b6000815180845262001837816020860160208601620017f7565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620018a457603f19888603018452620018918583516200181d565b9450928501929085019060010162001872565b5092979650505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b8281526040602082015260006200146960408301846200181d565b6000602082840312156200192a57600080fd5b8151620012fe81620014ba565b634e487b7160e01b600052601160045260246000fd5b60006001820162001962576200196262001937565b5060010190565b6020808252601790820152762632b73234b733a6b0b935b2ba21b7b73a3937b63632b960491b604082015260600190565b600060018060a01b03808916835260c06020840152620019be60c08401896200181d565b8381036040850152620019d281896200181d565b60ff9790971660608501525093909316608082015260a00152509392505050565b6000808335601e1984360301811262001a0b57600080fd5b83018035915067ffffffffffffffff82111562001a2757600080fd5b602001915036819003821315620015e957600080fd5b8181038181111562000d545762000d5462001937565b6001600160a01b038316815260406020820181905260009062001469908301846200181d565b602081526000620012fe60208301846200181d565b6000825162001aa2818460208701620017f7565b919091019291505056fe608060405234801561001057600080fd5b5060405161060638038061060683398101604081905261002f9161018b565b61003833610047565b610041816100b4565b506101dc565b6000610051610157565b546001600160a01b0316905081610066610157565b80546001600160a01b0319166001600160a01b03928316179055604051838216918316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381163b6101355760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008061018560017f9acda75aebd150dd434541a4747a6dc606f4f1a59662477e67daf1fc0bf9e0aa6101bb565b92915050565b60006020828403121561019d57600080fd5b81516001600160a01b03811681146101b457600080fd5b9392505050565b8181038181111561018557634e487b7160e01b600052601160045260246000fd5b61041b806101eb6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100aa575b600080fd5b61006f61006a36600461035f565b6100bd565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610135565b61007e610170565b61006f6100b836600461035f565b610189565b336100c6610170565b6001600160a01b0316146100f55760405162461bcd60e51b81526004016100ec9061038f565b60405180910390fd5b6100fe81610229565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b3361013e610170565b6001600160a01b0316146101645760405162461bcd60e51b81526004016100ec9061038f565b61016e60006102be565b565b600061017a61032b565b546001600160a01b0316919050565b33610192610170565b6001600160a01b0316146101b85760405162461bcd60e51b81526004016100ec9061038f565b6001600160a01b03811661021d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ec565b610226816102be565b50565b6001600160a01b0381163b61029c5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100ec565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006102c861032b565b546001600160a01b03169050816102dd61032b565b80546001600160a01b0319166001600160a01b03928316179055604051838216918316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008061035960017f9acda75aebd150dd434541a4747a6dc606f4f1a59662477e67daf1fc0bf9e0aa6103c4565b92915050565b60006020828403121561037157600080fd5b81356001600160a01b038116811461038857600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8181038181111561035957634e487b7160e01b600052601160045260246000fdfea2646970667358221220f02c14aba19266da4bc7a522826a1c0f1d36778a7711ffcda8db59802cde044864736f6c63430008130033608060405260405162000b8838038062000b88833981016040819052620000269162000550565b818162000036828260006200004c565b506200004490503362000116565b50506200068f565b620000578362000188565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a2600082511180620000995750805b1562000111576200010f836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010891906200061e565b8362000316565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200015860008051602062000b41833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a1620001858162000345565b50565b6001600160a01b0381163b620001f35760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6200026b816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000236573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200025c91906200061e565b6001600160a01b03163b151590565b620002d25760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401620001ea565b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606200033e838360405180606001604052806027815260200162000b6160279139620003c3565b9392505050565b6001600160a01b038116620003ac5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608401620001ea565b8060008051602062000b41833981519152620002f5565b6060600080856001600160a01b031685604051620003e291906200063c565b600060405180830381855af49150503d80600081146200041f576040519150601f19603f3d011682016040523d82523d6000602084013e62000424565b606091505b509092509050620004388683838762000442565b9695505050505050565b60608315620004b6578251600003620004ae576001600160a01b0385163b620004ae5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620001ea565b5081620004c2565b620004c28383620004ca565b949350505050565b815115620004db5781518083602001fd5b8060405162461bcd60e51b8152600401620001ea91906200065a565b80516001600160a01b03811681146200050f57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620005475781810151838201526020016200052d565b50506000910152565b600080604083850312156200056457600080fd5b6200056f83620004f7565b60208401519092506001600160401b03808211156200058d57600080fd5b818501915085601f830112620005a257600080fd5b815181811115620005b757620005b762000514565b604051601f8201601f19908116603f01168101908382118183101715620005e257620005e262000514565b81604052828152886020848701011115620005fc57600080fd5b6200060f8360208301602088016200052a565b80955050505050509250929050565b6000602082840312156200063157600080fd5b6200033e82620004f7565b60008251620006508184602087016200052a565b9190910192915050565b60208152600082518060208401526200067b8160408501602087016200052a565b601f01601f19169190910160400192915050565b6104a2806200069f6000396000f3fe6080604052600436106100435760003560e01c80633659cfe61461005a5780635c60da1b1461007a5780638f283970146100ab578063f851a440146100cb57610052565b36610052576100506100e0565b005b6100506100e0565b34801561006657600080fd5b5061005061007536600461042b565b6100f2565b34801561008657600080fd5b5061008f61011d565b6040516001600160a01b03909116815260200160405180910390f35b3480156100b757600080fd5b506100506100c636600461042b565b61012c565b3480156100d757600080fd5b5061008f61014c565b6100f06100eb610156565b6101c1565b565b6100fa6101e5565b6001600160a01b031633036101155761011281610218565b50565b6101126100e0565b6000610127610156565b905090565b6101346101e5565b6001600160a01b031633036101155761011281610258565b60006101276101e5565b60006101606102ac565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561019d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610127919061044f565b3660008037600080366000845af43d6000803e8080156101e0573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b610221816102d4565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6102816101e5565b604080516001600160a01b03928316815291841660208301520160405180910390a16101128161038a565b60007fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50610209565b6001600160a01b0381163b6103465760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b0381166103ef5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b606482015260840161033d565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103610369565b6001600160a01b038116811461011257600080fd5b60006020828403121561043d57600080fd5b813561044881610416565b9392505050565b60006020828403121561046157600080fd5b81516104488161041656fea26469706673582212204e62bddcb8f6e0fda8d8f39f3a9f6853fd3da1fe787ae5fd82bdef44524fae0c64736f6c63430008130033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220288f25575c1271827e39ce2ddaf09ed8f5135ee7ea03f7aa91d5fe5cb414c2eb64736f6c63430008130033",
  "implementation": "0xbfD3311fac28e8eE1786881B41727AA7072a6281",
  "devdoc": {
    "events": {
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      }
    },
    "kind": "dev",
    "methods": {
      "changeBeaconProxyAdmins(address,address[])": {
        "params": {
          "destinations": "The destination contract addresses",
          "newAdmin": "The address of new admin"
        }
      },
      "deployLendingMarket(bytes32,uint256,uint256)": {
        "params": {
          "_cbLimitRange": "The circuit breaker limit range",
          "_ccy": "Main currency for new lending market",
          "_orderFeeRate": "The order fee rate received by protocol"
        },
        "returns": {
          "market": "The proxy contract address of created lending market"
        }
      },
      "deployZCToken(string,string,uint8,address,uint256)": {
        "params": {
          "_asset": "The address of the token's underlying asset",
          "_decimals": "The number of decimals the token uses",
          "_maturity": "The maturity of the token",
          "_name": "The name of the future value token",
          "_symbol": "The symbol of the future value token"
        },
        "returns": {
          "futureValueToken": "The proxy contract address of created future value token"
        }
      },
      "getBeaconProxyAddress(bytes32)": {
        "params": {
          "beaconName": "The cache name of the beacon proxy"
        },
        "returns": {
          "beaconProxyAddress": "The beacon proxy address"
        }
      },
      "getRevision()": {
        "returns": {
          "_0": "The revision number"
        }
      },
      "initialize(address,address)": {
        "details": "Function is invoked by the proxy contract when the contract is added to the ProxyController.",
        "params": {
          "_owner": "The address of the contract owner",
          "_resolver": "The address of the Address Resolver contract"
        }
      },
      "multicall(bytes[])": {
        "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
        "details": "Receives and executes a batch of function calls on this contract."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "requiredContracts()": {
        "details": "The contract name list is in `./libraries/Contracts.sol`."
      },
      "setFutureValueVaultImpl(address)": {
        "params": {
          "newImpl": "The address of implementation contract"
        }
      },
      "setLendingMarketImpl(address)": {
        "params": {
          "newImpl": "The address of implementation contract"
        }
      },
      "setZCTokenImpl(address)": {
        "params": {
          "newImpl": "The address of implementation contract"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "changeBeaconProxyAdmins(address,address[])": {
        "notice": "Updates admin addresses of beacon proxy contract"
      },
      "deployFutureValueVault()": {
        "notice": "Deploys new FutureValueVaultReverts on deployment market with existing currency and term"
      },
      "deployLendingMarket(bytes32,uint256,uint256)": {
        "notice": "Deploys new LendingMarket"
      },
      "deployZCToken(string,string,uint8,address,uint256)": {
        "notice": "Deploys new ZCToken"
      },
      "getBeaconProxyAddress(bytes32)": {
        "notice": "Gets the beacon proxy address to the selected name."
      },
      "getRevision()": {
        "notice": "Gets the revision number of the contract"
      },
      "initialize(address,address)": {
        "notice": "Initializes the contract."
      },
      "requiredContracts()": {
        "notice": "Returns the contract names used in this contract."
      },
      "setFutureValueVaultImpl(address)": {
        "notice": "Sets the implementation contract of FutureValueVault"
      },
      "setLendingMarketImpl(address)": {
        "notice": "Sets the implementation contract of LendingMarket"
      },
      "setZCTokenImpl(address)": {
        "notice": "Sets the implementation contract of ZCToken"
      }
    },
    "notice": "Implements the management of beacon proxy contracts. All beacon proxy contracts are deployed from this contract. This contract is also used to update the beacon proxy implementation.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1618,
        "contract": "contracts/protocol/BeaconProxyController.sol:BeaconProxyController",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 1621,
        "contract": "contracts/protocol/BeaconProxyController.sol:BeaconProxyController",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}