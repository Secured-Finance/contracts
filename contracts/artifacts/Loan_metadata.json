{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "moneyAddr",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "fxAddr",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "colAddr",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "loanMaker",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "colUser",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "enum MoneyMarket.Side",
						"name": "side",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "enum MoneyMarket.Ccy",
						"name": "ccy",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "term",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					}
				],
				"name": "ConfirmPayment",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "makerAddr",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "enum MoneyMarket.Side",
						"name": "side",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "enum MoneyMarket.Ccy",
						"name": "ccy",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "enum MoneyMarket.Term",
						"name": "term",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					}
				],
				"name": "MakeLoanDeal",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "enum MoneyMarket.Ccy",
						"name": "ccy",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "txHash",
						"type": "string"
					}
				],
				"name": "NoitfyPayment",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "loanMaker",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "colUser",
						"type": "address"
					},
					{
						"internalType": "enum MoneyMarket.Side",
						"name": "side",
						"type": "uint8"
					},
					{
						"internalType": "enum MoneyMarket.Ccy",
						"name": "ccy",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "term",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					}
				],
				"name": "confirmPayment",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllBooks",
				"outputs": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "loanId",
										"type": "uint256"
									},
									{
										"internalType": "address",
										"name": "lender",
										"type": "address"
									},
									{
										"internalType": "address",
										"name": "borrower",
										"type": "address"
									},
									{
										"internalType": "enum MoneyMarket.Side",
										"name": "side",
										"type": "uint8"
									},
									{
										"internalType": "enum MoneyMarket.Ccy",
										"name": "ccy",
										"type": "uint8"
									},
									{
										"internalType": "enum MoneyMarket.Term",
										"name": "term",
										"type": "uint8"
									},
									{
										"internalType": "uint256",
										"name": "amt",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "rate",
										"type": "uint256"
									},
									{
										"components": [
											{
												"internalType": "uint256",
												"name": "start",
												"type": "uint256"
											},
											{
												"internalType": "uint256",
												"name": "end",
												"type": "uint256"
											},
											{
												"internalType": "uint256[5]",
												"name": "notices",
												"type": "uint256[5]"
											},
											{
												"internalType": "uint256[5]",
												"name": "payments",
												"type": "uint256[5]"
											},
											{
												"internalType": "uint256[5]",
												"name": "amounts",
												"type": "uint256[5]"
											}
										],
										"internalType": "struct Loan.Schedule",
										"name": "schedule",
										"type": "tuple"
									},
									{
										"internalType": "uint256",
										"name": "pv",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "asOf",
										"type": "uint256"
									},
									{
										"internalType": "bool",
										"name": "isAvailable",
										"type": "bool"
									},
									{
										"internalType": "enum Loan.State",
										"name": "state",
										"type": "uint8"
									}
								],
								"internalType": "struct Loan.LoanItem[]",
								"name": "loans",
								"type": "tuple[]"
							},
							{
								"internalType": "uint256",
								"name": "loanNum",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isValue",
								"type": "bool"
							}
						],
						"internalType": "struct Loan.LoanBook[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllUsers",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					}
				],
				"name": "getLoanItem",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "loanId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "lender",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "borrower",
								"type": "address"
							},
							{
								"internalType": "enum MoneyMarket.Side",
								"name": "side",
								"type": "uint8"
							},
							{
								"internalType": "enum MoneyMarket.Ccy",
								"name": "ccy",
								"type": "uint8"
							},
							{
								"internalType": "enum MoneyMarket.Term",
								"name": "term",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "amt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "rate",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "start",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "end",
										"type": "uint256"
									},
									{
										"internalType": "uint256[5]",
										"name": "notices",
										"type": "uint256[5]"
									},
									{
										"internalType": "uint256[5]",
										"name": "payments",
										"type": "uint256[5]"
									},
									{
										"internalType": "uint256[5]",
										"name": "amounts",
										"type": "uint256[5]"
									}
								],
								"internalType": "struct Loan.Schedule",
								"name": "schedule",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "pv",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "asOf",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isAvailable",
								"type": "bool"
							},
							{
								"internalType": "enum Loan.State",
								"name": "state",
								"type": "uint8"
							}
						],
						"internalType": "struct Loan.LoanItem",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "getOneBook",
				"outputs": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "loanId",
										"type": "uint256"
									},
									{
										"internalType": "address",
										"name": "lender",
										"type": "address"
									},
									{
										"internalType": "address",
										"name": "borrower",
										"type": "address"
									},
									{
										"internalType": "enum MoneyMarket.Side",
										"name": "side",
										"type": "uint8"
									},
									{
										"internalType": "enum MoneyMarket.Ccy",
										"name": "ccy",
										"type": "uint8"
									},
									{
										"internalType": "enum MoneyMarket.Term",
										"name": "term",
										"type": "uint8"
									},
									{
										"internalType": "uint256",
										"name": "amt",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "rate",
										"type": "uint256"
									},
									{
										"components": [
											{
												"internalType": "uint256",
												"name": "start",
												"type": "uint256"
											},
											{
												"internalType": "uint256",
												"name": "end",
												"type": "uint256"
											},
											{
												"internalType": "uint256[5]",
												"name": "notices",
												"type": "uint256[5]"
											},
											{
												"internalType": "uint256[5]",
												"name": "payments",
												"type": "uint256[5]"
											},
											{
												"internalType": "uint256[5]",
												"name": "amounts",
												"type": "uint256[5]"
											}
										],
										"internalType": "struct Loan.Schedule",
										"name": "schedule",
										"type": "tuple"
									},
									{
										"internalType": "uint256",
										"name": "pv",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "asOf",
										"type": "uint256"
									},
									{
										"internalType": "bool",
										"name": "isAvailable",
										"type": "bool"
									},
									{
										"internalType": "enum Loan.State",
										"name": "state",
										"type": "uint8"
									}
								],
								"internalType": "struct Loan.LoanItem[]",
								"name": "loans",
								"type": "tuple[]"
							},
							{
								"internalType": "uint256",
								"name": "loanNum",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isValue",
								"type": "bool"
							}
						],
						"internalType": "struct Loan.LoanBook",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum MoneyMarket.Term",
						"name": "term",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "rate",
						"type": "uint256"
					}
				],
				"name": "getSchedule",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "start",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "end",
								"type": "uint256"
							},
							{
								"internalType": "uint256[5]",
								"name": "notices",
								"type": "uint256[5]"
							},
							{
								"internalType": "uint256[5]",
								"name": "payments",
								"type": "uint256[5]"
							},
							{
								"internalType": "uint256[5]",
								"name": "amounts",
								"type": "uint256[5]"
							}
						],
						"internalType": "struct Loan.Schedule",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "makerAddr",
						"type": "address"
					},
					{
						"internalType": "enum MoneyMarket.Side",
						"name": "side",
						"type": "uint8"
					},
					{
						"internalType": "enum MoneyMarket.Ccy",
						"name": "ccy",
						"type": "uint8"
					},
					{
						"internalType": "enum MoneyMarket.Term",
						"name": "term",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					}
				],
				"name": "makeLoanDeal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum MoneyMarket.Ccy",
						"name": "ccy",
						"type": "uint8"
					},
					{
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "txHash",
						"type": "string"
					}
				],
				"name": "notifyPayment",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "updateAllPV",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "updateAllState",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "loanMaker",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "colUser",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					}
				],
				"name": "updateState",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "updateUserPV",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"makeLoanDeal(address,uint8,uint8,uint8,uint256)": {
					"details": "Create a loan deal"
				},
				"updateAllPV()": {
					"details": "Mark to Market Section 1. get discount factors from moneyMarket 2. get PV for each scheduled cashflow 3. update LoanItem with total value of PV"
				},
				"updateState(address,address,uint256,uint256)": {
					"details": "State Management Section 1. update states 2. notify - confirm method to change states"
				}
			},
			"stateVariables": {
				"DAYS": {
					"details": "DAYCOUNTS CONVENTION TABLE for PAYMENTS and NOTICES"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/Loan.sol": "Loan"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/Collateral.sol": {
			"keccak256": "0x744c85ec18a87613c7cc7b6396ab5b800eec2d459c479f86868e8c049aa728f2",
			"license": "MIT",
			"urls": [
				"bzz-raw://86025ab2124929e7ed414ef3e0ead81ebc3b484bcc141f0d3e65b213a73d367c",
				"dweb:/ipfs/QmVuZe4A3wu3UcFbXdm7cVEDR4E4FiQ6ESALurh7o6VWnf"
			]
		},
		"localhost/FXMarket.sol": {
			"keccak256": "0x45cd70224e11b484d63dd54e12a39a193dfd65bfff38d098ccf6cb96286144c2",
			"license": "MIT",
			"urls": [
				"bzz-raw://bb4a7ccec57f43d534956c66b54df80305091f74dbea926f3087ef1fa7699d35",
				"dweb:/ipfs/QmUpSr8c7aZGsHBB51FkGrQNArdsRizxWb6afFmLgRuMaf"
			]
		},
		"localhost/Loan.sol": {
			"keccak256": "0xe2f39c5cf2c7208816163b4b6db82424f1f61b7ec83a71919ad8beb6d8f3bfcf",
			"license": "MIT",
			"urls": [
				"bzz-raw://77f9e1ca25aca6eae93e2ca0c21dfa5a65c0382d6680610585ecfe9fc4fbc793",
				"dweb:/ipfs/QmdggPSyX6b3gsHQQ4uwEKrX7BkyJZgZ77kHmooPXxp2JR"
			]
		},
		"localhost/MoneyMarket.sol": {
			"keccak256": "0xeca7cf67325b47fdff316944c6e89d01deb306b92394d06043e082954b8cb43e",
			"license": "MIT",
			"urls": [
				"bzz-raw://135b341521897c7b144895d59c728628946250ad30baa7de5d429064f646994f",
				"dweb:/ipfs/QmVpGDWWQR2MApo7KTjW7fkF2Gt9mBgaPkpAtugeHUcSe4"
			]
		}
	},
	"version": 1
}