{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "moneyAddr",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "fxAddr",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "colAddr",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "loanMaker",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "colUser",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "enum MoneyMarket.Side",
						"name": "side",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "enum MoneyMarket.Ccy",
						"name": "ccy",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "term",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					}
				],
				"name": "ConfirmPayment",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "makerAddr",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "enum MoneyMarket.Side",
						"name": "side",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "enum MoneyMarket.Ccy",
						"name": "ccy",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "enum MoneyMarket.Term",
						"name": "term",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					}
				],
				"name": "MakeLoanDeal",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "enum MoneyMarket.Ccy",
						"name": "ccy",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "txHash",
						"type": "string"
					}
				],
				"name": "NoitfyPayment",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "loanMaker",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "colUser",
						"type": "address"
					},
					{
						"internalType": "enum MoneyMarket.Side",
						"name": "side",
						"type": "uint8"
					},
					{
						"internalType": "enum MoneyMarket.Ccy",
						"name": "ccy",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "term",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					}
				],
				"name": "confirmPayment",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "loanId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "lender",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "borrower",
								"type": "address"
							},
							{
								"internalType": "enum MoneyMarket.Side",
								"name": "side",
								"type": "uint8"
							},
							{
								"internalType": "enum MoneyMarket.Ccy",
								"name": "ccy",
								"type": "uint8"
							},
							{
								"internalType": "enum MoneyMarket.Term",
								"name": "term",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "amt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "rate",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "start",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "end",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "uint256[5]",
										"name": "notices",
										"type": "uint256[5]"
									},
									{
										"internalType": "uint256[5]",
										"name": "payments",
										"type": "uint256[5]"
									},
									{
										"internalType": "uint256[5]",
										"name": "amounts",
										"type": "uint256[5]"
									},
									{
										"internalType": "bool[5]",
										"name": "isDone",
										"type": "bool[5]"
									}
								],
								"internalType": "struct Loan.Schedule",
								"name": "schedule",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "pv",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "asOf",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isAvailable",
								"type": "bool"
							},
							{
								"internalType": "enum Loan.State",
								"name": "state",
								"type": "uint8"
							}
						],
						"internalType": "struct Loan.LoanItem",
						"name": "item",
						"type": "tuple"
					},
					{
						"internalType": "enum MoneyMarket.Term",
						"name": "term",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "rate",
						"type": "uint256"
					}
				],
				"name": "fillSchedule",
				"outputs": [],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllBooks",
				"outputs": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "loanId",
										"type": "uint256"
									},
									{
										"internalType": "address",
										"name": "lender",
										"type": "address"
									},
									{
										"internalType": "address",
										"name": "borrower",
										"type": "address"
									},
									{
										"internalType": "enum MoneyMarket.Side",
										"name": "side",
										"type": "uint8"
									},
									{
										"internalType": "enum MoneyMarket.Ccy",
										"name": "ccy",
										"type": "uint8"
									},
									{
										"internalType": "enum MoneyMarket.Term",
										"name": "term",
										"type": "uint8"
									},
									{
										"internalType": "uint256",
										"name": "amt",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "rate",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "start",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "end",
										"type": "uint256"
									},
									{
										"components": [
											{
												"internalType": "uint256[5]",
												"name": "notices",
												"type": "uint256[5]"
											},
											{
												"internalType": "uint256[5]",
												"name": "payments",
												"type": "uint256[5]"
											},
											{
												"internalType": "uint256[5]",
												"name": "amounts",
												"type": "uint256[5]"
											},
											{
												"internalType": "bool[5]",
												"name": "isDone",
												"type": "bool[5]"
											}
										],
										"internalType": "struct Loan.Schedule",
										"name": "schedule",
										"type": "tuple"
									},
									{
										"internalType": "uint256",
										"name": "pv",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "asOf",
										"type": "uint256"
									},
									{
										"internalType": "bool",
										"name": "isAvailable",
										"type": "bool"
									},
									{
										"internalType": "enum Loan.State",
										"name": "state",
										"type": "uint8"
									}
								],
								"internalType": "struct Loan.LoanItem[]",
								"name": "loans",
								"type": "tuple[]"
							},
							{
								"internalType": "uint256",
								"name": "loanNum",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isValue",
								"type": "bool"
							}
						],
						"internalType": "struct Loan.LoanBook[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllUsers",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256[5]",
								"name": "notices",
								"type": "uint256[5]"
							},
							{
								"internalType": "uint256[5]",
								"name": "payments",
								"type": "uint256[5]"
							},
							{
								"internalType": "uint256[5]",
								"name": "amounts",
								"type": "uint256[5]"
							},
							{
								"internalType": "bool[5]",
								"name": "isDone",
								"type": "bool[5]"
							}
						],
						"internalType": "struct Loan.Schedule",
						"name": "schedule",
						"type": "tuple"
					}
				],
				"name": "getCurrentState",
				"outputs": [
					{
						"internalType": "enum Loan.State",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					}
				],
				"name": "getLoanItem",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "loanId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "lender",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "borrower",
								"type": "address"
							},
							{
								"internalType": "enum MoneyMarket.Side",
								"name": "side",
								"type": "uint8"
							},
							{
								"internalType": "enum MoneyMarket.Ccy",
								"name": "ccy",
								"type": "uint8"
							},
							{
								"internalType": "enum MoneyMarket.Term",
								"name": "term",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "amt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "rate",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "start",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "end",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "uint256[5]",
										"name": "notices",
										"type": "uint256[5]"
									},
									{
										"internalType": "uint256[5]",
										"name": "payments",
										"type": "uint256[5]"
									},
									{
										"internalType": "uint256[5]",
										"name": "amounts",
										"type": "uint256[5]"
									},
									{
										"internalType": "bool[5]",
										"name": "isDone",
										"type": "bool[5]"
									}
								],
								"internalType": "struct Loan.Schedule",
								"name": "schedule",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "pv",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "asOf",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isAvailable",
								"type": "bool"
							},
							{
								"internalType": "enum Loan.State",
								"name": "state",
								"type": "uint8"
							}
						],
						"internalType": "struct Loan.LoanItem",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "getOneBook",
				"outputs": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "loanId",
										"type": "uint256"
									},
									{
										"internalType": "address",
										"name": "lender",
										"type": "address"
									},
									{
										"internalType": "address",
										"name": "borrower",
										"type": "address"
									},
									{
										"internalType": "enum MoneyMarket.Side",
										"name": "side",
										"type": "uint8"
									},
									{
										"internalType": "enum MoneyMarket.Ccy",
										"name": "ccy",
										"type": "uint8"
									},
									{
										"internalType": "enum MoneyMarket.Term",
										"name": "term",
										"type": "uint8"
									},
									{
										"internalType": "uint256",
										"name": "amt",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "rate",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "start",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "end",
										"type": "uint256"
									},
									{
										"components": [
											{
												"internalType": "uint256[5]",
												"name": "notices",
												"type": "uint256[5]"
											},
											{
												"internalType": "uint256[5]",
												"name": "payments",
												"type": "uint256[5]"
											},
											{
												"internalType": "uint256[5]",
												"name": "amounts",
												"type": "uint256[5]"
											},
											{
												"internalType": "bool[5]",
												"name": "isDone",
												"type": "bool[5]"
											}
										],
										"internalType": "struct Loan.Schedule",
										"name": "schedule",
										"type": "tuple"
									},
									{
										"internalType": "uint256",
										"name": "pv",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "asOf",
										"type": "uint256"
									},
									{
										"internalType": "bool",
										"name": "isAvailable",
										"type": "bool"
									},
									{
										"internalType": "enum Loan.State",
										"name": "state",
										"type": "uint8"
									}
								],
								"internalType": "struct Loan.LoanItem[]",
								"name": "loans",
								"type": "tuple[]"
							},
							{
								"internalType": "uint256",
								"name": "loanNum",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isValue",
								"type": "bool"
							}
						],
						"internalType": "struct Loan.LoanBook",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "makerAddr",
						"type": "address"
					},
					{
						"internalType": "enum MoneyMarket.Side",
						"name": "side",
						"type": "uint8"
					},
					{
						"internalType": "enum MoneyMarket.Ccy",
						"name": "ccy",
						"type": "uint8"
					},
					{
						"internalType": "enum MoneyMarket.Term",
						"name": "term",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					}
				],
				"name": "makeLoanDeal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum MoneyMarket.Ccy",
						"name": "ccy",
						"type": "uint8"
					},
					{
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "txHash",
						"type": "string"
					}
				],
				"name": "notifyPayment",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "updateAllPV",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "updateAllState",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "loanMaker",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "colUser",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					}
				],
				"name": "updateState",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "updateUserPV",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getCurrentState((uint256[5],uint256[5],uint256[5],bool[5]))": {
					"details": "State Management Section 1. update states 2. notify - confirm method to change states"
				},
				"makeLoanDeal(address,uint8,uint8,uint8,uint256)": {
					"details": "Create a loan deal"
				},
				"updateAllPV()": {
					"details": "Mark to Market Section 1. get discount factors from moneyMarket 2. get PV for each scheduled cashflow 3. update LoanItem with total value of PV"
				}
			},
			"stateVariables": {
				"DAYS": {
					"details": "DAYCOUNTS CONVENTION TABLE for PAYMENTS and NOTICES"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/Loan.sol": "Loan"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/Collateral.sol": {
			"keccak256": "0x744c85ec18a87613c7cc7b6396ab5b800eec2d459c479f86868e8c049aa728f2",
			"license": "MIT",
			"urls": [
				"bzz-raw://86025ab2124929e7ed414ef3e0ead81ebc3b484bcc141f0d3e65b213a73d367c",
				"dweb:/ipfs/QmVuZe4A3wu3UcFbXdm7cVEDR4E4FiQ6ESALurh7o6VWnf"
			]
		},
		"localhost/FXMarket.sol": {
			"keccak256": "0x45cd70224e11b484d63dd54e12a39a193dfd65bfff38d098ccf6cb96286144c2",
			"license": "MIT",
			"urls": [
				"bzz-raw://bb4a7ccec57f43d534956c66b54df80305091f74dbea926f3087ef1fa7699d35",
				"dweb:/ipfs/QmUpSr8c7aZGsHBB51FkGrQNArdsRizxWb6afFmLgRuMaf"
			]
		},
		"localhost/Loan.sol": {
			"keccak256": "0xe566fb9d9f012af36d0a03832f15703ae3d89579cf79994417e73441af9cc386",
			"license": "MIT",
			"urls": [
				"bzz-raw://8526d63f501a5d0d888d0529fc59ca540cdcda9412f33256b4ac37869cc34b66",
				"dweb:/ipfs/QmeaibNASCYFLqvYjek66wSw2m3R5yQn4748XDrpcsWWRh"
			]
		},
		"localhost/MoneyMarket.sol": {
			"keccak256": "0x42a49087ed858fdea4d622090f52b1015229402b1e52009b6128dfac314ddfe7",
			"license": "MIT",
			"urls": [
				"bzz-raw://4b2eaa154e336f8d4f09a360a0fb32fa9e034a38ca00358c43e03b26afd94bbd",
				"dweb:/ipfs/Qmf1c4on6C9T1VsVFEk9bzNqF3RoXUuYLUP4d1oAVL2bQR"
			]
		}
	},
	"version": 1
}