name: Publish to NPM

on:
  # workflow_run:
  #   workflows: ['Deploy Smart Contracts']
  #   types: [completed]
  #   branches:
  #     - main
  #     - develop
  # For testing
  push:
    branches:
      - SF-18-add-publishing-workflow

jobs:
  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.MACHINE_USER_APP_ID }}
          private_key: ${{ secrets.MACHINE_USER_PRIVATE_KEY }}
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: 'Setup npm'
        run: |
          npm set @secured-finance:registry=https://npm.pkg.github.com
          npm set "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}"
      - name: Version and Publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "SF Machine User[bot]"
          git config user.email "${{ secrets.MACHINE_USER_APP_ID }}+sf-machine-user[bot]@users.noreply.github.com"
          npm config set git-tag-version=false
          if [ ${{ steps.extract_branch.outputs.branch }} = main ]; then
            npm version major
          else
            npm version prerelease --preid beta
          fi
          npm publish
      - name: Commit and push
        shell: bash
        run: |
          git add .
          git commit -m "chore(release): update release notes and package versions"
          git push
      - name: Merge main into develop
        shell: bash
        if: steps.extract_branch.outputs.branch == 'main'
        run: |
          git switch develop
          git merge main
          git push
