name: Deploy and Publish

on:
  push:
    branches:
      - develop
  workflow_run:
    workflows: ['Merge into main', 'Reset smart contracts']
    types: [completed]
    branches:
      - main
      - develop

jobs:
  test:
    name: Test on a Fork
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'secured-finance-machine-user[bot]' && github.event.workflow.name != 'Reset Smart Contracts'}}
    steps:
      - name: Check conditional job statues
        if: ${{ github.event.workflow_run.conclusion == 'failure' }}
        run: exit 1
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Set env for development environment
        if: ${{ github.event.workflow.name != 'Merge into main' }}
        run: |
          echo "NETWORK=development" >> $GITHUB_ENV
          echo "UNISWAP_SWAP_ROUTER_CONTRACT=${{ secrets.DEV_UNISWAP_SWAP_ROUTER_CONTRACT }}" >> $GITHUB_ENV
          echo "TOKEN_EFIL=${{ secrets.DEV_TOKEN_EFIL }}" >> $GITHUB_ENV
          echo "TOKEN_USDC=${{ secrets.DEV_TOKEN_USDC }}" >> $GITHUB_ENV
          echo "TOKEN_WBTC=${{ secrets.DEV_TOKEN_WBTC }}" >> $GITHUB_ENV
          echo "TOKEN_WETH=${{ secrets.DEV_TOKEN_WETH }}" >> $GITHUB_ENV
          echo "PRIVATE_KEY=${{ secrets.DEV_PRIVATE_KEY }}" >> $GITHUB_ENV
          echo "ALCHEMY_API_KEY=${{ secrets.DEV_ALCHEMY_API_KEY }}" >> $GITHUB_ENV
          echo "TENDERLY_USER=${{ secrets.DEV_TENDERLY_USER }}" >> $GITHUB_ENV
          echo "TENDERLY_PROJECT=${{ secrets.DEV_TENDERLY_PROJECT }}" >> $GITHUB_ENV
          echo "TENDERLY_ACCESS_KEY=${{ secrets.DEV_TENDERLY_ACCESS_KEY }}" >> $GITHUB_ENV
      - name: Set env for staging environment
        if: ${{ github.event.workflow.name == 'Merge into main' }}
        run: |
          echo "NETWORK=staging" >> $GITHUB_ENV
          echo "UNISWAP_SWAP_ROUTER_CONTRACT=${{ secrets.STG_UNISWAP_SWAP_ROUTER_CONTRACT }}" >> $GITHUB_ENV
          echo "TOKEN_EFIL=${{ secrets.STG_TOKEN_EFIL }}" >> $GITHUB_ENV
          echo "TOKEN_USDC=${{ secrets.STG_TOKEN_USDC }}" >> $GITHUB_ENV
          echo "TOKEN_WBTC=${{ secrets.STG_TOKEN_WBTC }}" >> $GITHUB_ENV
          echo "TOKEN_WETH=${{ secrets.STG_TOKEN_WETH }}" >> $GITHUB_ENV
          echo "PRIVATE_KEY=${{ secrets.STG_PRIVATE_KEY }}" >> $GITHUB_ENV
          echo "ALCHEMY_API_KEY=${{ secrets.STG_ALCHEMY_API_KEY }}" >> $GITHUB_ENV
          echo "TENDERLY_USER=${{ secrets.STG_TENDERLY_USER }}" >> $GITHUB_ENV
          echo "TENDERLY_PROJECT=${{ secrets.STG_TENDERLY_PROJECT }}" >> $GITHUB_ENV
          echo "TENDERLY_ACCESS_KEY=${{ secrets.STG_TENDERLY_ACCESS_KEY }}" >> $GITHUB_ENV
      - name: Install Dependencies
        run: npm ci
      - name: Build Smart Contracts
        run: npm run compile
      - name: Create a fork environment
        run: |
          FORK_ID=$(npm run fork $NETWORK | tail -n 1)
          echo "fork id is $FORK_ID"
          echo "FORK_ID=$FORK_ID" >> $GITHUB_ENV
      - name: Deploy for fork environment
        run: npm run deploy $NETWORK
        env:
          FORK_RPC_ENDPOINT: https://rpc.tenderly.co/fork/${{ env.FORK_ID }}
      - name: Check diff
        shell: bash
        id: diff
        run: |
          echo "::set-output name=count::$(git diff --staged --name-only . | wc -l)"
      - name: Run a Loan Test on fork environment
        if: steps.diff.outputs.count > 0
        env:
          USE_DEFAULT_ACCOUNTS: true
          FORK_RPC_ENDPOINT: https://rpc.tenderly.co/fork/${{ env.FORK_ID }}
        run: npx hardhat --network $NETWORK test "scripts/zc-e2e.ts" --bail
      - name: Delete the fork environment
        run: npm run unfork --forkid $FORK_ID
  deploy:
    name: Deploy Smart Contracts
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.MACHINE_USER_APP_ID }}
          private_key: ${{ secrets.MACHINE_USER_PRIVATE_KEY }}
      - uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Install Dependencies
        run: npm ci
      - name: Build Smart Contracts
        run: npm run compile
      - name: Deploy for development environment
        if: ${{ github.event.workflow.name != 'Merge into main' }}
        env:
          PRIVATE_KEY: ${{ secrets.DEV_PRIVATE_KEY }}
          ALCHEMY_API_KEY: ${{ secrets.DEV_ALCHEMY_API_KEY }}
          UNISWAP_SWAP_ROUTER_CONTRACT: ${{ secrets.DEV_UNISWAP_SWAP_ROUTER_CONTRACT }}
          UNISWAP_SWAP_QUOTER_CONTRACT: ${{ secrets.DEV_UNISWAP_SWAP_QUOTER_CONTRACT }}
          TOKEN_EFIL: ${{ secrets.DEV_TOKEN_EFIL }}
          TOKEN_USDC: ${{ secrets.DEV_TOKEN_USDC }}
          TOKEN_WBTC: ${{ secrets.DEV_TOKEN_WBTC }}
          TOKEN_WETH: ${{ secrets.DEV_TOKEN_WETH }}
        run: npm run deploy development
      - name: Deploy for staging environment
        if: ${{ github.event.workflow.name == 'Merge into main' }}
        env:
          PRIVATE_KEY: ${{ secrets.STG_PRIVATE_KEY }}
          ALCHEMY_API_KEY: ${{ secrets.STG_ALCHEMY_API_KEY }}
          UNISWAP_SWAP_ROUTER_CONTRACT: ${{ secrets.STG_UNISWAP_SWAP_ROUTER_CONTRACT }}
          UNISWAP_SWAP_QUOTER_CONTRACT: ${{ secrets.STG_UNISWAP_SWAP_QUOTER_CONTRACT }}
          TOKEN_EFIL: ${{ secrets.STG_TOKEN_EFIL }}
          TOKEN_USDC: ${{ secrets.STG_TOKEN_USDC }}
          TOKEN_WBTC: ${{ secrets.STG_TOKEN_WBTC }}
          TOKEN_WETH: ${{ secrets.STG_TOKEN_WETH }}
        run: npm run deploy staging
      - run: |
          git add .
      - name: Check diff
        shell: bash
        id: diff
        run: |
          echo "::set-output name=count::$(git diff --staged --name-only . | wc -l)"
      - name: Commit and push
        shell: bash
        if: steps.diff.outputs.count > 0
        run: |
          git config user.name "SF Machine User[bot]"
          git config user.email "${{ secrets.MACHINE_USER_APP_ID }}+sf-machine-user[bot]@users.noreply.github.com"
          git commit -m "chore: update smart contracts"
          git push
  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    if: ${{ always() && github.actor != 'secured-finance-machine-user[bot]' && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'canceled') }}
    needs: [test, deploy]
    steps:
      - name: Check conditional job statues
        if: ${{ github.event.workflow_run.conclusion == 'failure' }}
        run: exit 1
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.MACHINE_USER_APP_ID }}
          private_key: ${{ secrets.MACHINE_USER_PRIVATE_KEY }}
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: 'Setup for npm'
        run: |
          npm set @secured-finance:registry=https://npm.pkg.github.com
          npm set "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}"
      - name: 'Setup for git'
        run: |
          git config user.name "SF Machine User[bot]"
          git config user.email "${{ secrets.MACHINE_USER_APP_ID }}+sf-machine-user[bot]@users.noreply.github.com"
      - name: Update documents
        if: ${{ github.event.workflow.name != 'Merge into main' }}
        run: |
          npm run docgen
          git add .
      - name: Check diff
        shell: bash
        id: diff
        run: |
          echo "::set-output name=count::$(git diff --staged --name-only . | wc -l)"
      - name: Commit
        shell: bash
        if: steps.diff.outputs.count > 0
        run: |
          git commit -m "chore: update docs"
      - name: Version and Publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ '${{ github.event.workflow.name }}' = 'Merge into main' ]; then
            npm version patch -m "chore: upgrade to %s"
          else
            npm version prerelease --preid beta -m "chore: upgrade to %s"
          fi
          npm publish
      - name: Push
        shell: bash
        run: git push
      - name: Merge main into develop
        shell: bash
        if: github.event.workflow.name == 'Merge into main'
        run: |
          git switch develop
          git merge main
          git push
